[tool.poetry]
name = "bluecast"
version = "1.6.2"
description = "A lightweight and fast automl framework"
authors = ["Thomas Mei√üner <meissnercorporation@gmx.de>"]
license = "GPL-3.0-only"
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
homepage = "https://github.com/ThomasMeissnerDS/BlueCast"
repository = "https://github.com/ThomasMeissnerDS/BlueCast"
readme = "README.md"
packages = [
    { include = "bluecast" },
]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"# lower not possible: https://github.com/python-poetry/poetry/issues/5628
category_encoders = "^2.3.0"
dill = "^0.3.3"
# fastparquet = ">= 2023.1.0"
matplotlib = ">=3.1.3" # pinned due to cannot import _png error
numpy = "< 2.0.0"  # see: https://github.com/shap/shap/pull/3704,  ">=2.0.4" requires Python 3.10
optuna = ">=2.8.0"
optuna-integration = ">=3.0"
pandas = ">=1.1.5"
plotly = "^5"
polars = ">= 0.20.0, != 1.7.0"
pyarrow = "<17.0.0"
pydantic = ">=1.1.0"
seaborn = ">=0.10.0"
scikit-learn = ">=1.0.1"
shap = ">=0.45.0" # versions of 0.39 and less require numpy 1.23 and less, pined to 0.44.1 because otherwise Sshap print dependence instead of summary plot
s3fs = ">=2022.1.0"
xgboost = "<2.2.0" # from here saving as binary is not default anymore

[tool.poetry.group.dev.dependencies]
recommonmark = ">=0.7.1"
jupyter-server = "^2.0.0"
jupyter-core = ">=5.0.0"
ipython = ">=7.23.1, < 8.0.0"
ipywidgets = ">=7.4.2"
myst-parser = ">=0.14.0, <1.0.0"
notebook = "=7.1.3"
nbclient = ">=0.7.0"
pre-commit = "^2.9.3"
pytest = "^6.2.5"
pytest-mock = ">=3.7.0"
setuptools = "^51.1.0"
twine = "^1.13.0"
wheel = "^0.36.2"
sphinx = ">=6.2.1"
sphinx-autobuild = ">=2020.9.1"
sphinx-autoapi = ">=2.0.1.1"
sphinx-rtd-theme = "^1.0.0"

[tool.poetry.extras]
jupyter = ["ipython", "jupyter_core", "notebook"]
full = ["ipython", "jupyter_core", "notebook"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
