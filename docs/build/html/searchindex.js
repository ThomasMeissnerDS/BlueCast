Search.setIndex({"docnames": ["autoapi/bluecast/blueprints/cast/index", "autoapi/bluecast/blueprints/cast_cv/index", "autoapi/bluecast/blueprints/cast_cv_regression/index", "autoapi/bluecast/blueprints/cast_regression/index", "autoapi/bluecast/blueprints/index", "autoapi/bluecast/config/base_classes/index", "autoapi/bluecast/config/index", "autoapi/bluecast/config/training_config/index", "autoapi/bluecast/eda/analyse/index", "autoapi/bluecast/eda/data_leakage_checks/index", "autoapi/bluecast/eda/index", "autoapi/bluecast/evaluation/eval_metrics/index", "autoapi/bluecast/evaluation/index", "autoapi/bluecast/evaluation/shap_values/index", "autoapi/bluecast/experimentation/index", "autoapi/bluecast/experimentation/tracking/index", "autoapi/bluecast/general_utils/general_utils/index", "autoapi/bluecast/general_utils/index", "autoapi/bluecast/index", "autoapi/bluecast/ml_modelling/base_classes/index", "autoapi/bluecast/ml_modelling/index", "autoapi/bluecast/ml_modelling/xgboost/index", "autoapi/bluecast/ml_modelling/xgboost_regression/index", "autoapi/bluecast/monitoring/data_monitoring/index", "autoapi/bluecast/monitoring/index", "autoapi/bluecast/preprocessing/category_encoder_orchestration/index", "autoapi/bluecast/preprocessing/custom/index", "autoapi/bluecast/preprocessing/datetime_features/index", "autoapi/bluecast/preprocessing/encode_target_labels/index", "autoapi/bluecast/preprocessing/feature_selection/index", "autoapi/bluecast/preprocessing/feature_types/index", "autoapi/bluecast/preprocessing/index", "autoapi/bluecast/preprocessing/nulls_and_infs/index", "autoapi/bluecast/preprocessing/onehot_encoding/index", "autoapi/bluecast/preprocessing/schema_checks/index", "autoapi/bluecast/preprocessing/target_encoding/index", "autoapi/bluecast/preprocessing/train_test_split/index", "autoapi/bluecast/tests/index", "autoapi/bluecast/tests/make_data/create_data/index", "autoapi/bluecast/tests/make_data/index", "autoapi/bluecast/tests/test_analyse/index", "autoapi/bluecast/tests/test_cast/index", "autoapi/bluecast/tests/test_cast_cv/index", "autoapi/bluecast/tests/test_cast_cv_multiclass/index", "autoapi/bluecast/tests/test_cast_cv_regression/index", "autoapi/bluecast/tests/test_cast_regression/index", "autoapi/bluecast/tests/test_category_encoder_orchestrator/index", "autoapi/bluecast/tests/test_check_gpu_support/index", "autoapi/bluecast/tests/test_custom_processing_base_class/index", "autoapi/bluecast/tests/test_data_leakage_checks/index", "autoapi/bluecast/tests/test_data_monitoring/index", "autoapi/bluecast/tests/test_datetime_features/index", "autoapi/bluecast/tests/test_encode_target_labels/index", "autoapi/bluecast/tests/test_experiment_tracker/index", "autoapi/bluecast/tests/test_feature_type_detector/index", "autoapi/bluecast/tests/test_fine_tune/index", "autoapi/bluecast/tests/test_load_for_production/index", "autoapi/bluecast/tests/test_nulls_and_infs/index", "autoapi/bluecast/tests/test_onehot_encoding/index", "autoapi/bluecast/tests/test_save_to_production/index", "autoapi/bluecast/tests/test_schema_checks/index", "autoapi/bluecast/tests/test_shap_explanations/index", "autoapi/bluecast/tests/test_target_encoding_binary/index", "autoapi/bluecast/tests/test_target_encoding_multiclass/index", "autoapi/bluecast/tests/test_train_test_split/index", "autoapi/conf/index", "autoapi/index", "index"], "filenames": ["autoapi/bluecast/blueprints/cast/index.rst", "autoapi/bluecast/blueprints/cast_cv/index.rst", "autoapi/bluecast/blueprints/cast_cv_regression/index.rst", "autoapi/bluecast/blueprints/cast_regression/index.rst", "autoapi/bluecast/blueprints/index.rst", "autoapi/bluecast/config/base_classes/index.rst", "autoapi/bluecast/config/index.rst", "autoapi/bluecast/config/training_config/index.rst", "autoapi/bluecast/eda/analyse/index.rst", "autoapi/bluecast/eda/data_leakage_checks/index.rst", "autoapi/bluecast/eda/index.rst", "autoapi/bluecast/evaluation/eval_metrics/index.rst", "autoapi/bluecast/evaluation/index.rst", "autoapi/bluecast/evaluation/shap_values/index.rst", "autoapi/bluecast/experimentation/index.rst", "autoapi/bluecast/experimentation/tracking/index.rst", "autoapi/bluecast/general_utils/general_utils/index.rst", "autoapi/bluecast/general_utils/index.rst", "autoapi/bluecast/index.rst", "autoapi/bluecast/ml_modelling/base_classes/index.rst", "autoapi/bluecast/ml_modelling/index.rst", "autoapi/bluecast/ml_modelling/xgboost/index.rst", "autoapi/bluecast/ml_modelling/xgboost_regression/index.rst", "autoapi/bluecast/monitoring/data_monitoring/index.rst", "autoapi/bluecast/monitoring/index.rst", "autoapi/bluecast/preprocessing/category_encoder_orchestration/index.rst", "autoapi/bluecast/preprocessing/custom/index.rst", "autoapi/bluecast/preprocessing/datetime_features/index.rst", "autoapi/bluecast/preprocessing/encode_target_labels/index.rst", "autoapi/bluecast/preprocessing/feature_selection/index.rst", "autoapi/bluecast/preprocessing/feature_types/index.rst", "autoapi/bluecast/preprocessing/index.rst", "autoapi/bluecast/preprocessing/nulls_and_infs/index.rst", "autoapi/bluecast/preprocessing/onehot_encoding/index.rst", "autoapi/bluecast/preprocessing/schema_checks/index.rst", "autoapi/bluecast/preprocessing/target_encoding/index.rst", "autoapi/bluecast/preprocessing/train_test_split/index.rst", "autoapi/bluecast/tests/index.rst", "autoapi/bluecast/tests/make_data/create_data/index.rst", "autoapi/bluecast/tests/make_data/index.rst", "autoapi/bluecast/tests/test_analyse/index.rst", "autoapi/bluecast/tests/test_cast/index.rst", "autoapi/bluecast/tests/test_cast_cv/index.rst", "autoapi/bluecast/tests/test_cast_cv_multiclass/index.rst", "autoapi/bluecast/tests/test_cast_cv_regression/index.rst", "autoapi/bluecast/tests/test_cast_regression/index.rst", "autoapi/bluecast/tests/test_category_encoder_orchestrator/index.rst", "autoapi/bluecast/tests/test_check_gpu_support/index.rst", "autoapi/bluecast/tests/test_custom_processing_base_class/index.rst", "autoapi/bluecast/tests/test_data_leakage_checks/index.rst", "autoapi/bluecast/tests/test_data_monitoring/index.rst", "autoapi/bluecast/tests/test_datetime_features/index.rst", "autoapi/bluecast/tests/test_encode_target_labels/index.rst", "autoapi/bluecast/tests/test_experiment_tracker/index.rst", "autoapi/bluecast/tests/test_feature_type_detector/index.rst", "autoapi/bluecast/tests/test_fine_tune/index.rst", "autoapi/bluecast/tests/test_load_for_production/index.rst", "autoapi/bluecast/tests/test_nulls_and_infs/index.rst", "autoapi/bluecast/tests/test_onehot_encoding/index.rst", "autoapi/bluecast/tests/test_save_to_production/index.rst", "autoapi/bluecast/tests/test_schema_checks/index.rst", "autoapi/bluecast/tests/test_shap_explanations/index.rst", "autoapi/bluecast/tests/test_target_encoding_binary/index.rst", "autoapi/bluecast/tests/test_target_encoding_multiclass/index.rst", "autoapi/bluecast/tests/test_train_test_split/index.rst", "autoapi/conf/index.rst", "autoapi/index.rst", "index.md"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.blueprints.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.blueprints.cast_cv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.blueprints.cast_cv_regression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.blueprints.cast_regression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.blueprints</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.config.base_classes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.config.training_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.eda.analyse</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.eda.data_leakage_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.eda</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.evaluation.eval_metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.evaluation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.evaluation.shap_values</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.experimentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.experimentation.tracking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.general_utils.general_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.general_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.ml_modelling.base_classes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.ml_modelling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.ml_modelling.xgboost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.ml_modelling.xgboost_regression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.monitoring.data_monitoring</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.monitoring</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.category_encoder_orchestration</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.custom</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.datetime_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.encode_target_labels</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.feature_selection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.feature_types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.nulls_and_infs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.onehot_encoding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.schema_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.target_encoding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.train_test_split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.make_data.create_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.make_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_analyse</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_cast_cv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_cast_cv_multiclass</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_cast_cv_regression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_cast_regression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_category_encoder_orchestrator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_check_gpu_support</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_custom_processing_base_class</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_data_leakage_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_data_monitoring</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_datetime_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_encode_target_labels</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_experiment_tracker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_feature_type_detector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_fine_tune</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_load_for_production</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_nulls_and_infs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_onehot_encoding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_save_to_production</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_schema_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_shap_explanations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_target_encoding_binary</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_target_encoding_multiclass</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_train_test_split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">conf</span></code>", "API Reference", "BlueCast"], "terms": {"run": [0, 3, 7, 67], "fulli": [0, 3], "configur": [0, 3, 7], "classif": [0, 3, 8, 11, 21, 22, 35], "custom": [0, 1, 2, 3, 7, 15, 18, 21, 22, 29, 31, 44, 66], "via": [0, 3, 7, 16], "attribut": [0, 3, 67], "i": [0, 1, 2, 3, 7, 8, 9, 11, 13, 15, 19, 23, 25, 26, 28, 29, 30, 32, 33, 35, 36, 41, 42, 43, 44, 45, 47, 67], "possibl": [0, 3, 7, 36, 67], "config": [0, 1, 2, 3, 15, 18, 21, 22, 66, 67], "can": [0, 1, 2, 3, 7, 13, 15, 21, 22, 23, 26, 28, 30, 32, 35, 36, 44, 67], "instanti": [0, 3, 67], "provid": [0, 1, 2, 3, 8, 9, 16, 21, 22, 23, 30, 36, 47, 67], "chang": [0, 3, 7, 23, 67], "xgboost": [0, 1, 2, 3, 7, 13, 15, 18, 20, 22, 32, 66, 67], "train": [0, 1, 2, 3, 7, 8, 13, 15, 21, 22, 26, 33, 34, 35, 36, 44, 47], "default": [0, 3, 7, 11, 15, 21, 22, 23, 29, 67], "hyperparamet": [0, 3, 7, 15, 19, 21, 22, 41, 42, 43, 44, 45, 67], "search": [0, 3, 7, 21, 22, 67], "space": [0, 3, 7, 21, 22, 23, 67], "rel": [0, 3], "light": [0, 3], "weight": [0, 3, 21, 22], "speed": [0, 3], "up": [0, 3], "prototyp": [0, 3], "deal": [0, 3, 35], "binari": [0, 1, 3, 8, 11, 21, 35, 67], "multi": [0, 3, 7], "problem": [0, 3, 11, 67], "tune": [0, 3, 7, 19, 21, 22, 26, 41, 42, 43, 44, 45, 67], "switch": [0, 3, 7], "off": [0, 3], "even": [0, 3], "strengthen": [0, 3], "cross": [0, 3, 7, 15, 29], "valid": [0, 3, 7, 15, 29], "thi": [0, 1, 2, 3, 7, 9, 11, 15, 16, 21, 22, 23, 26, 28, 30, 32, 35, 36, 44, 47, 66, 67], "behaviour": [0, 3, 67], "control": [0, 3, 67], "from": [0, 3, 5, 7, 15, 21, 22, 26, 27, 28, 35, 44, 67], "training_config": [0, 1, 2, 3, 5, 6, 15, 18, 21, 22, 66, 67], "class_problem": [0, 1, 2, 3, 8, 21, 22, 29, 67], "liter": [0, 1, 2, 3, 5, 8, 15, 21, 22, 67], "multiclass": [0, 1, 8, 21, 35, 67], "cat_column": [0, 3, 25, 30, 33, 35, 67], "list": [0, 3, 8, 9, 21, 22, 25, 27, 30, 33, 35], "str": [0, 1, 2, 3, 5, 7, 8, 9, 11, 15, 16, 21, 22, 23, 25, 27, 28, 30, 33, 35, 36, 67], "float": [0, 1, 2, 3, 5, 7, 8, 9, 15, 21, 22, 23, 25, 27, 28, 30, 32, 33, 35, 36, 67], "int": [0, 3, 5, 7, 8, 9, 11, 15, 21, 22, 23, 25, 27, 28, 29, 30, 32, 33, 35, 36, 38, 67], "none": [0, 1, 2, 3, 5, 7, 8, 9, 11, 15, 16, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 36, 41, 42, 43, 44, 45, 67], "date_column": [0, 3, 27, 30], "time_split_column": [0, 3], "ml_model": [0, 1, 2, 3, 18, 41, 42, 43, 44, 45, 66, 67], "xgboostmodel": [0, 1, 2, 21], "ani": [0, 1, 2, 3, 5, 7, 8, 11, 13, 15, 16, 19, 21, 22, 26, 44, 65, 67], "custom_in_fold_preprocessor": [0, 1, 2, 3, 21, 22, 67], "preprocess": [0, 1, 2, 3, 7, 18, 21, 22, 44, 66], "custompreprocess": [0, 1, 2, 3, 21, 22, 26, 29, 44, 67], "custom_last_mile_comput": [0, 1, 2, 3, 67], "custom_preprocessor": [0, 1, 2, 3, 67], "custom_feature_selector": [0, 1, 2, 3, 67], "feature_select": [0, 1, 2, 3, 18, 31, 66, 67], "rfecvselector": [0, 1, 2, 3, 29, 67], "conf_train": [0, 1, 2, 3, 21, 22, 67], "trainingconfig": [0, 1, 2, 3, 5, 7, 15, 21, 22, 67], "conf_xgboost": [0, 1, 2, 3, 21, 22, 67], "xgboosttuneparamsconfig": [0, 1, 7, 21, 67], "conf_params_xgboost": [0, 1, 2, 3, 21, 22], "xgboostfinalparamconfig": [0, 1, 2, 3, 7, 21, 22, 67], "experiment_track": [0, 1, 2, 3, 21, 22, 53, 67], "experiment": [0, 1, 2, 3, 18, 21, 22, 66, 67], "track": [0, 1, 2, 3, 14, 18, 21, 22, 66, 67], "experimenttrack": [0, 1, 2, 3, 5, 7, 15, 21, 22, 67], "param": [0, 1, 2, 3, 7, 8, 11, 13, 16, 21, 22, 23, 25, 26, 27, 44, 67], "take": [0, 3, 16, 27, 30, 67], "string": [0, 1, 2, 3, 8, 16, 23], "contain": [0, 3, 8, 9, 15, 16, 21, 22, 23, 25, 26, 32, 36, 66, 67], "type": [0, 3, 7, 16, 23, 30, 67], "either": [0, 25], "target_column": [0, 3, 9], "name": [0, 1, 2, 3, 7, 8, 9, 15, 16, 25, 30], "target": [0, 1, 2, 3, 7, 8, 9, 21, 25, 26, 28, 29, 35, 44, 67], "column": [0, 1, 2, 3, 8, 9, 21, 22, 23, 25, 27, 28, 30, 33, 34, 35, 67], "categor": [0, 3, 7, 8, 9, 23, 25, 28, 30, 33, 35], "If": [0, 3, 7, 8, 9, 19, 23, 25, 26, 30, 41, 42, 43, 44, 45, 67], "infer": [0, 3, 26, 29, 30, 44], "automat": [0, 3, 15, 67], "paramet": [0, 1, 2, 3, 7, 8, 9, 11, 15, 23, 47, 67], "date": [0, 3, 27], "time": [0, 3, 7, 21, 22, 36, 67], "split": [0, 1, 2, 3, 7, 15, 36, 67], "data": [0, 1, 2, 3, 7, 8, 9, 13, 19, 21, 22, 23, 30, 36, 41, 42, 43, 44, 45, 47, 59], "order": [0, 3, 8, 36], "do": [0, 3, 67], "random": [0, 3, 7, 8, 47, 67], "instead": [0, 3, 21, 22, 67], "an": [0, 3, 7, 8, 15, 21, 22, 23, 26, 33, 34, 44, 67], "instanc": [0, 1, 2, 3, 15, 16, 67], "one": [0, 3, 15, 23, 67], "api": [0, 3, 23], "pass": [0, 3, 7, 8, 23, 26, 44, 47, 67], "model": [0, 3, 7, 8, 13, 15, 16, 19, 21, 22, 23, 26, 27, 41, 42, 43, 44, 45], "inherit": [0, 3, 67], "baseclass": [0, 3], "base_model": [0, 3], "basemodel": [0, 3, 7], "allow": [0, 3, 7, 67], "user": [0, 3, 7, 26, 28, 44], "eeecut": [0, 3], "after": [0, 3, 7, 67], "test": [0, 3, 7, 8, 13, 15, 18, 23, 34, 36, 66, 67], "within": [0, 3, 67], "cv": [0, 3, 7, 42, 44, 67], "fold": [0, 1, 2, 3, 7, 67], "execut": [0, 1, 2, 3, 67], "onli": [0, 3, 7, 8, 9, 23, 28, 32, 67], "precise_cv_tun": [0, 3, 7, 67], "true": [0, 3, 7, 8, 9, 11, 15, 23, 67], "ml": [0, 3, 7, 13, 15, 16, 19, 41, 42, 43, 44, 45], "need": [0, 3, 7, 8, 15, 26, 44, 67], "implement": [0, 3, 5, 13, 15, 19, 27, 33, 35, 41, 42, 43, 44, 45, 67], "themselv": [0, 3], "step": [0, 3, 7, 21, 22, 67], "us": [0, 1, 2, 3, 7, 8, 11, 13, 15, 21, 22, 23, 26, 29, 30, 35, 44, 47], "when": [0, 1, 2, 3, 7, 15, 23, 28, 67], "proprocess": [0, 3], "ha": [0, 3, 7, 15, 16, 23, 34, 67], "high": [0, 3, 8, 9, 33, 35, 67], "chanc": [0, 3], "overfit": [0, 3, 7], "otherwis": [0, 3, 8, 25, 30], "e": [0, 3, 8, 15, 36, 67], "oversampl": [0, 3, 67], "techniqu": [0, 3, 33, 35, 67], "inject": [0, 3, 67], "which": [0, 1, 2, 3, 8, 23, 47, 67], "place": [0, 3, 67], "right": [0, 3, 67], "spit": [0, 3], "befor": [0, 3, 8, 26, 44, 67], "initi": [0, 3, 16], "initial_check": [0, 3], "df": [0, 1, 2, 3, 8, 13, 19, 21, 22, 25, 26, 27, 29, 30, 32, 34, 36, 41, 42, 43, 44, 45, 67], "panda": [0, 1, 2, 3, 5, 8, 9, 13, 15, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 67], "datafram": [0, 1, 2, 3, 5, 8, 9, 13, 15, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 67], "fit": [0, 1, 2, 3, 19, 21, 22, 25, 33, 34, 35, 41, 42, 43, 44, 45, 67], "target_col": [0, 1, 2, 3, 25, 28, 33, 35, 36, 67], "full": [0, 3, 7, 16, 67], "pipelin": [0, 3, 7, 15, 23, 26, 28, 32, 44], "fit_ev": [0, 1, 2, 3, 11, 67], "df_eval": [0, 3, 67], "target_ev": [0, 3], "seri": [0, 1, 2, 3, 19, 21, 22, 23, 26, 28, 29, 33, 35, 41, 42, 43, 44, 45, 67], "dict": [0, 3, 5, 7, 11, 15, 21, 22, 23, 28, 67], "evalu": [0, 1, 2, 3, 7, 18, 21, 22, 66, 67], "holdout": [0, 3], "set": [0, 3, 7, 23, 36, 47, 67], "conveni": [0, 3, 28, 30], "function": [0, 1, 2, 3, 21, 22, 23, 28, 30, 67], "It": [0, 3, 16, 21, 22, 26, 28, 30, 33, 35, 44, 67], "recommend": [0, 3, 23, 33, 67], "explor": [0, 3], "On": [0, 3, 29, 67], "product": [0, 3, 23, 67], "simpl": [0, 3, 15, 67], "should": [0, 3, 8, 19, 21, 22, 41, 42, 43, 44, 45], "insid": [0, 3, 7], "transform_new_data": [0, 3], "transform": [0, 3, 21, 22, 26, 27, 28, 29, 30, 33, 34, 35, 44, 67], "new": [0, 3, 7, 23, 35, 67], "accord": [0, 3], "predict": [0, 1, 2, 3, 11, 13, 19, 21, 22, 26, 29, 41, 42, 43, 44, 45, 67], "tupl": [0, 1, 2, 19, 21, 26, 29, 30, 40, 41, 42, 43, 44, 45, 67], "numpi": [0, 3, 11, 13, 19, 21, 22, 23, 44, 45, 47], "ndarrai": [0, 3, 11, 13, 19, 21, 22, 44, 45], "unseen": [0, 1, 2, 3, 19, 21, 22, 41, 42, 43, 44, 45, 67], "return": [0, 1, 2, 3, 8, 9, 13, 16, 19, 21, 22, 23, 27, 41, 42, 43, 44, 45, 47, 67], "probabl": [0, 3, 11, 19, 41, 42, 43, 67], "y_prob": [0, 3, 11, 67], "y_class": [0, 3, 11, 67], "bluecastcv": [1, 7, 15, 67], "stratifi": [1, 2, 7, 36], "wrapper": [1, 2, 21, 22, 28, 30], "multipl": [1, 2, 7, 21, 22, 67], "intstanc": [1, 2], "check": [1, 2, 7, 8, 9, 21, 22, 23, 34, 67], "document": [1, 2, 7, 23, 66], "addit": [1, 2, 7, 8, 27], "detail": [1, 2, 7, 67], "A": [1, 2, 8, 9, 28, 67], "splitter": [1, 2], "prepare_data": [1, 2], "show_oof_scor": [1, 2], "metric": [1, 2, 11, 15, 67], "matthew": [1, 67], "show": [1, 2, 7, 8, 67], "out": [1, 2, 32, 67], "score": [1, 2, 8, 15, 23, 67], "call": [1, 2, 7, 11, 15, 47, 67], "bluecastcvregress": [1, 2, 67], "": [1, 2, 7, 8, 9, 23, 47, 67], "bluecastregress": [1, 2, 3, 67], "ar": [1, 2, 7, 8, 26, 27, 28, 30, 44, 47, 67], "each": [1, 2, 7, 8, 23, 25, 35, 67], "them": [1, 2, 8, 27, 28, 30], "oof": [1, 2], "collect": [1, 2], "mean": [1, 2, 35, 67], "averag": [1, 2], "indic": [1, 2, 8, 23, 34], "shall": [1, 2, 7, 8, 67], "std": [1, 2], "differ": [1, 2, 30, 33, 35, 67], "input": [1, 2], "expect": [1, 2, 8, 15, 16, 21, 22, 23, 30, 47, 67], "dataset": [1, 2, 8, 21, 22, 23, 34, 67], "includ": [1, 2, 8, 21, 22, 23, 67], "oof_mean": [1, 2], "oof_std": [1, 2], "dure": [1, 2, 7, 26, 29, 44, 67], "eval": [1, 2, 15, 21, 22, 67], "return_sub_models_pr": [1, 2], "bool": [1, 2, 5, 7, 8, 15, 23, 26, 29, 36, 44, 67], "fals": [1, 2, 7, 9, 15, 23, 26, 29, 36, 44, 67], "regress": [2, 3, 8, 22, 67], "xgboosttuneparamsregressionconfig": [2, 3, 7, 22], "rmse": [2, 7], "xgboost_regress": [3, 18, 20, 66], "xgboostmodelregress": [3, 22], "At": 3, "moment": 3, "cast": [4, 18, 30, 66, 67], "cast_cv": [4, 18, 66, 67], "cast_cv_regress": [4, 18, 66, 67], "cast_regress": [4, 18, 66, 67], "baseclassexperimenttrack": [5, 15, 67], "base": [5, 7, 13, 15, 19, 21, 22, 23, 26, 28, 29, 30, 33, 35, 36, 41, 42, 43, 44, 45, 67], "abc": [5, 19, 26], "experi": [5, 7, 15, 67], "tracker": [5, 15, 67], "enforc": [5, 19, 41, 42, 43, 44, 45, 67], "add_result": [5, 15, 67], "retrieve_results_as_df": [5, 15, 67], "method": [5, 7, 19, 23, 30, 33, 35, 41, 42, 43, 44, 45, 67], "abstract": [5, 19, 26, 44, 67], "experiment_id": [5, 15, 67], "score_categori": [5, 15, 67], "simple_train_test_scor": [5, 15, 67], "cv_score": [5, 15, 67], "oof_scor": [5, 15, 67], "model_paramet": [5, 15, 67], "eval_scor": [5, 15, 67], "metric_us": [5, 15, 67], "metric_higher_is_bett": [5, 15, 67], "add": [5, 15, 21, 22, 27, 67], "result": [5, 15], "retriev": [5, 67], "base_class": [6, 15, 18, 20, 21, 22, 41, 42, 43, 44, 45, 66, 67], "defin": [7, 8, 23, 29, 47, 67], "common": 7, "pydant": 7, "dataclass": 7, "The": [7, 8, 9, 13, 15, 16, 21, 22, 33, 35, 36, 47, 67], "python": [7, 65, 67], "wai": [7, 36, 67], "load": [7, 16, 21, 22, 26, 44, 67], "adjust": [7, 67], "blueprint": [7, 18, 66, 67], "arbitrary_types_allow": 7, "gener": [7, 16, 66], "global_random_st": 7, "global": 7, "state": [7, 8], "reproduc": 7, "increase_random_state_in_bluecast_cv_bi": 7, "In": [7, 15, 28], "how": [7, 8, 21, 22], "much": [7, 67], "shuffle_during_train": 7, "whether": 7, "shuffl": [7, 67], "hypertuning_cv_fold": [7, 67], "1": [7, 11, 13, 23, 66, 67], "hyperparameter_tuning_round": [7, 67], "number": [7, 8, 11, 21, 22, 67], "round": 7, "Not": 7, "hyperparameter_tuning_max_runtime_sec": 7, "maximum": [7, 67], "runtim": [7, 67], "second": [7, 67], "enabl": [7, 15], "own": [7, 15, 67], "routin": [7, 67], "necessari": [7, 67], "would": 7, "caus": 7, "usual": [7, 67], "longer": [7, 67], "optuna": [7, 67], "prune": [7, 67], "miss": [7, 26, 29, 32, 34, 44, 67], "all": [7, 8, 19, 41, 42, 43, 44, 45, 67], "trial": [7, 67], "until": 7, "end": [7, 28], "early_stopping_round": 7, "earli": [7, 67], "stop": 7, "also": [7, 21, 22, 28, 30, 35, 67], "greater": [7, 9], "than": [7, 9, 67], "autotune_model": [7, 67], "autotun": [7, 21, 22, 67], "enable_feature_select": [7, 67], "recurs": [7, 29], "featur": [7, 8, 9, 28, 29, 30, 33, 35], "select": [7, 29], "calculate_shap_valu": [7, 67], "calcul": [7, 9, 11, 13, 21, 22, 35, 67], "shap": [7, 13, 67], "valu": [7, 8, 9, 13, 28, 32, 35, 67], "compat": 7, "see": [7, 13, 23, 67], "more": [7, 26, 44], "train_siz": [7, 36], "size": [7, 8], "train_split_stratifi": 7, "use_full_data_for_final_model": 7, "final": [7, 47, 67], "might": [7, 67], "min_features_to_select": [7, 29, 67], "minimum": 7, "cardinality_threshold_for_onehot_encod": [7, 67], "cardin": [7, 25, 33, 35, 67], "less": [7, 25, 67], "equal": [7, 9, 25, 67], "threshold": [7, 8, 9, 23, 25, 67], "onehot": [7, 25, 33, 67], "encod": [7, 25, 28, 33, 35], "rest": 7, "Will": [7, 34], "ignor": 7, "cat_encoding_via_ml_algorithm": [7, 67], "algorithm": 7, "done": [7, 15, 36, 67], "readm": [7, 67], "show_detailed_tuning_log": 7, "log": 7, "enable_grid_search_fine_tun": [7, 67], "gridsearch": [7, 67], "fine": [7, 67], "grain": 7, "grid": [7, 8, 67], "previou": 7, "gridsearch_nb_parameters_per_grid": [7, 67], "decid": [7, 67], "mani": [7, 8, 21, 22, 67], "have": [7, 8, 67], "per": [7, 67], "gridsearch_tuning_max_runtime_sec": [7, 67], "finish": [7, 67], "latest": [7, 67], "nd": [7, 67], "exce": [7, 67], "limit": [7, 67], "though": [7, 67], "experiment_nam": 7, "10": [7, 8, 23, 67], "33": 7, "200": 7, "3600": [7, 67], "0": [7, 9, 11, 23, 29, 32, 36, 65, 67], "8": [7, 36, 67], "5": [7, 25, 29, 67], "optuna_sampler_n_startup_tri": 7, "max_depth_min": 7, "2": [7, 23, 67], "max_depth_max": 7, "6": 7, "alpha_min": 7, "alpha_max": 7, "lambda_min": 7, "lambda_max": 7, "gamma_min": 7, "gamma_max": 7, "subsample_min": 7, "subsample_max": 7, "max_leaves_min": 7, "max_leaves_max": [7, 67], "sub_sample_min": 7, "3": [7, 13, 67], "sub_sample_max": 7, "col_sample_by_tree_min": 7, "col_sample_by_tree_max": 7, "col_sample_by_level_min": 7, "col_sample_by_level_max": 7, "eta_min": 7, "001": 7, "eta_max": 7, "steps_min": 7, "steps_max": [7, 67], "1000": [7, 38, 67], "model_verbos": 7, "model_verbosity_during_final_train": 7, "model_object": 7, "softprob": 7, "model_eval_metr": 7, "mlogloss": 7, "booster": [7, 21, 22], "gbtree": 7, "reg": 7, "squarederror": 7, "hyper": 7, "sample_weight": 7, "classification_threshold": 7, "plot_pie_chart": [8, 67], "explod": 8, "color": 8, "creat": [8, 15, 28, 35, 66, 67], "pie": 8, "chart": [8, 67], "label": [8, 11, 23, 28, 47], "option": [8, 23, 26, 44, 67], "explos": 8, "hold": [8, 23], "nterest": 8, "plott": 8, "numer": [8, 9, 23, 28, 30, 67], "repres": [8, 23], "distanc": 8, "segment": 8, "hexadecim": 8, "represent": [8, 28], "rgb": 8, "plot_count_pair": [8, 67], "df_1": 8, "df_2": 8, "df_alias": 8, "palett": 8, "compar": [8, 23, 67], "count": 8, "between": [8, 9, 23, 67], "two": [8, 23, 36, 67], "chosen": 8, "shown": 8, "plot": [8, 11, 23, 67], "format": [8, 30, 67], "hue": 8, "read": [8, 67], "sn": 8, "countplot": 8, "categori": [8, 28, 33, 35, 67], "thei": [8, 27, 28], "appear": 8, "cat_col": [8, 67], "univariate_plot": [8, 67], "univari": [8, 67], "doe": [8, 34, 67], "part": [8, 9, 11, 27, 32, 67], "bi_variate_plot": [8, 67], "num_cols_grid": 8, "4": 8, "bivari": 8, "combin": 8, "must": [8, 9, 26, 44], "specifi": [8, 23], "correlation_heatmap": [8, 67], "half": 8, "heatmap": [8, 67], "correl": [8, 9, 67], "correlation_to_target": [8, 67], "relat": 8, "plot_pca": [8, 67], "scale_data": 8, "pca": 8, "variabl": [8, 9, 35, 67], "standard": 8, "scale": 8, "perform": 8, "appli": [8, 21, 22, 67], "raw": [8, 67], "plot_pca_cumulative_vari": [8, 67], "n_compon": 8, "cumul": [8, 23], "varianc": [8, 67], "princip": [8, 67], "compon": [8, 67], "total": [8, 23], "comput": [8, 23, 26, 44, 67], "plot_tsn": [8, 67], "perplex": [8, 67], "50": 8, "random_st": [8, 29, 36, 38, 67], "42": 8, "t": [8, 27, 67], "sne": [8, 67], "conditional_entropi": 8, "x": [8, 23, 33, 35, 67], "y": [8, 21, 23, 33, 35, 67], "theil_u": 8, "plot_theil_u_heatmap": [8, 67], "theil": [8, 9, 67], "u": [8, 9, 67], "plot_null_percentag": [8, 67], "check_unique_valu": [8, 67], "amount": 8, "uniqu": [8, 67], "almost": [8, 13], "row": 8, "being": [8, 67], "abov": [8, 67], "against": [8, 23], "mutual_info_to_target": [8, 67], "mut_param": 8, "mutual": [8, 67], "inform": [8, 15, 67], "dictionari": [8, 15, 23, 26, 44], "argument": [8, 23, 67], "sklearn": [8, 67], "mutual_info_classif": 8, "To": [8, 67], "detect_leakage_via_correl": [9, 67], "9": [9, 67], "detect": [9, 30, 34], "leakag": 9, "other": [9, 67], "absolut": [9, 16], "consid": [9, 21, 22, 23], "potenti": [9, 67], "detect_categorical_leakag": [9, 67], "respect": 9, "analys": [10, 18, 66, 67], "data_leakage_check": [10, 18, 66, 67], "plot_lift_chart": 11, "arrai": [11, 19, 23, 44, 45, 47], "y_true": [11, 21, 22], "num_bin": 11, "20": [11, 38, 67], "plot_roc_auc": 11, "predicted_prob": 11, "titl": 11, "roc": [11, 67], "curv": [11, 67], "auc": [11, 67], "area": 11, "under": [11, 13, 23], "posit": 11, "class": [11, 16, 61, 67], "plot_probability_distribut": 11, "distribut": [11, 21, 22, 23], "histogram": 11, "matplotlib": [11, 23], "bin": 11, "balanced_log_loss": 11, "y_pred": 11, "eval_classifi": 11, "eval_regressor": 11, "eval_metr": [12, 18, 66], "shap_valu": [12, 18, 66], "flexibl": 13, "librari": [13, 33, 35, 67], "shap_explan": 13, "explan": 13, "http": 13, "medium": 13, "com": 13, "rapid": 13, "ai": 13, "gpu": [13, 67], "acceler": 13, "587fad6822": 13, "trigger": [15, 67], "long": 15, "For": [15, 26, 35, 44, 67], "ueer": 15, "inspir": 15, "individu": [15, 30], "sequenti": 15, "id": 15, "make": [15, 67], "sure": 15, "increment": 15, "chose": 15, "where": [15, 67], "been": [15, 67], "learn": 15, "rate": 15, "actual": [15, 23], "convert": [15, 28], "xgboostconfig": 15, "get_best_scor": [15, 21, 22], "target_metr": 15, "util": [16, 67], "check_gpu_support": [16, 47], "logger": 16, "messag": 16, "save_to_product": [16, 67], "class_inst": 16, "file_path": 16, "file_nam": 16, "automl_inst": 16, "file_typ": 16, "dat": 16, "pretrain": 16, "save": [16, 26, 44, 67], "dill": 16, "path": 16, "whole": 16, "file": [16, 67], "export": [16, 67], "load_for_product": [16, 67], "auto": [16, 66, 67], "try": [16, 30, 67], "fallback": 16, "logic": 16, "imput": [16, 67], "case": [16, 23, 28, 35, 47], "import": [16, 67], "fail": 16, "object": 16, "eda": [18, 66, 67], "general_util": [18, 66, 67], "monitor": [18, 66, 67], "data_monitor": [18, 24, 66, 67], "category_encoder_orchestr": [18, 31, 66], "datetime_featur": [18, 31, 66], "encode_target_label": [18, 31, 66], "feature_typ": [18, 31, 66, 67], "nulls_and_inf": [18, 31, 66], "onehot_encod": [18, 31, 66], "schema_check": [18, 31, 66], "target_encod": [18, 31, 66], "train_test_split": [18, 31, 66, 67], "make_data": [18, 37, 66], "create_data": [18, 37, 39, 66], "test_analys": [18, 37, 66], "test_cast": [18, 37, 66], "test_cast_cv": [18, 37, 66], "test_cast_cv_multiclass": [18, 37, 66], "test_cast_cv_regress": [18, 37, 66], "test_cast_regress": [18, 37, 66], "test_category_encoder_orchestr": [18, 37, 66], "test_check_gpu_support": [18, 37, 66], "test_custom_processing_base_class": [18, 37, 66], "test_data_leakage_check": [18, 37, 66], "test_data_monitor": [18, 37, 66], "test_datetime_featur": [18, 37, 66], "test_encode_target_label": [18, 37, 66], "test_experiment_track": [18, 37, 66], "test_feature_type_detector": [18, 37, 66], "test_fine_tun": [18, 37, 66], "test_load_for_product": [18, 37, 66], "test_nulls_and_inf": [18, 37, 66], "test_onehot_encod": [18, 37, 66], "test_save_to_product": [18, 37, 66], "test_schema_check": [18, 37, 66], "test_shap_explan": [18, 37, 66], "test_target_encoding_binari": [18, 37, 66], "test_target_encoding_multiclass": [18, 37, 66], "test_train_test_split": [18, 37, 66], "predictedproba": [19, 41, 42, 43, 67], "predictedclass": [19, 41, 42, 43, 67], "baseclassmlmodel": [19, 21, 41, 42, 43, 67], "requir": [19, 41, 42, 43, 44, 45, 67], "x_train": [19, 21, 22, 26, 41, 42, 43, 44, 45, 67], "x_test": [19, 21, 22, 26, 41, 42, 43, 44, 45, 67], "y_train": [19, 21, 22, 26, 41, 42, 43, 44, 45, 67], "y_test": [19, 21, 22, 26, 41, 42, 43, 44, 45, 67], "baseclassmlregressionmodel": [19, 22, 44, 45], "imbalanc": [21, 22], "mai": [21, 22], "deepend": [21, 22], "calculate_class_weight": 21, "check_load_conf": [21, 22], "altern": [21, 22], "overwrit": [21, 22, 67], "create_d_matric": [21, 22], "train_single_fold_model": [21, 22], "d_train": [21, 22], "d_test": [21, 22], "pruning_callback": [21, 22], "increasing_noise_evalu": [21, 22], "eval_df": [21, 22], "iter": [21, 22, 28], "100": [21, 22, 36, 67], "increas": [21, 22, 67], "nois": [21, 22, 67], "same": [21, 22, 34], "normal": [21, 22, 67], "power": [21, 22, 35], "yeo": [21, 22], "johnson": [21, 22], "increasingli": [21, 22, 67], "loss": [21, 22], "constant_loss_degregation_factor": [21, 22], "decreas": [21, 22], "come": [21, 22, 67], "_fine_tune_precis": [21, 22], "tuned_param": [21, 22], "random_se": [21, 22], "fine_tun": [21, 22], "drift": 23, "meant": 23, "datadrift": [23, 67], "variou": [23, 67], "measur": [23, 25, 67], "visual": 23, "suitabl": [23, 35], "batch": 23, "onlin": 23, "kolmogorov_smirnov_test": [23, 67], "new_data": [23, 67], "05": [23, 67], "k": 23, "oth": 23, "nonparametr": 23, "fall": 23, "pd": [23, 67], "is_numeric_dtyp": 23, "origin": [23, 28], "kolmogorov": 23, "smirnov": 23, "drift_flag": 23, "flag": [23, 67], "_calculate_psi": 23, "bucket": 23, "population_stability_index": [23, 67], "popul": 23, "stabil": 23, "index": [23, 67], "interpret": 23, "psi": [23, 67], "shift": 23, "both": 23, "slight": 23, "occur": 23, "larg": 23, "qqplot_two_sampl": [23, 67], "x_label": [23, 67], "y_label": [23, 67], "quantil": 23, "interpol": 23, "nearest": 23, "ax": 23, "rug": 23, "rug_length": 23, "rug_kwarg": 23, "kwarg": 23, "draw": 23, "versu": 23, "like": [23, 67], "dimension": [23, 35], "axi": [23, 67], "current": 23, "n": 23, "evenli": 23, "point": [23, 26, 44, 67], "min": 23, "len": 23, "linear": 23, "lower": [23, 67], "higher": [23, 67], "midpoint": 23, "find": [23, 67], "sampl": [23, 67], "horizont": 23, "vertic": 23, "drawn": 23, "length": [23, 34], "line": 23, "fraction": 23, "keyword": 23, "axvlin": 23, "axhlin": 23, "scatter": 23, "q": 23, "categoryencoderorchestr": 25, "map": [25, 28, 30], "appropri": 25, "assign": 25, "depend": [25, 67], "entri": [26, 44, 67], "last": [26, 44, 67], "mile": [26, 44, 67], "trained_pattern": [26, 44, 67], "extend": [26, 44], "fit_transform": [26, 29, 33, 44, 67], "prediction_mod": [26, 44], "skip": [26, 44, 67], "process": [26, 27, 29, 44], "we": [26, 44, 47, 67], "anyth": [26, 44], "placehold": [26, 44], "predicton_mod": [26, 29, 44, 67], "mode": [26, 29, 44], "extract": 27, "datetim": [27, 30, 67], "cyclic": 27, "aren": 27, "good": [27, 67], "match": [27, 34], "tree": [27, 67], "date_convert": 27, "date_part": 27, "loop": 27, "through": [27, 28], "month": 27, "dai": 27, "dayofweek": 27, "hour": 27, "modifi": 27, "relev": 28, "revers": [28, 67], "targetlabelencod": 28, "translat": 28, "back": [28, 67], "fit_label_encod": 28, "label_encoder_transform": 28, "fit_transform_target_label": 28, "transform_target_label": 28, "alreadi": [28, 30, 33, 35, 67], "label_encoder_reverse_transform": 28, "top": [29, 67], "selection_strategi": [29, 67], "featureselectionconfig": 29, "elimin": 29, "specif": 30, "featuretypedetector": [30, 67], "num_column": [30, 67], "accordingli": 30, "identify_num_column": 30, "identifi": 30, "exist": 30, "identify_bool_column": 30, "boolean": 30, "identify_date_time_column": 30, "no_bool_col": 30, "yyyi": 30, "mm": 30, "dd": 30, "cast_rest_columns_to_object": 30, "bool_col": 30, "treat": 30, "remain": 30, "tri": 30, "success": 30, "assum": 30, "fit_transform_feature_typ": [30, 67], "orchest": 30, "transform_feature_typ": 30, "ignore_col": 30, "handl": 32, "null": [32, 67], "infinit": 32, "box": 32, "fill_infinite_valu": 32, "fill_with": 32, "replac": [32, 35, 47, 67], "nan": [32, 67], "given": 32, "fill_nul": 32, "unsupervis": 33, "category_encod": [33, 35], "offer": [33, 35, 67], "varieti": [33, 35], "onehotencod": 33, "onehotcategoryencod": 33, "schema": [34, 67], "schemadetector": 34, "store": [34, 67], "rais": [34, 67], "error": 34, "warn": [34, 67], "extra": 34, "supervis": 35, "reduc": 35, "targetencod": 35, "special": [35, 67], "avail": [35, 67], "binaryclasstargetencod": 35, "context": 35, "fit_target_encode_binary_class": 35, "transform_target_encode_binary_class": 35, "multiclasstargetencod": 35, "fit_target_encode_multiclass": 35, "transform_target_encode_multiclass": 35, "randomli": 36, "train_test_split_cross": 36, "stratif": 36, "train_test_split_tim": 36, "split_by_col": 36, "create_synthetic_datafram": 38, "num_sampl": 38, "create_synthetic_multiclass_datafram": 38, "create_synthetic_dataframe_regress": 38, "synthetic_train_test_data": [40, 41, 42, 44, 45, 67], "synthetic_train_test_data_regress": 40, "synthetic_categorical_data": 40, "create_data_with_nul": 40, "create_data_with_many_uniqu": 40, "test_plot_pie_chart": 40, "test_univariate_plot": 40, "test_bi_variate_plot": 40, "test_correlation_heatmap": 40, "test_correlation_to_target": 40, "test_mutual_info_to_target": 40, "test_mutual_info_to_target_multiclass": 40, "test_mutual_info_to_target_regress": 40, "test_pca_plot": 40, "test_plot_pca_cumulative_vari": 40, "test_plot_tsn": 40, "test_plot_theil_u_heatmap": 40, "test_plot_count_pair": 40, "test_plot_null_percentag": 40, "test_check_unique_valu": 40, "synthetic_multiclass_train_test_data": 41, "test_blueprint_xgboost": [41, 45], "custommodel": [41, 44, 45, 67], "test_bluecast_with_custom_model": [41, 45], "bluecast_inst": [41, 45], "test_enable_feature_selection_warn": [41, 45], "test_hypertuning_cv_folds_warn": [41, 45], "test_missing_feature_selector_warn": [41, 45], "test_missing_xgboost_tune_params_config_warn": [41, 45], "test_min_features_to_select_warn": [41, 45], "test_shap_values_and_ml_algorithm_warn": [41, 45], "test_cat_encoding_via_ml_algorithm_and_ml_model_warn": [41, 45], "test_precise_cv_tuning_warn": [41, 45], "test_class_problem_mismatch_warn": 41, "test_blueprint_cv_xgboost": [42, 44], "customlrmodel": [42, 43, 44], "test_bluecast_cv_fit_eval_with_custom_model": [42, 44], "test_bluecast_cv_fit_eval_multiclass_with_custom_model": 43, "mycustomlastmilepreprocess": [44, 67], "custom_funct": [44, 67], "test_bluecast_cv_with_custom_object": 44, "encoder_orchestr": 46, "sample_data": [46, 52, 62], "test_fit_assigns_to_onehot_when_cardinality_below_threshold": 46, "test_fit_assigns_to_target_when_cardinality_above_threshold": 46, "monkeypatch": 47, "fixtur": 47, "pytest": [47, 67], "mock": 47, "xgb": [47, 67], "mock_train": 47, "assert": 47, "correctli": 47, "patch": 47, "rand": 47, "predefin": 47, "randint": 47, "output": [47, 67], "gpu_hist": 47, "custom_preprocess": 48, "test_fit_transform_returns_tupl": 48, "test_transform_returns_tupl": 48, "test_transform_returns_optional_target": 48, "test_transform_returns_optional_target_prediction_mod": 48, "create_to_target_correlated_featur": 49, "create_to_target_correlated_categorical_featur": 49, "test_detect_leakage_via_correl": 49, "test_detect_categorical_leakag": 49, "mock_logg": 50, "test_kolmogorov_smirnov_test": 50, "test_population_stability_index": 50, "test_qqplot_two_sampl": 50, "sample_datafram": 51, "test_date_convert": 51, "label_encod": 52, "trained_label_encod": 52, "test_fit_label_encod": 52, "test_label_encoder_transform": 52, "test_fit_transform_target_label": 52, "test_transform_target_label": 52, "test_label_encoder_reverse_transform": 52, "test_add_result": 53, "test_retrieve_results_as_df": 53, "test_get_best_score_empti": 53, "test_get_best_score_higher_is_bett": 53, "test_get_best_score_lower_is_bett": 53, "xgboost_model": 55, "test_fine_tune_runs_without_error": 55, "test_fine_tune_runs_without_errors_using_cv": 55, "test_load_for_production_with_default_file_typ": 56, "test_fill_nul": 57, "test_fill_infinite_valu": 57, "example_data": 58, "test_fit_transform": 58, "test_transform": 58, "dummyclass": 59, "test_transform_same_schema": 60, "test_transform_missing_column": 60, "test_transform_extra_column": 60, "mock_model": 61, "test_data": 61, "test_eval_classifier_except": 61, "test_transform_target_encode_binary_class": 62, "test_multi_class_target_encod": 63, "test_train_test_split_cross": 64, "test_train_test_split_tim": 64, "project": 65, "bluecast": [65, 66], "copyright": 65, "2023": 65, "thoma": [65, 67], "mei\u00dfner": [65, 67], "author": 65, "releas": 65, "93": 65, "extens": 65, "myst_pars": 65, "sphinx": [65, 66, 67], "ext": 65, "autodoc": 65, "autoapi": [65, 66], "napoleon": 65, "autoapi_typ": 65, "autoapi_dir": 65, "templates_path": 65, "_templat": 65, "exclude_pattern": 65, "html_theme": 65, "alabast": 65, "html_static_path": 65, "_static": 65, "page": 66, "conf": 66, "lightweight": 67, "fast": 67, "focus": 67, "few": 67, "architectur": 67, "what": 67, "faster": 67, "cycl": 67, "stabl": 67, "codebas": 67, "while": 67, "despit": 67, "its": 67, "core": 67, "here": 67, "pypi": 67, "pip": 67, "fresh": 67, "environ": 67, "conscious": 67, "support": 67, "prevent": 67, "outdat": 67, "version": 67, "issu": 67, "connect": 67, "clone": 67, "repositori": 67, "conda": 67, "poetri": 67, "manag": 67, "modul": 67, "main": 67, "some": 67, "automl": 67, "df_train": 67, "df_val": 67, "your": 67, "work": 67, "bluecast_cv_pipelin": 67, "further": 67, "again": 67, "sinc": 67, "80": 67, "well": 67, "y_hat": 67, "get": 67, "first": 67, "overview": 67, "feat_type_detector": 67, "train_data": 67, "veri": 67, "share": 67, "many_unique_col": 67, "percentag": 67, "categorical_feature_1": 67, "loc": 67, "ec1": 67, "bi": 67, "variat": 67, "assoc": 67, "theil_matrix": 67, "extra_param": 67, "30": 67, "explain": 67, "certain": 67, "With": 67, "big": 67, "complex": 67, "easili": 67, "sneak": 67, "train_config": 67, "promis": 67, "There": 67, "situat": 67, "risk": 67, "care": 67, "scenario": 67, "solut": 67, "better": 67, "sens": 67, "riski": 67, "mycustompreprocess": 67, "section": 67, "happen": 67, "coeffici": 67, "slower": 67, "pleas": 67, "note": 67, "By": 67, "bayesian": 67, "optim": 67, "howev": 67, "give": 67, "estim": 67, "necessarli": 67, "ideal": 67, "spot": 67, "thu": 67, "refin": 67, "found": 67, "seed": 67, "max": 67, "sec": 67, "atm": 67, "tradeoff": 67, "singl": 67, "xgboost_param_config": 67, "test_train_split": 67, "variant": 67, "orchestr": 67, "rout": 67, "receiv": 67, "becaus": 67, "e2eml": 67, "easi": 67, "just": 67, "16": 67, "want": 67, "could": 67, "start": 67, "present": 67, "anymor": 67, "sub": 67, "def": 67, "__init__": 67, "self": 67, "drop": 67, "beta": 67, "gamma": 67, "delta": 67, "alpha": 67, "ej": 67, "cat_df": 67, "copi": 67, "zscore": 67, "fit_al": 67, "transform_al": 67, "imp_mean": 67, "simpleimput": 67, "missing_valu": 67, "np": 67, "strategi": 67, "median": 67, "merg": 67, "left_index": 67, "right_index": 67, "left": 67, "inf": 67, "custom_col": 67, "head": 67, "isinst": 67, "targ": 67, "autom": 67, "disabl": 67, "about": 67, "follow": 67, "rfecv": 67, "make_scor": 67, "matthews_corrcoef": 67, "model_select": 67, "stratifiedkfold": 67, "super": 67, "selected_featur": 67, "xgbclassifi": 67, "n_job": 67, "support_": 67, "conf_feature_select": 67, "custom_feat_sel": 67, "feature1": 67, "rang": 67, "feature2": 67, "y_trai": 67, "predicted_proba": 67, "predicted_class": 67, "enjoi": 67, "below": 67, "properti": 67, "lint": 67, "logisticregress": 67, "you": 67, "wih": 67, "itself": 67, "predict_proba": 67, "custom_model": 67, "pre": 67, "updat": 67, "ad": 67, "definit": 67, "enhanc": 67, "insight": 67, "No": 67, "setup": 67, "y_eval": 67, "access": 67, "tracker_df": 67, "now": 67, "feed": 67, "mayb": 67, "uncov": 67, "hidden": 67, "pattern": 67, "whenev": 67, "manual": 67, "handi": 67, "send": 67, "server": 67, "cnfig": 67, "customexperimenttrack": 67, "abstractmethod": 67, "union": 67, "90": 67, "anonym": 67, "separ": 67, "data_drift_check": 67, "statist": 67, "print": 67, "kolmogorov_smirnov_flag": 67, "population_stability_index_flag": 67, "population_stability_index_valu": 67, "qqplot": 67, "directli": 67, "mimic": 67, "realiti": 67, "shaplei": 67, "lift": 67, "misconfigur": 67, "ensur": 67, "tool": 67, "commit": 67, "strong": 67, "hint": 67, "unit": 67, "contributor": 67, "doc": 67, "design": 67, "framework": 67, "still": 67, "reach": 67, "showcas": 67, "capabl": 67, "wise": 67, "icr": 67, "over": 67, "6000": 67, "particip": 67, "cover": 67, "lot": 67, "ps3e23": 67, "softwar": 67, "defect": 67, "12": 67, "ps3e25": 67, "hard": 67, "steel": 67, "welcom": 67, "branch": 67, "fix": 67, "md": 67, "past": 67, "content": 67, "push": 67, "pull": 67, "request": 67, "dev": 67, "pyproject": 67, "toml": 67, "readthedoc": 67, "requit": 67, "srtd_requir": 67, "txt": 67, "simpli": 67, "f": 67, "rtd_requir": 67, "abl": 67, "autobuild": 67, "sourc": 67, "build": 67, "html": 67, "localhost": 67, "link": 67, "creator": 67, "linkedin": 67}, "objects": {"": [[18, 0, 0, "-", "bluecast"], [65, 0, 0, "-", "conf"]], "bluecast": [[4, 0, 0, "-", "blueprints"], [6, 0, 0, "-", "config"], [10, 0, 0, "-", "eda"], [12, 0, 0, "-", "evaluation"], [14, 0, 0, "-", "experimentation"], [17, 0, 0, "-", "general_utils"], [20, 0, 0, "-", "ml_modelling"], [24, 0, 0, "-", "monitoring"], [31, 0, 0, "-", "preprocessing"], [37, 0, 0, "-", "tests"]], "bluecast.blueprints": [[0, 0, 0, "-", "cast"], [1, 0, 0, "-", "cast_cv"], [2, 0, 0, "-", "cast_cv_regression"], [3, 0, 0, "-", "cast_regression"]], "bluecast.blueprints.cast": [[0, 1, 1, "", "BlueCast"]], "bluecast.blueprints.cast.BlueCast": [[0, 2, 1, "", "fit"], [0, 2, 1, "", "fit_eval"], [0, 2, 1, "", "initial_checks"], [0, 2, 1, "", "predict"], [0, 2, 1, "", "transform_new_data"]], "bluecast.blueprints.cast_cv": [[1, 1, 1, "", "BlueCastCV"]], "bluecast.blueprints.cast_cv.BlueCastCV": [[1, 2, 1, "", "fit"], [1, 2, 1, "", "fit_eval"], [1, 2, 1, "", "predict"], [1, 2, 1, "", "prepare_data"], [1, 2, 1, "", "show_oof_scores"]], "bluecast.blueprints.cast_cv_regression": [[2, 1, 1, "", "BlueCastCVRegression"]], "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "fit_eval"], [2, 2, 1, "", "predict"], [2, 2, 1, "", "prepare_data"], [2, 2, 1, "", "show_oof_scores"]], "bluecast.blueprints.cast_regression": [[3, 1, 1, "", "BlueCastRegression"]], "bluecast.blueprints.cast_regression.BlueCastRegression": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "fit_eval"], [3, 2, 1, "", "initial_checks"], [3, 2, 1, "", "predict"], [3, 2, 1, "", "transform_new_data"]], "bluecast.config": [[5, 0, 0, "-", "base_classes"], [7, 0, 0, "-", "training_config"]], "bluecast.config.base_classes": [[5, 1, 1, "", "BaseClassExperimentTracker"]], "bluecast.config.base_classes.BaseClassExperimentTracker": [[5, 2, 1, "", "add_results"], [5, 2, 1, "", "retrieve_results_as_df"]], "bluecast.config.training_config": [[7, 1, 1, "", "Config"], [7, 1, 1, "", "TrainingConfig"], [7, 1, 1, "", "XgboostFinalParamConfig"], [7, 1, 1, "", "XgboostTuneParamsConfig"], [7, 1, 1, "", "XgboostTuneParamsRegressionConfig"]], "bluecast.config.training_config.Config": [[7, 3, 1, "", "arbitrary_types_allowed"]], "bluecast.config.training_config.TrainingConfig": [[7, 3, 1, "", "autotune_model"], [7, 3, 1, "", "calculate_shap_values"], [7, 3, 1, "", "cardinality_threshold_for_onehot_encoding"], [7, 3, 1, "", "cat_encoding_via_ml_algorithm"], [7, 3, 1, "", "early_stopping_rounds"], [7, 3, 1, "", "enable_feature_selection"], [7, 3, 1, "", "enable_grid_search_fine_tuning"], [7, 3, 1, "", "experiment_name"], [7, 3, 1, "", "global_random_state"], [7, 3, 1, "", "gridsearch_nb_parameters_per_grid"], [7, 3, 1, "", "gridsearch_tuning_max_runtime_secs"], [7, 3, 1, "", "hyperparameter_tuning_max_runtime_secs"], [7, 3, 1, "", "hyperparameter_tuning_rounds"], [7, 3, 1, "", "hypertuning_cv_folds"], [7, 3, 1, "", "increase_random_state_in_bluecast_cv_by"], [7, 3, 1, "", "min_features_to_select"], [7, 3, 1, "", "optuna_sampler_n_startup_trials"], [7, 3, 1, "", "precise_cv_tuning"], [7, 3, 1, "", "show_detailed_tuning_logs"], [7, 3, 1, "", "shuffle_during_training"], [7, 3, 1, "", "train_size"], [7, 3, 1, "", "train_split_stratify"], [7, 3, 1, "", "use_full_data_for_final_model"]], "bluecast.config.training_config.XgboostFinalParamConfig": [[7, 3, 1, "", "classification_threshold"], [7, 3, 1, "", "params"], [7, 3, 1, "", "sample_weight"]], "bluecast.config.training_config.XgboostTuneParamsConfig": [[7, 3, 1, "", "alpha_max"], [7, 3, 1, "", "alpha_min"], [7, 3, 1, "", "booster"], [7, 3, 1, "", "col_sample_by_level_max"], [7, 3, 1, "", "col_sample_by_level_min"], [7, 3, 1, "", "col_sample_by_tree_max"], [7, 3, 1, "", "col_sample_by_tree_min"], [7, 3, 1, "", "eta_max"], [7, 3, 1, "", "eta_min"], [7, 3, 1, "", "gamma_max"], [7, 3, 1, "", "gamma_min"], [7, 3, 1, "", "lambda_max"], [7, 3, 1, "", "lambda_min"], [7, 3, 1, "", "max_depth_max"], [7, 3, 1, "", "max_depth_min"], [7, 3, 1, "", "max_leaves_max"], [7, 3, 1, "", "max_leaves_min"], [7, 3, 1, "", "xgboost_eval_metric"], [7, 3, 1, "", "xgboost_objective"], [7, 3, 1, "", "verbosity_during_hyperparameter_tuning"], [7, 3, 1, "", "verbosity_during_final_model_training"], [7, 3, 1, "", "steps_max"], [7, 3, 1, "", "steps_min"], [7, 3, 1, "", "sub_sample_max"], [7, 3, 1, "", "sub_sample_min"], [7, 3, 1, "", "subsample_max"], [7, 3, 1, "", "subsample_min"]], "bluecast.config.training_config.XgboostTuneParamsRegressionConfig": [[7, 3, 1, "", "alpha_max"], [7, 3, 1, "", "alpha_min"], [7, 3, 1, "", "booster"], [7, 3, 1, "", "col_sample_by_level_max"], [7, 3, 1, "", "col_sample_by_level_min"], [7, 3, 1, "", "col_sample_by_tree_max"], [7, 3, 1, "", "col_sample_by_tree_min"], [7, 3, 1, "", "eta_max"], [7, 3, 1, "", "eta_min"], [7, 3, 1, "", "gamma_max"], [7, 3, 1, "", "gamma_min"], [7, 3, 1, "", "lambda_max"], [7, 3, 1, "", "lambda_min"], [7, 3, 1, "", "max_depth_max"], [7, 3, 1, "", "max_depth_min"], [7, 3, 1, "", "max_leaves_max"], [7, 3, 1, "", "max_leaves_min"], [7, 3, 1, "", "xgboost_eval_metric"], [7, 3, 1, "", "xgboost_objective"], [7, 3, 1, "", "verbosity_during_hyperparameter_tuning"], [7, 3, 1, "", "verbosity_during_final_model_training"], [7, 3, 1, "", "steps_max"], [7, 3, 1, "", "steps_min"], [7, 3, 1, "", "sub_sample_max"], [7, 3, 1, "", "sub_sample_min"], [7, 3, 1, "", "subsample_max"], [7, 3, 1, "", "subsample_min"]], "bluecast.eda": [[8, 0, 0, "-", "analyse"], [9, 0, 0, "-", "data_leakage_checks"]], "bluecast.eda.analyse": [[8, 4, 1, "", "bi_variate_plots"], [8, 4, 1, "", "check_unique_values"], [8, 4, 1, "", "conditional_entropy"], [8, 4, 1, "", "correlation_heatmap"], [8, 4, 1, "", "correlation_to_target"], [8, 4, 1, "", "mutual_info_to_target"], [8, 4, 1, "", "plot_count_pair"], [8, 4, 1, "", "plot_count_pairs"], [8, 4, 1, "", "plot_null_percentage"], [8, 4, 1, "", "plot_pca"], [8, 4, 1, "", "plot_pca_cumulative_variance"], [8, 4, 1, "", "plot_pie_chart"], [8, 4, 1, "", "plot_theil_u_heatmap"], [8, 4, 1, "", "plot_tsne"], [8, 4, 1, "", "theil_u"], [8, 4, 1, "", "univariate_plots"]], "bluecast.eda.data_leakage_checks": [[9, 4, 1, "", "detect_categorical_leakage"], [9, 4, 1, "", "detect_leakage_via_correlation"]], "bluecast.evaluation": [[11, 0, 0, "-", "eval_metrics"], [13, 0, 0, "-", "shap_values"]], "bluecast.evaluation.eval_metrics": [[11, 4, 1, "", "balanced_log_loss"], [11, 4, 1, "", "eval_classifier"], [11, 4, 1, "", "eval_regressor"], [11, 4, 1, "", "plot_lift_chart"], [11, 4, 1, "", "plot_probability_distribution"], [11, 4, 1, "", "plot_roc_auc"]], "bluecast.evaluation.shap_values": [[13, 4, 1, "", "shap_explanations"]], "bluecast.experimentation": [[15, 0, 0, "-", "tracking"]], "bluecast.experimentation.tracking": [[15, 1, 1, "", "ExperimentTracker"]], "bluecast.experimentation.tracking.ExperimentTracker": [[15, 2, 1, "", "add_results"], [15, 2, 1, "", "get_best_score"], [15, 2, 1, "", "retrieve_results_as_df"]], "bluecast.general_utils": [[16, 0, 0, "-", "general_utils"]], "bluecast.general_utils.general_utils": [[16, 4, 1, "", "check_gpu_support"], [16, 4, 1, "", "load_for_production"], [16, 4, 1, "", "logger"], [16, 4, 1, "", "save_to_production"]], "bluecast.ml_modelling": [[19, 0, 0, "-", "base_classes"], [21, 0, 0, "-", "xgboost"], [22, 0, 0, "-", "xgboost_regression"]], "bluecast.ml_modelling.base_classes": [[19, 1, 1, "", "BaseClassMlModel"], [19, 1, 1, "", "BaseClassMlRegressionModel"], [19, 5, 1, "", "PredictedClasses"], [19, 5, 1, "", "PredictedProbas"]], "bluecast.ml_modelling.base_classes.BaseClassMlModel": [[19, 2, 1, "", "fit"], [19, 2, 1, "", "predict"]], "bluecast.ml_modelling.base_classes.BaseClassMlRegressionModel": [[19, 2, 1, "", "fit"], [19, 2, 1, "", "predict"]], "bluecast.ml_modelling.xgboost": [[21, 1, 1, "", "XgboostModel"]], "bluecast.ml_modelling.xgboost.XgboostModel": [[21, 2, 1, "", "_fine_tune_precise"], [21, 2, 1, "", "autotune"], [21, 2, 1, "", "calculate_class_weights"], [21, 2, 1, "", "check_load_confs"], [21, 2, 1, "", "constant_loss_degregation_factor"], [21, 2, 1, "", "create_d_matrices"], [21, 2, 1, "", "fine_tune"], [21, 2, 1, "", "fit"], [21, 2, 1, "", "get_best_score"], [21, 2, 1, "", "increasing_noise_evaluator"], [21, 2, 1, "", "predict"], [21, 2, 1, "", "train_single_fold_model"]], "bluecast.ml_modelling.xgboost_regression": [[22, 1, 1, "", "XgboostModelRegression"]], "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression": [[22, 2, 1, "", "_fine_tune_precise"], [22, 2, 1, "", "autotune"], [22, 2, 1, "", "check_load_confs"], [22, 2, 1, "", "constant_loss_degregation_factor"], [22, 2, 1, "", "create_d_matrices"], [22, 2, 1, "", "fine_tune"], [22, 2, 1, "", "fit"], [22, 2, 1, "", "get_best_score"], [22, 2, 1, "", "increasing_noise_evaluator"], [22, 2, 1, "", "predict"], [22, 2, 1, "", "train_single_fold_model"]], "bluecast.monitoring": [[23, 0, 0, "-", "data_monitoring"]], "bluecast.monitoring.data_monitoring": [[23, 1, 1, "", "DataDrift"]], "bluecast.monitoring.data_monitoring.DataDrift": [[23, 2, 1, "", "_calculate_psi"], [23, 2, 1, "", "kolmogorov_smirnov_test"], [23, 2, 1, "", "population_stability_index"], [23, 2, 1, "", "qqplot_two_samples"]], "bluecast.preprocessing": [[25, 0, 0, "-", "category_encoder_orchestration"], [26, 0, 0, "-", "custom"], [27, 0, 0, "-", "datetime_features"], [28, 0, 0, "-", "encode_target_labels"], [29, 0, 0, "-", "feature_selection"], [30, 0, 0, "-", "feature_types"], [32, 0, 0, "-", "nulls_and_infs"], [33, 0, 0, "-", "onehot_encoding"], [34, 0, 0, "-", "schema_checks"], [35, 0, 0, "-", "target_encoding"], [36, 0, 0, "-", "train_test_split"]], "bluecast.preprocessing.category_encoder_orchestration": [[25, 1, 1, "", "CategoryEncoderOrchestrator"]], "bluecast.preprocessing.category_encoder_orchestration.CategoryEncoderOrchestrator": [[25, 2, 1, "", "fit"]], "bluecast.preprocessing.custom": [[26, 1, 1, "", "CustomPreprocessing"]], "bluecast.preprocessing.custom.CustomPreprocessing": [[26, 2, 1, "", "fit_transform"], [26, 2, 1, "", "transform"]], "bluecast.preprocessing.datetime_features": [[27, 4, 1, "", "date_converter"]], "bluecast.preprocessing.encode_target_labels": [[28, 1, 1, "", "TargetLabelEncoder"]], "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder": [[28, 2, 1, "", "fit_label_encoder"], [28, 2, 1, "", "fit_transform_target_labels"], [28, 2, 1, "", "label_encoder_reverse_transform"], [28, 2, 1, "", "label_encoder_transform"], [28, 2, 1, "", "transform_target_labels"]], "bluecast.preprocessing.feature_selection": [[29, 1, 1, "", "RFECVSelector"]], "bluecast.preprocessing.feature_selection.RFECVSelector": [[29, 2, 1, "", "fit_transform"], [29, 2, 1, "", "transform"]], "bluecast.preprocessing.feature_types": [[30, 1, 1, "", "FeatureTypeDetector"]], "bluecast.preprocessing.feature_types.FeatureTypeDetector": [[30, 2, 1, "", "cast_rest_columns_to_object"], [30, 2, 1, "", "fit_transform_feature_types"], [30, 2, 1, "", "identify_bool_columns"], [30, 2, 1, "", "identify_date_time_columns"], [30, 2, 1, "", "identify_num_columns"], [30, 2, 1, "", "transform_feature_types"]], "bluecast.preprocessing.nulls_and_infs": [[32, 4, 1, "", "fill_infinite_values"], [32, 4, 1, "", "fill_nulls"]], "bluecast.preprocessing.onehot_encoding": [[33, 1, 1, "", "OneHotCategoryEncoder"]], "bluecast.preprocessing.onehot_encoding.OneHotCategoryEncoder": [[33, 2, 1, "", "fit_transform"], [33, 2, 1, "", "transform"]], "bluecast.preprocessing.schema_checks": [[34, 1, 1, "", "SchemaDetector"]], "bluecast.preprocessing.schema_checks.SchemaDetector": [[34, 2, 1, "", "fit"], [34, 2, 1, "", "transform"]], "bluecast.preprocessing.target_encoding": [[35, 1, 1, "", "BinaryClassTargetEncoder"], [35, 1, 1, "", "MultiClassTargetEncoder"]], "bluecast.preprocessing.target_encoding.BinaryClassTargetEncoder": [[35, 2, 1, "", "fit_target_encode_binary_class"], [35, 2, 1, "", "transform_target_encode_binary_class"]], "bluecast.preprocessing.target_encoding.MultiClassTargetEncoder": [[35, 2, 1, "", "fit_target_encode_multiclass"], [35, 2, 1, "", "transform_target_encode_multiclass"]], "bluecast.preprocessing.train_test_split": [[36, 4, 1, "", "train_test_split"], [36, 4, 1, "", "train_test_split_cross"], [36, 4, 1, "", "train_test_split_time"]], "bluecast.tests": [[39, 0, 0, "-", "make_data"], [40, 0, 0, "-", "test_analyse"], [41, 0, 0, "-", "test_cast"], [42, 0, 0, "-", "test_cast_cv"], [43, 0, 0, "-", "test_cast_cv_multiclass"], [44, 0, 0, "-", "test_cast_cv_regression"], [45, 0, 0, "-", "test_cast_regression"], [46, 0, 0, "-", "test_category_encoder_orchestrator"], [47, 0, 0, "-", "test_check_gpu_support"], [48, 0, 0, "-", "test_custom_processing_base_class"], [49, 0, 0, "-", "test_data_leakage_checks"], [50, 0, 0, "-", "test_data_monitoring"], [51, 0, 0, "-", "test_datetime_features"], [52, 0, 0, "-", "test_encode_target_labels"], [53, 0, 0, "-", "test_experiment_tracker"], [54, 0, 0, "-", "test_feature_type_detector"], [55, 0, 0, "-", "test_fine_tune"], [56, 0, 0, "-", "test_load_for_production"], [57, 0, 0, "-", "test_nulls_and_infs"], [58, 0, 0, "-", "test_onehot_encoding"], [59, 0, 0, "-", "test_save_to_production"], [60, 0, 0, "-", "test_schema_checks"], [61, 0, 0, "-", "test_shap_explanations"], [62, 0, 0, "-", "test_target_encoding_binary"], [63, 0, 0, "-", "test_target_encoding_multiclass"], [64, 0, 0, "-", "test_train_test_split"]], "bluecast.tests.make_data": [[38, 0, 0, "-", "create_data"]], "bluecast.tests.make_data.create_data": [[38, 4, 1, "", "create_synthetic_dataframe"], [38, 4, 1, "", "create_synthetic_dataframe_regression"], [38, 4, 1, "", "create_synthetic_multiclass_dataframe"]], "bluecast.tests.test_analyse": [[40, 4, 1, "", "create_data_with_many_uniques"], [40, 4, 1, "", "create_data_with_nulls"], [40, 4, 1, "", "synthetic_categorical_data"], [40, 4, 1, "", "synthetic_train_test_data"], [40, 4, 1, "", "synthetic_train_test_data_regression"], [40, 4, 1, "", "test_bi_variate_plots"], [40, 4, 1, "", "test_check_unique_values"], [40, 4, 1, "", "test_correlation_heatmap"], [40, 4, 1, "", "test_correlation_to_target"], [40, 4, 1, "", "test_mutual_info_to_target"], [40, 4, 1, "", "test_mutual_info_to_target_multiclass"], [40, 4, 1, "", "test_mutual_info_to_target_regression"], [40, 4, 1, "", "test_pca_plot"], [40, 4, 1, "", "test_plot_count_pairs"], [40, 4, 1, "", "test_plot_null_percentage"], [40, 4, 1, "", "test_plot_pca_cumulative_variance"], [40, 4, 1, "", "test_plot_pie_chart"], [40, 4, 1, "", "test_plot_theil_u_heatmap"], [40, 4, 1, "", "test_plot_tsne"], [40, 4, 1, "", "test_univariate_plots"]], "bluecast.tests.test_cast": [[41, 1, 1, "", "CustomModel"], [41, 4, 1, "", "bluecast_instance"], [41, 4, 1, "", "synthetic_multiclass_train_test_data"], [41, 4, 1, "", "synthetic_train_test_data"], [41, 4, 1, "", "test_bluecast_with_custom_model"], [41, 4, 1, "", "test_blueprint_xgboost"], [41, 4, 1, "", "test_cat_encoding_via_ml_algorithm_and_ml_model_warning"], [41, 4, 1, "", "test_class_problem_mismatch_warnings"], [41, 4, 1, "", "test_enable_feature_selection_warning"], [41, 4, 1, "", "test_hypertuning_cv_folds_warning"], [41, 4, 1, "", "test_min_features_to_select_warning"], [41, 4, 1, "", "test_missing_feature_selector_warning"], [41, 4, 1, "", "test_missing_xgboost_tune_params_config_warning"], [41, 4, 1, "", "test_precise_cv_tuning_warnings"], [41, 4, 1, "", "test_shap_values_and_ml_algorithm_warning"]], "bluecast.tests.test_cast.CustomModel": [[41, 2, 1, "", "fit"], [41, 2, 1, "", "predict"]], "bluecast.tests.test_cast_cv": [[42, 1, 1, "", "CustomLRModel"], [42, 4, 1, "", "synthetic_train_test_data"], [42, 4, 1, "", "test_bluecast_cv_fit_eval_with_custom_model"], [42, 4, 1, "", "test_blueprint_cv_xgboost"]], "bluecast.tests.test_cast_cv.CustomLRModel": [[42, 2, 1, "", "fit"], [42, 2, 1, "", "predict"]], "bluecast.tests.test_cast_cv_multiclass": [[43, 1, 1, "", "CustomLRModel"], [43, 4, 1, "", "test_bluecast_cv_fit_eval_multiclass_with_custom_model"]], "bluecast.tests.test_cast_cv_multiclass.CustomLRModel": [[43, 2, 1, "", "fit"], [43, 2, 1, "", "predict"]], "bluecast.tests.test_cast_cv_regression": [[44, 1, 1, "", "CustomLRModel"], [44, 1, 1, "", "CustomModel"], [44, 1, 1, "", "MyCustomLastMilePreprocessing"], [44, 4, 1, "", "synthetic_train_test_data"], [44, 4, 1, "", "test_bluecast_cv_fit_eval_with_custom_model"], [44, 4, 1, "", "test_bluecast_cv_with_custom_objects"], [44, 4, 1, "", "test_blueprint_cv_xgboost"]], "bluecast.tests.test_cast_cv_regression.CustomLRModel": [[44, 2, 1, "", "fit"], [44, 2, 1, "", "predict"]], "bluecast.tests.test_cast_cv_regression.CustomModel": [[44, 2, 1, "", "fit"], [44, 2, 1, "", "predict"]], "bluecast.tests.test_cast_cv_regression.MyCustomLastMilePreprocessing": [[44, 2, 1, "", "custom_function"], [44, 2, 1, "", "fit_transform"], [44, 2, 1, "", "transform"]], "bluecast.tests.test_cast_regression": [[45, 1, 1, "", "CustomModel"], [45, 4, 1, "", "bluecast_instance"], [45, 4, 1, "", "synthetic_train_test_data"], [45, 4, 1, "", "test_bluecast_with_custom_model"], [45, 4, 1, "", "test_blueprint_xgboost"], [45, 4, 1, "", "test_cat_encoding_via_ml_algorithm_and_ml_model_warning"], [45, 4, 1, "", "test_enable_feature_selection_warning"], [45, 4, 1, "", "test_hypertuning_cv_folds_warning"], [45, 4, 1, "", "test_min_features_to_select_warning"], [45, 4, 1, "", "test_missing_feature_selector_warning"], [45, 4, 1, "", "test_missing_xgboost_tune_params_config_warning"], [45, 4, 1, "", "test_precise_cv_tuning_warnings"], [45, 4, 1, "", "test_shap_values_and_ml_algorithm_warning"]], "bluecast.tests.test_cast_regression.CustomModel": [[45, 2, 1, "", "fit"], [45, 2, 1, "", "predict"]], "bluecast.tests.test_category_encoder_orchestrator": [[46, 4, 1, "", "encoder_orchestrator"], [46, 4, 1, "", "sample_data"], [46, 4, 1, "", "test_fit_assigns_to_onehot_when_cardinality_below_threshold"], [46, 4, 1, "", "test_fit_assigns_to_target_when_cardinality_above_threshold"]], "bluecast.tests.test_check_gpu_support": [[47, 4, 1, "", "test_check_gpu_support"]], "bluecast.tests.test_custom_processing_base_class": [[48, 4, 1, "", "custom_preprocessing"], [48, 4, 1, "", "test_fit_transform_returns_tuple"], [48, 4, 1, "", "test_transform_returns_optional_target"], [48, 4, 1, "", "test_transform_returns_optional_target_prediction_mode"], [48, 4, 1, "", "test_transform_returns_tuple"]], "bluecast.tests.test_data_leakage_checks": [[49, 4, 1, "", "create_to_target_correlated_categorical_features"], [49, 4, 1, "", "create_to_target_correlated_features"], [49, 4, 1, "", "test_detect_categorical_leakage"], [49, 4, 1, "", "test_detect_leakage_via_correlation"]], "bluecast.tests.test_data_monitoring": [[50, 4, 1, "", "mock_logger"], [50, 4, 1, "", "test_kolmogorov_smirnov_test"], [50, 4, 1, "", "test_population_stability_index"], [50, 4, 1, "", "test_qqplot_two_samples"]], "bluecast.tests.test_datetime_features": [[51, 4, 1, "", "sample_dataframe"], [51, 4, 1, "", "test_date_converter"]], "bluecast.tests.test_encode_target_labels": [[52, 4, 1, "", "label_encoder"], [52, 4, 1, "", "sample_data"], [52, 4, 1, "", "test_fit_label_encoder"], [52, 4, 1, "", "test_fit_transform_target_labels"], [52, 4, 1, "", "test_label_encoder_reverse_transform"], [52, 4, 1, "", "test_label_encoder_transform"], [52, 4, 1, "", "test_transform_target_labels"], [52, 4, 1, "", "trained_label_encoder"]], "bluecast.tests.test_experiment_tracker": [[53, 4, 1, "", "experiment_tracker"], [53, 4, 1, "", "test_add_results"], [53, 4, 1, "", "test_get_best_score_empty"], [53, 4, 1, "", "test_get_best_score_higher_is_better"], [53, 4, 1, "", "test_get_best_score_lower_is_better"], [53, 4, 1, "", "test_retrieve_results_as_df"]], "bluecast.tests.test_feature_type_detector": [[54, 4, 1, "", "test_feature_type_detector"]], "bluecast.tests.test_fine_tune": [[55, 4, 1, "", "test_fine_tune_runs_without_errors"], [55, 4, 1, "", "test_fine_tune_runs_without_errors_using_cv"], [55, 4, 1, "", "xgboost_model"]], "bluecast.tests.test_load_for_production": [[56, 4, 1, "", "test_load_for_production"], [56, 4, 1, "", "test_load_for_production_with_default_file_type"]], "bluecast.tests.test_nulls_and_infs": [[57, 4, 1, "", "test_fill_infinite_values"], [57, 4, 1, "", "test_fill_nulls"]], "bluecast.tests.test_onehot_encoding": [[58, 4, 1, "", "example_data"], [58, 4, 1, "", "test_fit_transform"], [58, 4, 1, "", "test_transform"]], "bluecast.tests.test_save_to_production": [[59, 1, 1, "", "DummyClass"], [59, 4, 1, "", "test_save_to_production"]], "bluecast.tests.test_schema_checks": [[60, 4, 1, "", "test_transform_extra_columns"], [60, 4, 1, "", "test_transform_missing_columns"], [60, 4, 1, "", "test_transform_same_schema"]], "bluecast.tests.test_shap_explanations": [[61, 4, 1, "", "mock_model"], [61, 4, 1, "", "test_data"], [61, 4, 1, "", "test_eval_classifier_except"], [61, 4, 1, "", "test_shap_explanations"]], "bluecast.tests.test_target_encoding_binary": [[62, 4, 1, "", "sample_data"], [62, 4, 1, "", "test_transform_target_encode_binary_class"]], "bluecast.tests.test_target_encoding_multiclass": [[63, 4, 1, "", "test_multi_class_target_encoder"]], "bluecast.tests.test_train_test_split": [[64, 4, 1, "", "test_train_test_split_cross"], [64, 4, 1, "", "test_train_test_split_time"]], "conf": [[65, 5, 1, "", "author"], [65, 5, 1, "", "autoapi_dirs"], [65, 5, 1, "", "autoapi_type"], [65, 5, 1, "", "copyright"], [65, 5, 1, "", "exclude_patterns"], [65, 5, 1, "", "extensions"], [65, 5, 1, "", "html_static_path"], [65, 5, 1, "", "html_theme"], [65, 5, 1, "", "project"], [65, 5, 1, "", "release"], [65, 5, 1, "", "templates_path"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"bluecast": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67], "blueprint": [0, 1, 2, 3, 4], "cast": 0, "modul": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 15, 16, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "content": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 15, 16, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "class": [0, 1, 2, 3, 5, 7, 15, 19, 21, 22, 23, 25, 26, 28, 29, 30, 33, 34, 35, 41, 42, 43, 44, 45, 59], "cast_cv": 1, "cast_cv_regress": 2, "cast_regress": 3, "submodul": [4, 6, 10, 12, 14, 17, 20, 24, 31, 37, 39], "config": [5, 6, 7], "base_class": [5, 19], "training_config": 7, "eda": [8, 9, 10], "analys": 8, "function": [8, 9, 11, 13, 16, 27, 32, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "data_leakage_check": 9, "evalu": [11, 12, 13], "eval_metr": 11, "shap_valu": 13, "experiment": [14, 15], "track": 15, "general_util": [16, 17], "subpackag": [18, 37], "ml_model": [19, 20, 21, 22], "attribut": 19, "xgboost": 21, "xgboost_regress": 22, "monitor": [23, 24], "data_monitor": 23, "preprocess": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 67], "category_encoder_orchestr": 25, "custom": [26, 67], "datetime_featur": 27, "encode_target_label": 28, "feature_select": 29, "feature_typ": 30, "nulls_and_inf": 32, "onehot_encod": 33, "schema_check": 34, "target_encod": 35, "train_test_split": 36, "test": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "make_data": [38, 39], "create_data": 38, "test_analys": 40, "test_cast": 41, "test_cast_cv": 42, "test_cast_cv_multiclass": 43, "test_cast_cv_regress": 44, "test_cast_regress": 45, "test_category_encoder_orchestr": 46, "test_check_gpu_support": 47, "test_custom_processing_base_class": 48, "test_data_leakage_check": 49, "test_data_monitor": 50, "test_datetime_featur": 51, "test_encode_target_label": 52, "test_experiment_track": 53, "test_feature_type_detector": 54, "test_fine_tun": 55, "test_load_for_product": 56, "test_nulls_and_inf": 57, "test_onehot_encod": 58, "test_save_to_product": 59, "test_schema_check": 60, "test_shap_explan": 61, "test_target_encoding_binari": 62, "test_target_encoding_multiclass": 63, "test_train_test_split": 64, "conf": 65, "api": [66, 67], "refer": 66, "instal": 67, "end": 67, "user": 67, "develop": 67, "gener": 67, "usag": 67, "basic": 67, "advanc": 67, "explanatori": 67, "analysi": 67, "leakag": 67, "detect": 67, "enabl": 67, "cross": 67, "valid": 67, "even": 67, "more": 67, "overfit": 67, "robust": 67, "gain": 67, "extra": 67, "perform": 67, "us": 67, "multi": 67, "model": 67, "blend": 67, "pipelin": 67, "categor": 67, "encod": 67, "train": 67, "configur": 67, "featur": 67, "select": 67, "ml": 67, "inbuilt": 67, "experienttrack": 67, "mlflow": 67, "via": 67, "data": 67, "drift": 67, "checker": 67, "conveni": 67, "code": 67, "qualiti": 67, "document": 67, "kaggl": 67, "competit": 67, "result": 67, "exampl": 67, "notebook": 67, "how": 67, "contribut": 67, "meta": 67}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"bluecast.blueprints.cast": [[0, "module-bluecast.blueprints.cast"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [13, "module-contents"], [15, "module-contents"], [16, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [38, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"]], "Classes": [[0, "classes"], [1, "classes"], [2, "classes"], [3, "classes"], [5, "classes"], [7, "classes"], [15, "classes"], [19, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [25, "classes"], [26, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [59, "classes"]], "bluecast.blueprints.cast_cv": [[1, "module-bluecast.blueprints.cast_cv"]], "bluecast.blueprints.cast_cv_regression": [[2, "module-bluecast.blueprints.cast_cv_regression"]], "bluecast.blueprints.cast_regression": [[3, "module-bluecast.blueprints.cast_regression"]], "bluecast.blueprints": [[4, "module-bluecast.blueprints"]], "Submodules": [[4, "submodules"], [6, "submodules"], [10, "submodules"], [12, "submodules"], [14, "submodules"], [17, "submodules"], [20, "submodules"], [24, "submodules"], [31, "submodules"], [37, "submodules"], [39, "submodules"]], "bluecast.config.base_classes": [[5, "module-bluecast.config.base_classes"]], "bluecast.config": [[6, "module-bluecast.config"]], "bluecast.config.training_config": [[7, "module-bluecast.config.training_config"]], "bluecast.eda.analyse": [[8, "module-bluecast.eda.analyse"]], "Functions": [[8, "functions"], [9, "functions"], [11, "functions"], [13, "functions"], [16, "functions"], [27, "functions"], [32, "functions"], [36, "functions"], [38, "functions"], [40, "functions"], [41, "functions"], [42, "functions"], [43, "functions"], [44, "functions"], [45, "functions"], [46, "functions"], [47, "functions"], [48, "functions"], [49, "functions"], [50, "functions"], [51, "functions"], [52, "functions"], [53, "functions"], [54, "functions"], [55, "functions"], [56, "functions"], [57, "functions"], [58, "functions"], [59, "functions"], [60, "functions"], [61, "functions"], [62, "functions"], [63, "functions"], [64, "functions"]], "bluecast.eda.data_leakage_checks": [[9, "module-bluecast.eda.data_leakage_checks"]], "bluecast.eda": [[10, "module-bluecast.eda"]], "bluecast.evaluation.eval_metrics": [[11, "module-bluecast.evaluation.eval_metrics"]], "bluecast.evaluation": [[12, "module-bluecast.evaluation"]], "bluecast.evaluation.shap_values": [[13, "module-bluecast.evaluation.shap_values"]], "bluecast.experimentation": [[14, "module-bluecast.experimentation"]], "bluecast.experimentation.tracking": [[15, "module-bluecast.experimentation.tracking"]], "bluecast.general_utils.general_utils": [[16, "module-bluecast.general_utils.general_utils"]], "bluecast.general_utils": [[17, "module-bluecast.general_utils"]], "bluecast": [[18, "module-bluecast"]], "Subpackages": [[18, "subpackages"], [37, "subpackages"]], "bluecast.ml_modelling.base_classes": [[19, "module-bluecast.ml_modelling.base_classes"]], "Attributes": [[19, "attributes"]], "bluecast.ml_modelling": [[20, "module-bluecast.ml_modelling"]], "bluecast.ml_modelling.xgboost": [[21, "module-bluecast.ml_modelling.xgboost"]], "bluecast.ml_modelling.xgboost_regression": [[22, "module-bluecast.ml_modelling.xgboost_regression"]], "bluecast.monitoring.data_monitoring": [[23, "module-bluecast.monitoring.data_monitoring"]], "bluecast.monitoring": [[24, "module-bluecast.monitoring"]], "bluecast.preprocessing.category_encoder_orchestration": [[25, "module-bluecast.preprocessing.category_encoder_orchestration"]], "bluecast.preprocessing.custom": [[26, "module-bluecast.preprocessing.custom"]], "bluecast.preprocessing.datetime_features": [[27, "module-bluecast.preprocessing.datetime_features"]], "bluecast.preprocessing.encode_target_labels": [[28, "module-bluecast.preprocessing.encode_target_labels"]], "bluecast.preprocessing.feature_selection": [[29, "module-bluecast.preprocessing.feature_selection"]], "bluecast.preprocessing.feature_types": [[30, "module-bluecast.preprocessing.feature_types"]], "bluecast.preprocessing": [[31, "module-bluecast.preprocessing"]], "bluecast.preprocessing.nulls_and_infs": [[32, "module-bluecast.preprocessing.nulls_and_infs"]], "bluecast.preprocessing.onehot_encoding": [[33, "module-bluecast.preprocessing.onehot_encoding"]], "bluecast.preprocessing.schema_checks": [[34, "module-bluecast.preprocessing.schema_checks"]], "bluecast.preprocessing.target_encoding": [[35, "module-bluecast.preprocessing.target_encoding"]], "bluecast.preprocessing.train_test_split": [[36, "module-bluecast.preprocessing.train_test_split"]], "bluecast.tests": [[37, "module-bluecast.tests"]], "bluecast.tests.make_data.create_data": [[38, "module-bluecast.tests.make_data.create_data"]], "bluecast.tests.make_data": [[39, "module-bluecast.tests.make_data"]], "bluecast.tests.test_analyse": [[40, "module-bluecast.tests.test_analyse"]], "bluecast.tests.test_cast": [[41, "module-bluecast.tests.test_cast"]], "bluecast.tests.test_cast_cv": [[42, "module-bluecast.tests.test_cast_cv"]], "bluecast.tests.test_cast_cv_multiclass": [[43, "module-bluecast.tests.test_cast_cv_multiclass"]], "bluecast.tests.test_cast_cv_regression": [[44, "module-bluecast.tests.test_cast_cv_regression"]], "bluecast.tests.test_cast_regression": [[45, "module-bluecast.tests.test_cast_regression"]], "bluecast.tests.test_category_encoder_orchestrator": [[46, "module-bluecast.tests.test_category_encoder_orchestrator"]], "bluecast.tests.test_check_gpu_support": [[47, "module-bluecast.tests.test_check_gpu_support"]], "bluecast.tests.test_custom_processing_base_class": [[48, "module-bluecast.tests.test_custom_processing_base_class"]], "bluecast.tests.test_data_leakage_checks": [[49, "module-bluecast.tests.test_data_leakage_checks"]], "bluecast.tests.test_data_monitoring": [[50, "module-bluecast.tests.test_data_monitoring"]], "bluecast.tests.test_datetime_features": [[51, "module-bluecast.tests.test_datetime_features"]], "bluecast.tests.test_encode_target_labels": [[52, "module-bluecast.tests.test_encode_target_labels"]], "bluecast.tests.test_experiment_tracker": [[53, "module-bluecast.tests.test_experiment_tracker"]], "bluecast.tests.test_feature_type_detector": [[54, "module-bluecast.tests.test_feature_type_detector"]], "bluecast.tests.test_fine_tune": [[55, "module-bluecast.tests.test_fine_tune"]], "bluecast.tests.test_load_for_production": [[56, "module-bluecast.tests.test_load_for_production"]], "bluecast.tests.test_nulls_and_infs": [[57, "module-bluecast.tests.test_nulls_and_infs"]], "bluecast.tests.test_onehot_encoding": [[58, "module-bluecast.tests.test_onehot_encoding"]], "bluecast.tests.test_save_to_production": [[59, "module-bluecast.tests.test_save_to_production"]], "bluecast.tests.test_schema_checks": [[60, "module-bluecast.tests.test_schema_checks"]], "bluecast.tests.test_shap_explanations": [[61, "module-bluecast.tests.test_shap_explanations"]], "bluecast.tests.test_target_encoding_binary": [[62, "module-bluecast.tests.test_target_encoding_binary"]], "bluecast.tests.test_target_encoding_multiclass": [[63, "module-bluecast.tests.test_target_encoding_multiclass"]], "bluecast.tests.test_train_test_split": [[64, "module-bluecast.tests.test_train_test_split"]], "conf": [[65, "module-conf"]], "API Reference": [[66, "api-reference"]], "BlueCast": [[67, "bluecast"]], "Installation": [[67, "installation"]], "Installation for end users": [[67, "installation-for-end-users"]], "Installation for developers": [[67, "installation-for-developers"]], "General usage": [[67, "general-usage"]], "Basic usage": [[67, "basic-usage"]], "Advanced usage": [[67, "advanced-usage"]], "Explanatory analysis": [[67, "explanatory-analysis"]], "Leakage detection": [[67, "leakage-detection"]], "Enable cross-validation": [[67, "enable-cross-validation"]], "Enable even more overfitting-robust cross-validation": [[67, "enable-even-more-overfitting-robust-cross-validation"]], "Gaining extra performance": [[67, "gaining-extra-performance"]], "Use multi-model blended pipeline": [[67, "use-multi-model-blended-pipeline"]], "Categorical encoding": [[67, "categorical-encoding"]], "Custom training configuration": [[67, "custom-training-configuration"]], "Custom preprocessing": [[67, "custom-preprocessing"]], "Custom feature selection": [[67, "custom-feature-selection"]], "Custom ML model": [[67, "custom-ml-model"]], "Using the inbuilt ExperientTracker": [[67, "using-the-inbuilt-experienttracker"]], "Use Mlflow via custom ExperientTracker API": [[67, "use-mlflow-via-custom-experienttracker-api"]], "Custom data drift checker": [[67, "custom-data-drift-checker"]], "Convenience features": [[67, "convenience-features"]], "Code quality": [[67, "code-quality"]], "Documentation": [[67, "documentation"]], "Kaggle competition results and example notebooks": [[67, "kaggle-competition-results-and-example-notebooks"]], "How to contribute": [[67, "how-to-contribute"]], "Meta": [[67, "meta"]]}, "indexentries": {"bluecast (class in bluecast.blueprints.cast)": [[0, "bluecast.blueprints.cast.BlueCast"]], "bluecast.blueprints.cast": [[0, "module-bluecast.blueprints.cast"]], "fit() (bluecast.blueprints.cast.bluecast method)": [[0, "bluecast.blueprints.cast.BlueCast.fit"]], "fit_eval() (bluecast.blueprints.cast.bluecast method)": [[0, "bluecast.blueprints.cast.BlueCast.fit_eval"]], "initial_checks() (bluecast.blueprints.cast.bluecast method)": [[0, "bluecast.blueprints.cast.BlueCast.initial_checks"]], "module": [[0, "module-bluecast.blueprints.cast"], [1, "module-bluecast.blueprints.cast_cv"], [2, "module-bluecast.blueprints.cast_cv_regression"], [3, "module-bluecast.blueprints.cast_regression"], [4, "module-bluecast.blueprints"], [5, "module-bluecast.config.base_classes"], [6, "module-bluecast.config"], [7, "module-bluecast.config.training_config"], [8, "module-bluecast.eda.analyse"], [9, "module-bluecast.eda.data_leakage_checks"], [10, "module-bluecast.eda"], [11, "module-bluecast.evaluation.eval_metrics"], [12, "module-bluecast.evaluation"], [13, "module-bluecast.evaluation.shap_values"], [14, "module-bluecast.experimentation"], [15, "module-bluecast.experimentation.tracking"], [16, "module-bluecast.general_utils.general_utils"], [17, "module-bluecast.general_utils"], [18, "module-bluecast"], [19, "module-bluecast.ml_modelling.base_classes"], [20, "module-bluecast.ml_modelling"], [21, "module-bluecast.ml_modelling.xgboost"], [22, "module-bluecast.ml_modelling.xgboost_regression"], [23, "module-bluecast.monitoring.data_monitoring"], [24, "module-bluecast.monitoring"], [25, "module-bluecast.preprocessing.category_encoder_orchestration"], [26, "module-bluecast.preprocessing.custom"], [27, "module-bluecast.preprocessing.datetime_features"], [28, "module-bluecast.preprocessing.encode_target_labels"], [29, "module-bluecast.preprocessing.feature_selection"], [30, "module-bluecast.preprocessing.feature_types"], [31, "module-bluecast.preprocessing"], [32, "module-bluecast.preprocessing.nulls_and_infs"], [33, "module-bluecast.preprocessing.onehot_encoding"], [34, "module-bluecast.preprocessing.schema_checks"], [35, "module-bluecast.preprocessing.target_encoding"], [36, "module-bluecast.preprocessing.train_test_split"], [37, "module-bluecast.tests"], [38, "module-bluecast.tests.make_data.create_data"], [39, "module-bluecast.tests.make_data"], [40, "module-bluecast.tests.test_analyse"], [41, "module-bluecast.tests.test_cast"], [42, "module-bluecast.tests.test_cast_cv"], [43, "module-bluecast.tests.test_cast_cv_multiclass"], [44, "module-bluecast.tests.test_cast_cv_regression"], [45, "module-bluecast.tests.test_cast_regression"], [46, "module-bluecast.tests.test_category_encoder_orchestrator"], [47, "module-bluecast.tests.test_check_gpu_support"], [48, "module-bluecast.tests.test_custom_processing_base_class"], [49, "module-bluecast.tests.test_data_leakage_checks"], [50, "module-bluecast.tests.test_data_monitoring"], [51, "module-bluecast.tests.test_datetime_features"], [52, "module-bluecast.tests.test_encode_target_labels"], [53, "module-bluecast.tests.test_experiment_tracker"], [54, "module-bluecast.tests.test_feature_type_detector"], [55, "module-bluecast.tests.test_fine_tune"], [56, "module-bluecast.tests.test_load_for_production"], [57, "module-bluecast.tests.test_nulls_and_infs"], [58, "module-bluecast.tests.test_onehot_encoding"], [59, "module-bluecast.tests.test_save_to_production"], [60, "module-bluecast.tests.test_schema_checks"], [61, "module-bluecast.tests.test_shap_explanations"], [62, "module-bluecast.tests.test_target_encoding_binary"], [63, "module-bluecast.tests.test_target_encoding_multiclass"], [64, "module-bluecast.tests.test_train_test_split"], [65, "module-conf"]], "predict() (bluecast.blueprints.cast.bluecast method)": [[0, "bluecast.blueprints.cast.BlueCast.predict"]], "transform_new_data() (bluecast.blueprints.cast.bluecast method)": [[0, "bluecast.blueprints.cast.BlueCast.transform_new_data"]], "bluecastcv (class in bluecast.blueprints.cast_cv)": [[1, "bluecast.blueprints.cast_cv.BlueCastCV"]], "bluecast.blueprints.cast_cv": [[1, "module-bluecast.blueprints.cast_cv"]], "fit() (bluecast.blueprints.cast_cv.bluecastcv method)": [[1, "bluecast.blueprints.cast_cv.BlueCastCV.fit"]], "fit_eval() (bluecast.blueprints.cast_cv.bluecastcv method)": [[1, "bluecast.blueprints.cast_cv.BlueCastCV.fit_eval"]], "predict() (bluecast.blueprints.cast_cv.bluecastcv method)": [[1, "bluecast.blueprints.cast_cv.BlueCastCV.predict"]], "prepare_data() (bluecast.blueprints.cast_cv.bluecastcv method)": [[1, "bluecast.blueprints.cast_cv.BlueCastCV.prepare_data"]], "show_oof_scores() (bluecast.blueprints.cast_cv.bluecastcv method)": [[1, "bluecast.blueprints.cast_cv.BlueCastCV.show_oof_scores"]], "bluecastcvregression (class in bluecast.blueprints.cast_cv_regression)": [[2, "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression"]], "bluecast.blueprints.cast_cv_regression": [[2, "module-bluecast.blueprints.cast_cv_regression"]], "fit() (bluecast.blueprints.cast_cv_regression.bluecastcvregression method)": [[2, "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression.fit"]], "fit_eval() (bluecast.blueprints.cast_cv_regression.bluecastcvregression method)": [[2, "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression.fit_eval"]], "predict() (bluecast.blueprints.cast_cv_regression.bluecastcvregression method)": [[2, "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression.predict"]], "prepare_data() (bluecast.blueprints.cast_cv_regression.bluecastcvregression method)": [[2, "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression.prepare_data"]], "show_oof_scores() (bluecast.blueprints.cast_cv_regression.bluecastcvregression method)": [[2, "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression.show_oof_scores"]], "bluecastregression (class in bluecast.blueprints.cast_regression)": [[3, "bluecast.blueprints.cast_regression.BlueCastRegression"]], "bluecast.blueprints.cast_regression": [[3, "module-bluecast.blueprints.cast_regression"]], "fit() (bluecast.blueprints.cast_regression.bluecastregression method)": [[3, "bluecast.blueprints.cast_regression.BlueCastRegression.fit"]], "fit_eval() (bluecast.blueprints.cast_regression.bluecastregression method)": [[3, "bluecast.blueprints.cast_regression.BlueCastRegression.fit_eval"]], "initial_checks() (bluecast.blueprints.cast_regression.bluecastregression method)": [[3, "bluecast.blueprints.cast_regression.BlueCastRegression.initial_checks"]], "predict() (bluecast.blueprints.cast_regression.bluecastregression method)": [[3, "bluecast.blueprints.cast_regression.BlueCastRegression.predict"]], "transform_new_data() (bluecast.blueprints.cast_regression.bluecastregression method)": [[3, "bluecast.blueprints.cast_regression.BlueCastRegression.transform_new_data"]], "bluecast.blueprints": [[4, "module-bluecast.blueprints"]], "baseclassexperimenttracker (class in bluecast.config.base_classes)": [[5, "bluecast.config.base_classes.BaseClassExperimentTracker"]], "add_results() (bluecast.config.base_classes.baseclassexperimenttracker method)": [[5, "bluecast.config.base_classes.BaseClassExperimentTracker.add_results"]], "bluecast.config.base_classes": [[5, "module-bluecast.config.base_classes"]], "retrieve_results_as_df() (bluecast.config.base_classes.baseclassexperimenttracker method)": [[5, "bluecast.config.base_classes.BaseClassExperimentTracker.retrieve_results_as_df"]], "bluecast.config": [[6, "module-bluecast.config"]], "config (class in bluecast.config.training_config)": [[7, "bluecast.config.training_config.Config"]], "trainingconfig (class in bluecast.config.training_config)": [[7, "bluecast.config.training_config.TrainingConfig"]], "xgboostfinalparamconfig (class in bluecast.config.training_config)": [[7, "bluecast.config.training_config.XgboostFinalParamConfig"]], "xgboosttuneparamsconfig (class in bluecast.config.training_config)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig"]], "xgboosttuneparamsregressionconfig (class in bluecast.config.training_config)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig"]], "alpha_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.alpha_max"]], "alpha_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.alpha_max"]], "alpha_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.alpha_min"]], "alpha_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.alpha_min"]], "arbitrary_types_allowed (bluecast.config.training_config.config attribute)": [[7, "bluecast.config.training_config.Config.arbitrary_types_allowed"]], "autotune_model (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.autotune_model"]], "bluecast.config.training_config": [[7, "module-bluecast.config.training_config"]], "booster (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.booster"]], "booster (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.booster"]], "calculate_shap_values (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.calculate_shap_values"]], "cardinality_threshold_for_onehot_encoding (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.cardinality_threshold_for_onehot_encoding"]], "cat_encoding_via_ml_algorithm (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.cat_encoding_via_ml_algorithm"]], "classification_threshold (bluecast.config.training_config.xgboostfinalparamconfig attribute)": [[7, "bluecast.config.training_config.XgboostFinalParamConfig.classification_threshold"]], "col_sample_by_level_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.col_sample_by_level_max"]], "col_sample_by_level_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.col_sample_by_level_max"]], "col_sample_by_level_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.col_sample_by_level_min"]], "col_sample_by_level_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.col_sample_by_level_min"]], "col_sample_by_tree_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.col_sample_by_tree_max"]], "col_sample_by_tree_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.col_sample_by_tree_max"]], "col_sample_by_tree_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.col_sample_by_tree_min"]], "col_sample_by_tree_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.col_sample_by_tree_min"]], "early_stopping_rounds (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.early_stopping_rounds"]], "enable_feature_selection (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.enable_feature_selection"]], "enable_grid_search_fine_tuning (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.enable_grid_search_fine_tuning"]], "eta_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.eta_max"]], "eta_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.eta_max"]], "eta_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.eta_min"]], "eta_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.eta_min"]], "experiment_name (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.experiment_name"]], "gamma_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.gamma_max"]], "gamma_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.gamma_max"]], "gamma_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.gamma_min"]], "gamma_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.gamma_min"]], "global_random_state (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.global_random_state"]], "gridsearch_nb_parameters_per_grid (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.gridsearch_nb_parameters_per_grid"]], "gridsearch_tuning_max_runtime_secs (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.gridsearch_tuning_max_runtime_secs"]], "hyperparameter_tuning_max_runtime_secs (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.hyperparameter_tuning_max_runtime_secs"]], "hyperparameter_tuning_rounds (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.hyperparameter_tuning_rounds"]], "hypertuning_cv_folds (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.hypertuning_cv_folds"]], "increase_random_state_in_bluecast_cv_by (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.increase_random_state_in_bluecast_cv_by"]], "lambda_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.lambda_max"]], "lambda_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.lambda_max"]], "lambda_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.lambda_min"]], "lambda_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.lambda_min"]], "max_depth_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.max_depth_max"]], "max_depth_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.max_depth_max"]], "max_depth_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.max_depth_min"]], "max_depth_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.max_depth_min"]], "max_leaves_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.max_leaves_max"]], "max_leaves_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.max_leaves_max"]], "max_leaves_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.max_leaves_min"]], "max_leaves_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.max_leaves_min"]], "min_features_to_select (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.min_features_to_select"]], "model_eval_metric (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.xgboost_eval_metric"]], "model_eval_metric (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.xgboost_eval_metric"]], "model_objective (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.xgboost_objective"]], "model_objective (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.xgboost_objective"]], "model_verbosity (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.verbosity_during_hyperparameter_tuning"]], "model_verbosity (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.verbosity_during_hyperparameter_tuning"]], "model_verbosity_during_final_training (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.verbosity_during_final_model_training"]], "model_verbosity_during_final_training (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.verbosity_during_final_model_training"]], "optuna_sampler_n_startup_trials (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.optuna_sampler_n_startup_trials"]], "params (bluecast.config.training_config.xgboostfinalparamconfig attribute)": [[7, "bluecast.config.training_config.XgboostFinalParamConfig.params"]], "precise_cv_tuning (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.precise_cv_tuning"]], "sample_weight (bluecast.config.training_config.xgboostfinalparamconfig attribute)": [[7, "bluecast.config.training_config.XgboostFinalParamConfig.sample_weight"]], "show_detailed_tuning_logs (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.show_detailed_tuning_logs"]], "shuffle_during_training (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.shuffle_during_training"]], "steps_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.steps_max"]], "steps_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.steps_max"]], "steps_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.steps_min"]], "steps_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.steps_min"]], "sub_sample_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.sub_sample_max"]], "sub_sample_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.sub_sample_max"]], "sub_sample_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.sub_sample_min"]], "sub_sample_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.sub_sample_min"]], "subsample_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.subsample_max"]], "subsample_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.subsample_max"]], "subsample_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.subsample_min"]], "subsample_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.subsample_min"]], "train_size (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.train_size"]], "train_split_stratify (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.train_split_stratify"]], "use_full_data_for_final_model (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.use_full_data_for_final_model"]], "bi_variate_plots() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.bi_variate_plots"]], "bluecast.eda.analyse": [[8, "module-bluecast.eda.analyse"]], "check_unique_values() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.check_unique_values"]], "conditional_entropy() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.conditional_entropy"]], "correlation_heatmap() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.correlation_heatmap"]], "correlation_to_target() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.correlation_to_target"]], "mutual_info_to_target() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.mutual_info_to_target"]], "plot_count_pair() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_count_pair"]], "plot_count_pairs() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_count_pairs"]], "plot_null_percentage() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_null_percentage"]], "plot_pca() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_pca"]], "plot_pca_cumulative_variance() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_pca_cumulative_variance"]], "plot_pie_chart() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_pie_chart"]], "plot_theil_u_heatmap() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_theil_u_heatmap"]], "plot_tsne() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_tsne"]], "theil_u() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.theil_u"]], "univariate_plots() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.univariate_plots"]], "bluecast.eda.data_leakage_checks": [[9, "module-bluecast.eda.data_leakage_checks"]], "detect_categorical_leakage() (in module bluecast.eda.data_leakage_checks)": [[9, "bluecast.eda.data_leakage_checks.detect_categorical_leakage"]], "detect_leakage_via_correlation() (in module bluecast.eda.data_leakage_checks)": [[9, "bluecast.eda.data_leakage_checks.detect_leakage_via_correlation"]], "bluecast.eda": [[10, "module-bluecast.eda"]], "balanced_log_loss() (in module bluecast.evaluation.eval_metrics)": [[11, "bluecast.evaluation.eval_metrics.balanced_log_loss"]], "bluecast.evaluation.eval_metrics": [[11, "module-bluecast.evaluation.eval_metrics"]], "eval_classifier() (in module bluecast.evaluation.eval_metrics)": [[11, "bluecast.evaluation.eval_metrics.eval_classifier"]], "eval_regressor() (in module bluecast.evaluation.eval_metrics)": [[11, "bluecast.evaluation.eval_metrics.eval_regressor"]], "plot_lift_chart() (in module bluecast.evaluation.eval_metrics)": [[11, "bluecast.evaluation.eval_metrics.plot_lift_chart"]], "plot_probability_distribution() (in module bluecast.evaluation.eval_metrics)": [[11, "bluecast.evaluation.eval_metrics.plot_probability_distribution"]], "plot_roc_auc() (in module bluecast.evaluation.eval_metrics)": [[11, "bluecast.evaluation.eval_metrics.plot_roc_auc"]], "bluecast.evaluation": [[12, "module-bluecast.evaluation"]], "bluecast.evaluation.shap_values": [[13, "module-bluecast.evaluation.shap_values"]], "shap_explanations() (in module bluecast.evaluation.shap_values)": [[13, "bluecast.evaluation.shap_values.shap_explanations"]], "bluecast.experimentation": [[14, "module-bluecast.experimentation"]], "experimenttracker (class in bluecast.experimentation.tracking)": [[15, "bluecast.experimentation.tracking.ExperimentTracker"]], "add_results() (bluecast.experimentation.tracking.experimenttracker method)": [[15, "bluecast.experimentation.tracking.ExperimentTracker.add_results"]], "bluecast.experimentation.tracking": [[15, "module-bluecast.experimentation.tracking"]], "get_best_score() (bluecast.experimentation.tracking.experimenttracker method)": [[15, "bluecast.experimentation.tracking.ExperimentTracker.get_best_score"]], "retrieve_results_as_df() (bluecast.experimentation.tracking.experimenttracker method)": [[15, "bluecast.experimentation.tracking.ExperimentTracker.retrieve_results_as_df"]], "bluecast.general_utils.general_utils": [[16, "module-bluecast.general_utils.general_utils"]], "check_gpu_support() (in module bluecast.general_utils.general_utils)": [[16, "bluecast.general_utils.general_utils.check_gpu_support"]], "load_for_production() (in module bluecast.general_utils.general_utils)": [[16, "bluecast.general_utils.general_utils.load_for_production"]], "logger() (in module bluecast.general_utils.general_utils)": [[16, "bluecast.general_utils.general_utils.logger"]], "save_to_production() (in module bluecast.general_utils.general_utils)": [[16, "bluecast.general_utils.general_utils.save_to_production"]], "bluecast.general_utils": [[17, "module-bluecast.general_utils"]], "bluecast": [[18, "module-bluecast"]], "baseclassmlmodel (class in bluecast.ml_modelling.base_classes)": [[19, "bluecast.ml_modelling.base_classes.BaseClassMlModel"]], "baseclassmlregressionmodel (class in bluecast.ml_modelling.base_classes)": [[19, "bluecast.ml_modelling.base_classes.BaseClassMlRegressionModel"]], "predictedclasses (in module bluecast.ml_modelling.base_classes)": [[19, "bluecast.ml_modelling.base_classes.PredictedClasses"]], "predictedprobas (in module bluecast.ml_modelling.base_classes)": [[19, "bluecast.ml_modelling.base_classes.PredictedProbas"]], "bluecast.ml_modelling.base_classes": [[19, "module-bluecast.ml_modelling.base_classes"]], "fit() (bluecast.ml_modelling.base_classes.baseclassmlmodel method)": [[19, "bluecast.ml_modelling.base_classes.BaseClassMlModel.fit"]], "fit() (bluecast.ml_modelling.base_classes.baseclassmlregressionmodel method)": [[19, "bluecast.ml_modelling.base_classes.BaseClassMlRegressionModel.fit"]], "predict() (bluecast.ml_modelling.base_classes.baseclassmlmodel method)": [[19, "bluecast.ml_modelling.base_classes.BaseClassMlModel.predict"]], "predict() (bluecast.ml_modelling.base_classes.baseclassmlregressionmodel method)": [[19, "bluecast.ml_modelling.base_classes.BaseClassMlRegressionModel.predict"]], "bluecast.ml_modelling": [[20, "module-bluecast.ml_modelling"]], "xgboostmodel (class in bluecast.ml_modelling.xgboost)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel"]], "_fine_tune_precise() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel._fine_tune_precise"]], "autotune() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.autotune"]], "bluecast.ml_modelling.xgboost": [[21, "module-bluecast.ml_modelling.xgboost"]], "calculate_class_weights() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.calculate_class_weights"]], "check_load_confs() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.check_load_confs"]], "constant_loss_degregation_factor() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.constant_loss_degregation_factor"]], "create_d_matrices() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.create_d_matrices"]], "fine_tune() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.fine_tune"]], "fit() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.fit"]], "get_best_score() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.get_best_score"]], "increasing_noise_evaluator() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.increasing_noise_evaluator"]], "predict() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.predict"]], "train_single_fold_model() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.train_single_fold_model"]], "xgboostmodelregression (class in bluecast.ml_modelling.xgboost_regression)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression"]], "_fine_tune_precise() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression._fine_tune_precise"]], "autotune() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.autotune"]], "bluecast.ml_modelling.xgboost_regression": [[22, "module-bluecast.ml_modelling.xgboost_regression"]], "check_load_confs() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.check_load_confs"]], "constant_loss_degregation_factor() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.constant_loss_degregation_factor"]], "create_d_matrices() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.create_d_matrices"]], "fine_tune() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.fine_tune"]], "fit() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.fit"]], "get_best_score() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.get_best_score"]], "increasing_noise_evaluator() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.increasing_noise_evaluator"]], "predict() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.predict"]], "train_single_fold_model() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.train_single_fold_model"]], "datadrift (class in bluecast.monitoring.data_monitoring)": [[23, "bluecast.monitoring.data_monitoring.DataDrift"]], "_calculate_psi() (bluecast.monitoring.data_monitoring.datadrift method)": [[23, "bluecast.monitoring.data_monitoring.DataDrift._calculate_psi"]], "bluecast.monitoring.data_monitoring": [[23, "module-bluecast.monitoring.data_monitoring"]], "kolmogorov_smirnov_test() (bluecast.monitoring.data_monitoring.datadrift method)": [[23, "bluecast.monitoring.data_monitoring.DataDrift.kolmogorov_smirnov_test"]], "population_stability_index() (bluecast.monitoring.data_monitoring.datadrift method)": [[23, "bluecast.monitoring.data_monitoring.DataDrift.population_stability_index"]], "qqplot_two_samples() (bluecast.monitoring.data_monitoring.datadrift method)": [[23, "bluecast.monitoring.data_monitoring.DataDrift.qqplot_two_samples"]], "bluecast.monitoring": [[24, "module-bluecast.monitoring"]], "categoryencoderorchestrator (class in bluecast.preprocessing.category_encoder_orchestration)": [[25, "bluecast.preprocessing.category_encoder_orchestration.CategoryEncoderOrchestrator"]], "bluecast.preprocessing.category_encoder_orchestration": [[25, "module-bluecast.preprocessing.category_encoder_orchestration"]], "fit() (bluecast.preprocessing.category_encoder_orchestration.categoryencoderorchestrator method)": [[25, "bluecast.preprocessing.category_encoder_orchestration.CategoryEncoderOrchestrator.fit"]], "custompreprocessing (class in bluecast.preprocessing.custom)": [[26, "bluecast.preprocessing.custom.CustomPreprocessing"]], "bluecast.preprocessing.custom": [[26, "module-bluecast.preprocessing.custom"]], "fit_transform() (bluecast.preprocessing.custom.custompreprocessing method)": [[26, "bluecast.preprocessing.custom.CustomPreprocessing.fit_transform"]], "transform() (bluecast.preprocessing.custom.custompreprocessing method)": [[26, "bluecast.preprocessing.custom.CustomPreprocessing.transform"]], "bluecast.preprocessing.datetime_features": [[27, "module-bluecast.preprocessing.datetime_features"]], "date_converter() (in module bluecast.preprocessing.datetime_features)": [[27, "bluecast.preprocessing.datetime_features.date_converter"]], "targetlabelencoder (class in bluecast.preprocessing.encode_target_labels)": [[28, "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder"]], "bluecast.preprocessing.encode_target_labels": [[28, "module-bluecast.preprocessing.encode_target_labels"]], "fit_label_encoder() (bluecast.preprocessing.encode_target_labels.targetlabelencoder method)": [[28, "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder.fit_label_encoder"]], "fit_transform_target_labels() (bluecast.preprocessing.encode_target_labels.targetlabelencoder method)": [[28, "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder.fit_transform_target_labels"]], "label_encoder_reverse_transform() (bluecast.preprocessing.encode_target_labels.targetlabelencoder method)": [[28, "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder.label_encoder_reverse_transform"]], "label_encoder_transform() (bluecast.preprocessing.encode_target_labels.targetlabelencoder method)": [[28, "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder.label_encoder_transform"]], "transform_target_labels() (bluecast.preprocessing.encode_target_labels.targetlabelencoder method)": [[28, "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder.transform_target_labels"]], "rfecvselector (class in bluecast.preprocessing.feature_selection)": [[29, "bluecast.preprocessing.feature_selection.RFECVSelector"]], "bluecast.preprocessing.feature_selection": [[29, "module-bluecast.preprocessing.feature_selection"]], "fit_transform() (bluecast.preprocessing.feature_selection.rfecvselector method)": [[29, "bluecast.preprocessing.feature_selection.RFECVSelector.fit_transform"]], "transform() (bluecast.preprocessing.feature_selection.rfecvselector method)": [[29, "bluecast.preprocessing.feature_selection.RFECVSelector.transform"]], "featuretypedetector (class in bluecast.preprocessing.feature_types)": [[30, "bluecast.preprocessing.feature_types.FeatureTypeDetector"]], "bluecast.preprocessing.feature_types": [[30, "module-bluecast.preprocessing.feature_types"]], "cast_rest_columns_to_object() (bluecast.preprocessing.feature_types.featuretypedetector method)": [[30, "bluecast.preprocessing.feature_types.FeatureTypeDetector.cast_rest_columns_to_object"]], "fit_transform_feature_types() (bluecast.preprocessing.feature_types.featuretypedetector method)": [[30, "bluecast.preprocessing.feature_types.FeatureTypeDetector.fit_transform_feature_types"]], "identify_bool_columns() (bluecast.preprocessing.feature_types.featuretypedetector method)": [[30, "bluecast.preprocessing.feature_types.FeatureTypeDetector.identify_bool_columns"]], "identify_date_time_columns() (bluecast.preprocessing.feature_types.featuretypedetector method)": [[30, "bluecast.preprocessing.feature_types.FeatureTypeDetector.identify_date_time_columns"]], "identify_num_columns() (bluecast.preprocessing.feature_types.featuretypedetector method)": [[30, "bluecast.preprocessing.feature_types.FeatureTypeDetector.identify_num_columns"]], "transform_feature_types() (bluecast.preprocessing.feature_types.featuretypedetector method)": [[30, "bluecast.preprocessing.feature_types.FeatureTypeDetector.transform_feature_types"]], "bluecast.preprocessing": [[31, "module-bluecast.preprocessing"]], "bluecast.preprocessing.nulls_and_infs": [[32, "module-bluecast.preprocessing.nulls_and_infs"]], "fill_infinite_values() (in module bluecast.preprocessing.nulls_and_infs)": [[32, "bluecast.preprocessing.nulls_and_infs.fill_infinite_values"]], "fill_nulls() (in module bluecast.preprocessing.nulls_and_infs)": [[32, "bluecast.preprocessing.nulls_and_infs.fill_nulls"]], "onehotcategoryencoder (class in bluecast.preprocessing.onehot_encoding)": [[33, "bluecast.preprocessing.onehot_encoding.OneHotCategoryEncoder"]], "bluecast.preprocessing.onehot_encoding": [[33, "module-bluecast.preprocessing.onehot_encoding"]], "fit_transform() (bluecast.preprocessing.onehot_encoding.onehotcategoryencoder method)": [[33, "bluecast.preprocessing.onehot_encoding.OneHotCategoryEncoder.fit_transform"]], "transform() (bluecast.preprocessing.onehot_encoding.onehotcategoryencoder method)": [[33, "bluecast.preprocessing.onehot_encoding.OneHotCategoryEncoder.transform"]], "schemadetector (class in bluecast.preprocessing.schema_checks)": [[34, "bluecast.preprocessing.schema_checks.SchemaDetector"]], "bluecast.preprocessing.schema_checks": [[34, "module-bluecast.preprocessing.schema_checks"]], "fit() (bluecast.preprocessing.schema_checks.schemadetector method)": [[34, "bluecast.preprocessing.schema_checks.SchemaDetector.fit"]], "transform() (bluecast.preprocessing.schema_checks.schemadetector method)": [[34, "bluecast.preprocessing.schema_checks.SchemaDetector.transform"]], "binaryclasstargetencoder (class in bluecast.preprocessing.target_encoding)": [[35, "bluecast.preprocessing.target_encoding.BinaryClassTargetEncoder"]], "multiclasstargetencoder (class in bluecast.preprocessing.target_encoding)": [[35, "bluecast.preprocessing.target_encoding.MultiClassTargetEncoder"]], "bluecast.preprocessing.target_encoding": [[35, "module-bluecast.preprocessing.target_encoding"]], "fit_target_encode_binary_class() (bluecast.preprocessing.target_encoding.binaryclasstargetencoder method)": [[35, "bluecast.preprocessing.target_encoding.BinaryClassTargetEncoder.fit_target_encode_binary_class"]], "fit_target_encode_multiclass() (bluecast.preprocessing.target_encoding.multiclasstargetencoder method)": [[35, "bluecast.preprocessing.target_encoding.MultiClassTargetEncoder.fit_target_encode_multiclass"]], "transform_target_encode_binary_class() (bluecast.preprocessing.target_encoding.binaryclasstargetencoder method)": [[35, "bluecast.preprocessing.target_encoding.BinaryClassTargetEncoder.transform_target_encode_binary_class"]], "transform_target_encode_multiclass() (bluecast.preprocessing.target_encoding.multiclasstargetencoder method)": [[35, "bluecast.preprocessing.target_encoding.MultiClassTargetEncoder.transform_target_encode_multiclass"]], "bluecast.preprocessing.train_test_split": [[36, "module-bluecast.preprocessing.train_test_split"]], "train_test_split() (in module bluecast.preprocessing.train_test_split)": [[36, "bluecast.preprocessing.train_test_split.train_test_split"]], "train_test_split_cross() (in module bluecast.preprocessing.train_test_split)": [[36, "bluecast.preprocessing.train_test_split.train_test_split_cross"]], "train_test_split_time() (in module bluecast.preprocessing.train_test_split)": [[36, "bluecast.preprocessing.train_test_split.train_test_split_time"]], "bluecast.tests": [[37, "module-bluecast.tests"]], "bluecast.tests.make_data.create_data": [[38, "module-bluecast.tests.make_data.create_data"]], "create_synthetic_dataframe() (in module bluecast.tests.make_data.create_data)": [[38, "bluecast.tests.make_data.create_data.create_synthetic_dataframe"]], "create_synthetic_dataframe_regression() (in module bluecast.tests.make_data.create_data)": [[38, "bluecast.tests.make_data.create_data.create_synthetic_dataframe_regression"]], "create_synthetic_multiclass_dataframe() (in module bluecast.tests.make_data.create_data)": [[38, "bluecast.tests.make_data.create_data.create_synthetic_multiclass_dataframe"]], "bluecast.tests.make_data": [[39, "module-bluecast.tests.make_data"]], "bluecast.tests.test_analyse": [[40, "module-bluecast.tests.test_analyse"]], "create_data_with_many_uniques() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.create_data_with_many_uniques"]], "create_data_with_nulls() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.create_data_with_nulls"]], "synthetic_categorical_data() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.synthetic_categorical_data"]], "synthetic_train_test_data() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.synthetic_train_test_data"]], "synthetic_train_test_data_regression() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.synthetic_train_test_data_regression"]], "test_bi_variate_plots() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_bi_variate_plots"]], "test_check_unique_values() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_check_unique_values"]], "test_correlation_heatmap() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_correlation_heatmap"]], "test_correlation_to_target() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_correlation_to_target"]], "test_mutual_info_to_target() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_mutual_info_to_target"]], "test_mutual_info_to_target_multiclass() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_mutual_info_to_target_multiclass"]], "test_mutual_info_to_target_regression() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_mutual_info_to_target_regression"]], "test_pca_plot() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_pca_plot"]], "test_plot_count_pairs() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_plot_count_pairs"]], "test_plot_null_percentage() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_plot_null_percentage"]], "test_plot_pca_cumulative_variance() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_plot_pca_cumulative_variance"]], "test_plot_pie_chart() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_plot_pie_chart"]], "test_plot_theil_u_heatmap() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_plot_theil_u_heatmap"]], "test_plot_tsne() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_plot_tsne"]], "test_univariate_plots() (in module bluecast.tests.test_analyse)": [[40, "bluecast.tests.test_analyse.test_univariate_plots"]], "custommodel (class in bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.CustomModel"]], "bluecast.tests.test_cast": [[41, "module-bluecast.tests.test_cast"]], "bluecast_instance() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.bluecast_instance"]], "fit() (bluecast.tests.test_cast.custommodel method)": [[41, "bluecast.tests.test_cast.CustomModel.fit"]], "predict() (bluecast.tests.test_cast.custommodel method)": [[41, "bluecast.tests.test_cast.CustomModel.predict"]], "synthetic_multiclass_train_test_data() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.synthetic_multiclass_train_test_data"]], "synthetic_train_test_data() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.synthetic_train_test_data"]], "test_bluecast_with_custom_model() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.test_bluecast_with_custom_model"]], "test_blueprint_xgboost() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.test_blueprint_xgboost"]], "test_cat_encoding_via_ml_algorithm_and_ml_model_warning() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.test_cat_encoding_via_ml_algorithm_and_ml_model_warning"]], "test_class_problem_mismatch_warnings() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.test_class_problem_mismatch_warnings"]], "test_enable_feature_selection_warning() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.test_enable_feature_selection_warning"]], "test_hypertuning_cv_folds_warning() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.test_hypertuning_cv_folds_warning"]], "test_min_features_to_select_warning() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.test_min_features_to_select_warning"]], "test_missing_feature_selector_warning() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.test_missing_feature_selector_warning"]], "test_missing_xgboost_tune_params_config_warning() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.test_missing_xgboost_tune_params_config_warning"]], "test_precise_cv_tuning_warnings() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.test_precise_cv_tuning_warnings"]], "test_shap_values_and_ml_algorithm_warning() (in module bluecast.tests.test_cast)": [[41, "bluecast.tests.test_cast.test_shap_values_and_ml_algorithm_warning"]], "customlrmodel (class in bluecast.tests.test_cast_cv)": [[42, "bluecast.tests.test_cast_cv.CustomLRModel"]], "bluecast.tests.test_cast_cv": [[42, "module-bluecast.tests.test_cast_cv"]], "fit() (bluecast.tests.test_cast_cv.customlrmodel method)": [[42, "bluecast.tests.test_cast_cv.CustomLRModel.fit"]], "predict() (bluecast.tests.test_cast_cv.customlrmodel method)": [[42, "bluecast.tests.test_cast_cv.CustomLRModel.predict"]], "synthetic_train_test_data() (in module bluecast.tests.test_cast_cv)": [[42, "bluecast.tests.test_cast_cv.synthetic_train_test_data"]], "test_bluecast_cv_fit_eval_with_custom_model() (in module bluecast.tests.test_cast_cv)": [[42, "bluecast.tests.test_cast_cv.test_bluecast_cv_fit_eval_with_custom_model"]], "test_blueprint_cv_xgboost() (in module bluecast.tests.test_cast_cv)": [[42, "bluecast.tests.test_cast_cv.test_blueprint_cv_xgboost"]], "customlrmodel (class in bluecast.tests.test_cast_cv_multiclass)": [[43, "bluecast.tests.test_cast_cv_multiclass.CustomLRModel"]], "bluecast.tests.test_cast_cv_multiclass": [[43, "module-bluecast.tests.test_cast_cv_multiclass"]], "fit() (bluecast.tests.test_cast_cv_multiclass.customlrmodel method)": [[43, "bluecast.tests.test_cast_cv_multiclass.CustomLRModel.fit"]], "predict() (bluecast.tests.test_cast_cv_multiclass.customlrmodel method)": [[43, "bluecast.tests.test_cast_cv_multiclass.CustomLRModel.predict"]], "test_bluecast_cv_fit_eval_multiclass_with_custom_model() (in module bluecast.tests.test_cast_cv_multiclass)": [[43, "bluecast.tests.test_cast_cv_multiclass.test_bluecast_cv_fit_eval_multiclass_with_custom_model"]], "customlrmodel (class in bluecast.tests.test_cast_cv_regression)": [[44, "bluecast.tests.test_cast_cv_regression.CustomLRModel"]], "custommodel (class in bluecast.tests.test_cast_cv_regression)": [[44, "bluecast.tests.test_cast_cv_regression.CustomModel"]], "mycustomlastmilepreprocessing (class in bluecast.tests.test_cast_cv_regression)": [[44, "bluecast.tests.test_cast_cv_regression.MyCustomLastMilePreprocessing"]], "bluecast.tests.test_cast_cv_regression": [[44, "module-bluecast.tests.test_cast_cv_regression"]], "custom_function() (bluecast.tests.test_cast_cv_regression.mycustomlastmilepreprocessing method)": [[44, "bluecast.tests.test_cast_cv_regression.MyCustomLastMilePreprocessing.custom_function"]], "fit() (bluecast.tests.test_cast_cv_regression.customlrmodel method)": [[44, "bluecast.tests.test_cast_cv_regression.CustomLRModel.fit"]], "fit() (bluecast.tests.test_cast_cv_regression.custommodel method)": [[44, "bluecast.tests.test_cast_cv_regression.CustomModel.fit"]], "fit_transform() (bluecast.tests.test_cast_cv_regression.mycustomlastmilepreprocessing method)": [[44, "bluecast.tests.test_cast_cv_regression.MyCustomLastMilePreprocessing.fit_transform"]], "predict() (bluecast.tests.test_cast_cv_regression.customlrmodel method)": [[44, "bluecast.tests.test_cast_cv_regression.CustomLRModel.predict"]], "predict() (bluecast.tests.test_cast_cv_regression.custommodel method)": [[44, "bluecast.tests.test_cast_cv_regression.CustomModel.predict"]], "synthetic_train_test_data() (in module bluecast.tests.test_cast_cv_regression)": [[44, "bluecast.tests.test_cast_cv_regression.synthetic_train_test_data"]], "test_bluecast_cv_fit_eval_with_custom_model() (in module bluecast.tests.test_cast_cv_regression)": [[44, "bluecast.tests.test_cast_cv_regression.test_bluecast_cv_fit_eval_with_custom_model"]], "test_bluecast_cv_with_custom_objects() (in module bluecast.tests.test_cast_cv_regression)": [[44, "bluecast.tests.test_cast_cv_regression.test_bluecast_cv_with_custom_objects"]], "test_blueprint_cv_xgboost() (in module bluecast.tests.test_cast_cv_regression)": [[44, "bluecast.tests.test_cast_cv_regression.test_blueprint_cv_xgboost"]], "transform() (bluecast.tests.test_cast_cv_regression.mycustomlastmilepreprocessing method)": [[44, "bluecast.tests.test_cast_cv_regression.MyCustomLastMilePreprocessing.transform"]], "custommodel (class in bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.CustomModel"]], "bluecast.tests.test_cast_regression": [[45, "module-bluecast.tests.test_cast_regression"]], "bluecast_instance() (in module bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.bluecast_instance"]], "fit() (bluecast.tests.test_cast_regression.custommodel method)": [[45, "bluecast.tests.test_cast_regression.CustomModel.fit"]], "predict() (bluecast.tests.test_cast_regression.custommodel method)": [[45, "bluecast.tests.test_cast_regression.CustomModel.predict"]], "synthetic_train_test_data() (in module bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.synthetic_train_test_data"]], "test_bluecast_with_custom_model() (in module bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.test_bluecast_with_custom_model"]], "test_blueprint_xgboost() (in module bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.test_blueprint_xgboost"]], "test_cat_encoding_via_ml_algorithm_and_ml_model_warning() (in module bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.test_cat_encoding_via_ml_algorithm_and_ml_model_warning"]], "test_enable_feature_selection_warning() (in module bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.test_enable_feature_selection_warning"]], "test_hypertuning_cv_folds_warning() (in module bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.test_hypertuning_cv_folds_warning"]], "test_min_features_to_select_warning() (in module bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.test_min_features_to_select_warning"]], "test_missing_feature_selector_warning() (in module bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.test_missing_feature_selector_warning"]], "test_missing_xgboost_tune_params_config_warning() (in module bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.test_missing_xgboost_tune_params_config_warning"]], "test_precise_cv_tuning_warnings() (in module bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.test_precise_cv_tuning_warnings"]], "test_shap_values_and_ml_algorithm_warning() (in module bluecast.tests.test_cast_regression)": [[45, "bluecast.tests.test_cast_regression.test_shap_values_and_ml_algorithm_warning"]], "bluecast.tests.test_category_encoder_orchestrator": [[46, "module-bluecast.tests.test_category_encoder_orchestrator"]], "encoder_orchestrator() (in module bluecast.tests.test_category_encoder_orchestrator)": [[46, "bluecast.tests.test_category_encoder_orchestrator.encoder_orchestrator"]], "sample_data() (in module bluecast.tests.test_category_encoder_orchestrator)": [[46, "bluecast.tests.test_category_encoder_orchestrator.sample_data"]], "test_fit_assigns_to_onehot_when_cardinality_below_threshold() (in module bluecast.tests.test_category_encoder_orchestrator)": [[46, "bluecast.tests.test_category_encoder_orchestrator.test_fit_assigns_to_onehot_when_cardinality_below_threshold"]], "test_fit_assigns_to_target_when_cardinality_above_threshold() (in module bluecast.tests.test_category_encoder_orchestrator)": [[46, "bluecast.tests.test_category_encoder_orchestrator.test_fit_assigns_to_target_when_cardinality_above_threshold"]], "bluecast.tests.test_check_gpu_support": [[47, "module-bluecast.tests.test_check_gpu_support"]], "test_check_gpu_support() (in module bluecast.tests.test_check_gpu_support)": [[47, "bluecast.tests.test_check_gpu_support.test_check_gpu_support"]], "bluecast.tests.test_custom_processing_base_class": [[48, "module-bluecast.tests.test_custom_processing_base_class"]], "custom_preprocessing() (in module bluecast.tests.test_custom_processing_base_class)": [[48, "bluecast.tests.test_custom_processing_base_class.custom_preprocessing"]], "test_fit_transform_returns_tuple() (in module bluecast.tests.test_custom_processing_base_class)": [[48, "bluecast.tests.test_custom_processing_base_class.test_fit_transform_returns_tuple"]], "test_transform_returns_optional_target() (in module bluecast.tests.test_custom_processing_base_class)": [[48, "bluecast.tests.test_custom_processing_base_class.test_transform_returns_optional_target"]], "test_transform_returns_optional_target_prediction_mode() (in module bluecast.tests.test_custom_processing_base_class)": [[48, "bluecast.tests.test_custom_processing_base_class.test_transform_returns_optional_target_prediction_mode"]], "test_transform_returns_tuple() (in module bluecast.tests.test_custom_processing_base_class)": [[48, "bluecast.tests.test_custom_processing_base_class.test_transform_returns_tuple"]], "bluecast.tests.test_data_leakage_checks": [[49, "module-bluecast.tests.test_data_leakage_checks"]], "create_to_target_correlated_categorical_features() (in module bluecast.tests.test_data_leakage_checks)": [[49, "bluecast.tests.test_data_leakage_checks.create_to_target_correlated_categorical_features"]], "create_to_target_correlated_features() (in module bluecast.tests.test_data_leakage_checks)": [[49, "bluecast.tests.test_data_leakage_checks.create_to_target_correlated_features"]], "test_detect_categorical_leakage() (in module bluecast.tests.test_data_leakage_checks)": [[49, "bluecast.tests.test_data_leakage_checks.test_detect_categorical_leakage"]], "test_detect_leakage_via_correlation() (in module bluecast.tests.test_data_leakage_checks)": [[49, "bluecast.tests.test_data_leakage_checks.test_detect_leakage_via_correlation"]], "bluecast.tests.test_data_monitoring": [[50, "module-bluecast.tests.test_data_monitoring"]], "mock_logger() (in module bluecast.tests.test_data_monitoring)": [[50, "bluecast.tests.test_data_monitoring.mock_logger"]], "test_kolmogorov_smirnov_test() (in module bluecast.tests.test_data_monitoring)": [[50, "bluecast.tests.test_data_monitoring.test_kolmogorov_smirnov_test"]], "test_population_stability_index() (in module bluecast.tests.test_data_monitoring)": [[50, "bluecast.tests.test_data_monitoring.test_population_stability_index"]], "test_qqplot_two_samples() (in module bluecast.tests.test_data_monitoring)": [[50, "bluecast.tests.test_data_monitoring.test_qqplot_two_samples"]], "bluecast.tests.test_datetime_features": [[51, "module-bluecast.tests.test_datetime_features"]], "sample_dataframe() (in module bluecast.tests.test_datetime_features)": [[51, "bluecast.tests.test_datetime_features.sample_dataframe"]], "test_date_converter() (in module bluecast.tests.test_datetime_features)": [[51, "bluecast.tests.test_datetime_features.test_date_converter"]], "bluecast.tests.test_encode_target_labels": [[52, "module-bluecast.tests.test_encode_target_labels"]], "label_encoder() (in module bluecast.tests.test_encode_target_labels)": [[52, "bluecast.tests.test_encode_target_labels.label_encoder"]], "sample_data() (in module bluecast.tests.test_encode_target_labels)": [[52, "bluecast.tests.test_encode_target_labels.sample_data"]], "test_fit_label_encoder() (in module bluecast.tests.test_encode_target_labels)": [[52, "bluecast.tests.test_encode_target_labels.test_fit_label_encoder"]], "test_fit_transform_target_labels() (in module bluecast.tests.test_encode_target_labels)": [[52, "bluecast.tests.test_encode_target_labels.test_fit_transform_target_labels"]], "test_label_encoder_reverse_transform() (in module bluecast.tests.test_encode_target_labels)": [[52, "bluecast.tests.test_encode_target_labels.test_label_encoder_reverse_transform"]], "test_label_encoder_transform() (in module bluecast.tests.test_encode_target_labels)": [[52, "bluecast.tests.test_encode_target_labels.test_label_encoder_transform"]], "test_transform_target_labels() (in module bluecast.tests.test_encode_target_labels)": [[52, "bluecast.tests.test_encode_target_labels.test_transform_target_labels"]], "trained_label_encoder() (in module bluecast.tests.test_encode_target_labels)": [[52, "bluecast.tests.test_encode_target_labels.trained_label_encoder"]], "bluecast.tests.test_experiment_tracker": [[53, "module-bluecast.tests.test_experiment_tracker"]], "experiment_tracker() (in module bluecast.tests.test_experiment_tracker)": [[53, "bluecast.tests.test_experiment_tracker.experiment_tracker"]], "test_add_results() (in module bluecast.tests.test_experiment_tracker)": [[53, "bluecast.tests.test_experiment_tracker.test_add_results"]], "test_get_best_score_empty() (in module bluecast.tests.test_experiment_tracker)": [[53, "bluecast.tests.test_experiment_tracker.test_get_best_score_empty"]], "test_get_best_score_higher_is_better() (in module bluecast.tests.test_experiment_tracker)": [[53, "bluecast.tests.test_experiment_tracker.test_get_best_score_higher_is_better"]], "test_get_best_score_lower_is_better() (in module bluecast.tests.test_experiment_tracker)": [[53, "bluecast.tests.test_experiment_tracker.test_get_best_score_lower_is_better"]], "test_retrieve_results_as_df() (in module bluecast.tests.test_experiment_tracker)": [[53, "bluecast.tests.test_experiment_tracker.test_retrieve_results_as_df"]], "bluecast.tests.test_feature_type_detector": [[54, "module-bluecast.tests.test_feature_type_detector"]], "test_feature_type_detector() (in module bluecast.tests.test_feature_type_detector)": [[54, "bluecast.tests.test_feature_type_detector.test_feature_type_detector"]], "bluecast.tests.test_fine_tune": [[55, "module-bluecast.tests.test_fine_tune"]], "test_fine_tune_runs_without_errors() (in module bluecast.tests.test_fine_tune)": [[55, "bluecast.tests.test_fine_tune.test_fine_tune_runs_without_errors"]], "test_fine_tune_runs_without_errors_using_cv() (in module bluecast.tests.test_fine_tune)": [[55, "bluecast.tests.test_fine_tune.test_fine_tune_runs_without_errors_using_cv"]], "xgboost_model() (in module bluecast.tests.test_fine_tune)": [[55, "bluecast.tests.test_fine_tune.xgboost_model"]], "bluecast.tests.test_load_for_production": [[56, "module-bluecast.tests.test_load_for_production"]], "test_load_for_production() (in module bluecast.tests.test_load_for_production)": [[56, "bluecast.tests.test_load_for_production.test_load_for_production"]], "test_load_for_production_with_default_file_type() (in module bluecast.tests.test_load_for_production)": [[56, "bluecast.tests.test_load_for_production.test_load_for_production_with_default_file_type"]], "bluecast.tests.test_nulls_and_infs": [[57, "module-bluecast.tests.test_nulls_and_infs"]], "test_fill_infinite_values() (in module bluecast.tests.test_nulls_and_infs)": [[57, "bluecast.tests.test_nulls_and_infs.test_fill_infinite_values"]], "test_fill_nulls() (in module bluecast.tests.test_nulls_and_infs)": [[57, "bluecast.tests.test_nulls_and_infs.test_fill_nulls"]], "bluecast.tests.test_onehot_encoding": [[58, "module-bluecast.tests.test_onehot_encoding"]], "example_data() (in module bluecast.tests.test_onehot_encoding)": [[58, "bluecast.tests.test_onehot_encoding.example_data"]], "test_fit_transform() (in module bluecast.tests.test_onehot_encoding)": [[58, "bluecast.tests.test_onehot_encoding.test_fit_transform"]], "test_transform() (in module bluecast.tests.test_onehot_encoding)": [[58, "bluecast.tests.test_onehot_encoding.test_transform"]], "dummyclass (class in bluecast.tests.test_save_to_production)": [[59, "bluecast.tests.test_save_to_production.DummyClass"]], "bluecast.tests.test_save_to_production": [[59, "module-bluecast.tests.test_save_to_production"]], "test_save_to_production() (in module bluecast.tests.test_save_to_production)": [[59, "bluecast.tests.test_save_to_production.test_save_to_production"]], "bluecast.tests.test_schema_checks": [[60, "module-bluecast.tests.test_schema_checks"]], "test_transform_extra_columns() (in module bluecast.tests.test_schema_checks)": [[60, "bluecast.tests.test_schema_checks.test_transform_extra_columns"]], "test_transform_missing_columns() (in module bluecast.tests.test_schema_checks)": [[60, "bluecast.tests.test_schema_checks.test_transform_missing_columns"]], "test_transform_same_schema() (in module bluecast.tests.test_schema_checks)": [[60, "bluecast.tests.test_schema_checks.test_transform_same_schema"]], "bluecast.tests.test_shap_explanations": [[61, "module-bluecast.tests.test_shap_explanations"]], "mock_model() (in module bluecast.tests.test_shap_explanations)": [[61, "bluecast.tests.test_shap_explanations.mock_model"]], "test_data() (in module bluecast.tests.test_shap_explanations)": [[61, "bluecast.tests.test_shap_explanations.test_data"]], "test_eval_classifier_except() (in module bluecast.tests.test_shap_explanations)": [[61, "bluecast.tests.test_shap_explanations.test_eval_classifier_except"]], "test_shap_explanations() (in module bluecast.tests.test_shap_explanations)": [[61, "bluecast.tests.test_shap_explanations.test_shap_explanations"]], "bluecast.tests.test_target_encoding_binary": [[62, "module-bluecast.tests.test_target_encoding_binary"]], "sample_data() (in module bluecast.tests.test_target_encoding_binary)": [[62, "bluecast.tests.test_target_encoding_binary.sample_data"]], "test_transform_target_encode_binary_class() (in module bluecast.tests.test_target_encoding_binary)": [[62, "bluecast.tests.test_target_encoding_binary.test_transform_target_encode_binary_class"]], "bluecast.tests.test_target_encoding_multiclass": [[63, "module-bluecast.tests.test_target_encoding_multiclass"]], "test_multi_class_target_encoder() (in module bluecast.tests.test_target_encoding_multiclass)": [[63, "bluecast.tests.test_target_encoding_multiclass.test_multi_class_target_encoder"]], "bluecast.tests.test_train_test_split": [[64, "module-bluecast.tests.test_train_test_split"]], "test_train_test_split_cross() (in module bluecast.tests.test_train_test_split)": [[64, "bluecast.tests.test_train_test_split.test_train_test_split_cross"]], "test_train_test_split_time() (in module bluecast.tests.test_train_test_split)": [[64, "bluecast.tests.test_train_test_split.test_train_test_split_time"]], "author (in module conf)": [[65, "conf.author"]], "autoapi_dirs (in module conf)": [[65, "conf.autoapi_dirs"]], "autoapi_type (in module conf)": [[65, "conf.autoapi_type"]], "conf": [[65, "module-conf"]], "copyright (in module conf)": [[65, "conf.copyright"]], "exclude_patterns (in module conf)": [[65, "conf.exclude_patterns"]], "extensions (in module conf)": [[65, "conf.extensions"]], "html_static_path (in module conf)": [[65, "conf.html_static_path"]], "html_theme (in module conf)": [[65, "conf.html_theme"]], "project (in module conf)": [[65, "conf.project"]], "release (in module conf)": [[65, "conf.release"]], "templates_path (in module conf)": [[65, "conf.templates_path"]]}})
