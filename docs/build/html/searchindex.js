Search.setIndex({"docnames": ["autoapi/bluecast/blueprints/cast/index", "autoapi/bluecast/blueprints/cast_cv/index", "autoapi/bluecast/blueprints/cast_cv_regression/index", "autoapi/bluecast/blueprints/cast_regression/index", "autoapi/bluecast/blueprints/index", "autoapi/bluecast/config/base_classes/index", "autoapi/bluecast/config/index", "autoapi/bluecast/config/training_config/index", "autoapi/bluecast/eda/analyse/index", "autoapi/bluecast/eda/data_leakage_checks/index", "autoapi/bluecast/eda/index", "autoapi/bluecast/evaluation/eval_metrics/index", "autoapi/bluecast/evaluation/index", "autoapi/bluecast/evaluation/shap_values/index", "autoapi/bluecast/experimentation/index", "autoapi/bluecast/experimentation/tracking/index", "autoapi/bluecast/general_utils/general_utils/index", "autoapi/bluecast/general_utils/index", "autoapi/bluecast/index", "autoapi/bluecast/ml_modelling/base_classes/index", "autoapi/bluecast/ml_modelling/index", "autoapi/bluecast/ml_modelling/xgboost/index", "autoapi/bluecast/ml_modelling/xgboost_regression/index", "autoapi/bluecast/monitoring/data_monitoring/index", "autoapi/bluecast/monitoring/index", "autoapi/bluecast/preprocessing/custom/index", "autoapi/bluecast/preprocessing/datetime_features/index", "autoapi/bluecast/preprocessing/encode_target_labels/index", "autoapi/bluecast/preprocessing/feature_selection/index", "autoapi/bluecast/preprocessing/feature_types/index", "autoapi/bluecast/preprocessing/index", "autoapi/bluecast/preprocessing/nulls_and_infs/index", "autoapi/bluecast/preprocessing/schema_checks/index", "autoapi/bluecast/preprocessing/target_encoding/index", "autoapi/bluecast/preprocessing/train_test_split/index", "autoapi/bluecast/tests/index", "autoapi/bluecast/tests/make_data/create_data/index", "autoapi/bluecast/tests/make_data/index", "autoapi/bluecast/tests/test_analyse/index", "autoapi/bluecast/tests/test_cast/index", "autoapi/bluecast/tests/test_cast_cv/index", "autoapi/bluecast/tests/test_cast_cv_multiclass/index", "autoapi/bluecast/tests/test_cast_cv_regression/index", "autoapi/bluecast/tests/test_cast_regression/index", "autoapi/bluecast/tests/test_check_gpu_support/index", "autoapi/bluecast/tests/test_custom_processing_base_class/index", "autoapi/bluecast/tests/test_data_leakage_checks/index", "autoapi/bluecast/tests/test_data_monitoring/index", "autoapi/bluecast/tests/test_datetime_features/index", "autoapi/bluecast/tests/test_encode_target_labels/index", "autoapi/bluecast/tests/test_experiment_tracker/index", "autoapi/bluecast/tests/test_feature_type_detector/index", "autoapi/bluecast/tests/test_fine_tune/index", "autoapi/bluecast/tests/test_load_for_production/index", "autoapi/bluecast/tests/test_nulls_and_infs/index", "autoapi/bluecast/tests/test_save_to_production/index", "autoapi/bluecast/tests/test_schema_checks/index", "autoapi/bluecast/tests/test_shap_explanations/index", "autoapi/bluecast/tests/test_target_encoding_binary/index", "autoapi/bluecast/tests/test_target_encoding_multiclass/index", "autoapi/bluecast/tests/test_train_test_split/index", "autoapi/conf/index", "autoapi/index", "index"], "filenames": ["autoapi/bluecast/blueprints/cast/index.rst", "autoapi/bluecast/blueprints/cast_cv/index.rst", "autoapi/bluecast/blueprints/cast_cv_regression/index.rst", "autoapi/bluecast/blueprints/cast_regression/index.rst", "autoapi/bluecast/blueprints/index.rst", "autoapi/bluecast/config/base_classes/index.rst", "autoapi/bluecast/config/index.rst", "autoapi/bluecast/config/training_config/index.rst", "autoapi/bluecast/eda/analyse/index.rst", "autoapi/bluecast/eda/data_leakage_checks/index.rst", "autoapi/bluecast/eda/index.rst", "autoapi/bluecast/evaluation/eval_metrics/index.rst", "autoapi/bluecast/evaluation/index.rst", "autoapi/bluecast/evaluation/shap_values/index.rst", "autoapi/bluecast/experimentation/index.rst", "autoapi/bluecast/experimentation/tracking/index.rst", "autoapi/bluecast/general_utils/general_utils/index.rst", "autoapi/bluecast/general_utils/index.rst", "autoapi/bluecast/index.rst", "autoapi/bluecast/ml_modelling/base_classes/index.rst", "autoapi/bluecast/ml_modelling/index.rst", "autoapi/bluecast/ml_modelling/xgboost/index.rst", "autoapi/bluecast/ml_modelling/xgboost_regression/index.rst", "autoapi/bluecast/monitoring/data_monitoring/index.rst", "autoapi/bluecast/monitoring/index.rst", "autoapi/bluecast/preprocessing/custom/index.rst", "autoapi/bluecast/preprocessing/datetime_features/index.rst", "autoapi/bluecast/preprocessing/encode_target_labels/index.rst", "autoapi/bluecast/preprocessing/feature_selection/index.rst", "autoapi/bluecast/preprocessing/feature_types/index.rst", "autoapi/bluecast/preprocessing/index.rst", "autoapi/bluecast/preprocessing/nulls_and_infs/index.rst", "autoapi/bluecast/preprocessing/schema_checks/index.rst", "autoapi/bluecast/preprocessing/target_encoding/index.rst", "autoapi/bluecast/preprocessing/train_test_split/index.rst", "autoapi/bluecast/tests/index.rst", "autoapi/bluecast/tests/make_data/create_data/index.rst", "autoapi/bluecast/tests/make_data/index.rst", "autoapi/bluecast/tests/test_analyse/index.rst", "autoapi/bluecast/tests/test_cast/index.rst", "autoapi/bluecast/tests/test_cast_cv/index.rst", "autoapi/bluecast/tests/test_cast_cv_multiclass/index.rst", "autoapi/bluecast/tests/test_cast_cv_regression/index.rst", "autoapi/bluecast/tests/test_cast_regression/index.rst", "autoapi/bluecast/tests/test_check_gpu_support/index.rst", "autoapi/bluecast/tests/test_custom_processing_base_class/index.rst", "autoapi/bluecast/tests/test_data_leakage_checks/index.rst", "autoapi/bluecast/tests/test_data_monitoring/index.rst", "autoapi/bluecast/tests/test_datetime_features/index.rst", "autoapi/bluecast/tests/test_encode_target_labels/index.rst", "autoapi/bluecast/tests/test_experiment_tracker/index.rst", "autoapi/bluecast/tests/test_feature_type_detector/index.rst", "autoapi/bluecast/tests/test_fine_tune/index.rst", "autoapi/bluecast/tests/test_load_for_production/index.rst", "autoapi/bluecast/tests/test_nulls_and_infs/index.rst", "autoapi/bluecast/tests/test_save_to_production/index.rst", "autoapi/bluecast/tests/test_schema_checks/index.rst", "autoapi/bluecast/tests/test_shap_explanations/index.rst", "autoapi/bluecast/tests/test_target_encoding_binary/index.rst", "autoapi/bluecast/tests/test_target_encoding_multiclass/index.rst", "autoapi/bluecast/tests/test_train_test_split/index.rst", "autoapi/conf/index.rst", "autoapi/index.rst", "index.md"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.blueprints.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.blueprints.cast_cv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.blueprints.cast_cv_regression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.blueprints.cast_regression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.blueprints</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.config.base_classes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.config.training_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.eda.analyse</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.eda.data_leakage_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.eda</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.evaluation.eval_metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.evaluation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.evaluation.shap_values</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.experimentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.experimentation.tracking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.general_utils.general_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.general_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.ml_modelling.base_classes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.ml_modelling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.ml_modelling.xgboost</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.ml_modelling.xgboost_regression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.monitoring.data_monitoring</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.monitoring</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.custom</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.datetime_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.encode_target_labels</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.feature_selection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.feature_types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.nulls_and_infs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.schema_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.target_encoding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.preprocessing.train_test_split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.make_data.create_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.make_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_analyse</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_cast_cv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_cast_cv_multiclass</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_cast_cv_regression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_cast_regression</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_check_gpu_support</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_custom_processing_base_class</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_data_leakage_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_data_monitoring</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_datetime_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_encode_target_labels</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_experiment_tracker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_feature_type_detector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_fine_tune</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_load_for_production</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_nulls_and_infs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_save_to_production</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_schema_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_shap_explanations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_target_encoding_binary</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_target_encoding_multiclass</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluecast.tests.test_train_test_split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">conf</span></code>", "API Reference", "BlueCast"], "terms": {"run": [0, 3, 7, 63], "fulli": [0, 3], "configur": [0, 3, 7], "classif": [0, 3, 8, 11, 21, 22, 33], "custom": [0, 1, 2, 3, 7, 15, 18, 21, 22, 28, 30, 42, 62], "via": [0, 3, 7, 16], "attribut": [0, 3, 63], "i": [0, 1, 2, 3, 7, 8, 9, 11, 13, 15, 19, 23, 25, 27, 28, 29, 31, 33, 34, 39, 40, 41, 42, 43, 44, 63], "possibl": [0, 3, 7, 34, 63], "config": [0, 1, 2, 3, 15, 18, 21, 22, 62, 63], "can": [0, 1, 2, 3, 7, 13, 15, 21, 22, 23, 25, 27, 29, 31, 33, 34, 42, 63], "instanti": [0, 3, 63], "provid": [0, 1, 2, 3, 8, 9, 16, 21, 22, 23, 29, 34, 44, 63], "chang": [0, 3, 7, 23, 63], "xgboost": [0, 1, 2, 3, 7, 13, 15, 18, 20, 22, 31, 62, 63], "train": [0, 1, 2, 3, 7, 8, 13, 15, 21, 22, 25, 32, 33, 34, 42, 44], "default": [0, 3, 7, 11, 15, 21, 22, 23, 28, 63], "hyperparamet": [0, 3, 7, 15, 19, 21, 22, 39, 40, 41, 42, 43, 63], "search": [0, 3, 7, 21, 22, 63], "space": [0, 3, 7, 21, 22, 23, 63], "rel": [0, 3], "light": [0, 3], "weight": [0, 3, 21, 22], "speed": [0, 3], "up": [0, 3], "prototyp": [0, 3], "deal": [0, 3, 33], "binari": [0, 1, 3, 8, 11, 21, 33, 63], "multi": [0, 3, 7], "problem": [0, 3, 11, 63], "tune": [0, 3, 7, 19, 21, 22, 25, 39, 40, 41, 42, 43, 63], "switch": [0, 3, 7], "off": [0, 3], "even": [0, 3], "strengthen": [0, 3], "cross": [0, 3, 7, 15, 28], "valid": [0, 3, 7, 15, 28], "thi": [0, 1, 2, 3, 7, 9, 11, 15, 16, 21, 22, 23, 25, 27, 29, 31, 33, 34, 42, 44, 62, 63], "behaviour": [0, 3, 63], "control": [0, 3, 63], "from": [0, 3, 5, 7, 15, 21, 22, 25, 26, 27, 33, 42, 63], "training_config": [0, 1, 2, 3, 5, 6, 15, 18, 21, 22, 62, 63], "class_problem": [0, 1, 2, 3, 8, 21, 22, 28, 63], "liter": [0, 1, 2, 3, 5, 8, 15, 21, 22, 63], "multiclass": [0, 1, 8, 21, 33, 63], "cat_column": [0, 3, 29, 33, 63], "list": [0, 3, 8, 9, 21, 22, 26, 29, 33], "str": [0, 1, 2, 3, 5, 7, 8, 9, 11, 15, 16, 21, 22, 23, 26, 27, 29, 33, 34, 63], "float": [0, 1, 2, 3, 5, 7, 8, 9, 15, 21, 22, 23, 26, 27, 29, 31, 33, 34, 63], "int": [0, 3, 5, 7, 8, 9, 11, 15, 21, 22, 23, 26, 27, 28, 29, 31, 33, 34, 36, 63], "none": [0, 1, 2, 3, 5, 7, 8, 9, 11, 15, 16, 19, 21, 22, 23, 25, 26, 27, 28, 29, 34, 39, 40, 41, 42, 43, 63], "date_column": [0, 3, 26, 29], "time_split_column": [0, 3], "ml_model": [0, 1, 2, 3, 18, 39, 40, 41, 42, 43, 62, 63], "xgboostmodel": [0, 1, 2, 21], "ani": [0, 1, 2, 3, 5, 7, 8, 11, 13, 15, 16, 19, 21, 22, 25, 42, 61, 63], "custom_in_fold_preprocessor": [0, 1, 2, 3, 21, 22, 63], "preprocess": [0, 1, 2, 3, 7, 18, 21, 22, 42, 62], "custompreprocess": [0, 1, 2, 3, 21, 22, 25, 28, 42, 63], "custom_last_mile_comput": [0, 1, 2, 3, 63], "custom_preprocessor": [0, 1, 2, 3, 63], "custom_feature_selector": [0, 1, 2, 3, 63], "feature_select": [0, 1, 2, 3, 18, 30, 62, 63], "rfecvselector": [0, 1, 2, 3, 28, 63], "conf_train": [0, 1, 2, 3, 21, 22, 63], "trainingconfig": [0, 1, 2, 3, 5, 7, 15, 21, 22, 63], "conf_xgboost": [0, 1, 2, 3, 21, 22, 63], "xgboosttuneparamsconfig": [0, 1, 7, 21, 63], "conf_params_xgboost": [0, 1, 2, 3, 21, 22], "xgboostfinalparamconfig": [0, 1, 2, 3, 7, 21, 22, 63], "experiment_track": [0, 1, 2, 3, 21, 22, 50, 63], "experiment": [0, 1, 2, 3, 18, 21, 22, 62, 63], "track": [0, 1, 2, 3, 14, 18, 21, 22, 62, 63], "experimenttrack": [0, 1, 2, 3, 5, 7, 15, 21, 22, 63], "param": [0, 1, 2, 3, 7, 8, 11, 13, 16, 21, 22, 23, 25, 26, 42, 63], "take": [0, 3, 16, 26, 29, 63], "string": [0, 1, 2, 3, 8, 16, 23], "contain": [0, 3, 8, 9, 15, 16, 21, 22, 23, 25, 31, 34, 62, 63], "type": [0, 3, 7, 16, 23, 29, 63], "either": 0, "target_column": [0, 3, 9], "name": [0, 1, 2, 3, 7, 8, 9, 15, 16, 29], "target": [0, 1, 2, 3, 7, 8, 9, 21, 25, 27, 28, 33, 42, 63], "column": [0, 1, 2, 3, 8, 9, 21, 22, 23, 26, 27, 29, 32, 33, 63], "categor": [0, 3, 7, 8, 9, 23, 27, 29, 33], "If": [0, 3, 7, 8, 9, 19, 23, 25, 29, 39, 40, 41, 42, 43, 63], "infer": [0, 3, 25, 28, 29, 42], "automat": [0, 3, 15, 63], "paramet": [0, 1, 2, 3, 7, 8, 9, 11, 15, 23, 44, 63], "date": [0, 3, 26], "time": [0, 3, 7, 21, 22, 34, 63], "split": [0, 1, 2, 3, 7, 15, 34, 63], "data": [0, 1, 2, 3, 7, 8, 9, 13, 19, 21, 22, 23, 29, 34, 39, 40, 41, 42, 43, 44, 55], "order": [0, 3, 8, 34], "do": [0, 3, 63], "random": [0, 3, 7, 8, 44, 63], "instead": [0, 3, 21, 22, 63], "an": [0, 3, 7, 8, 15, 21, 22, 23, 25, 32, 42, 63], "instanc": [0, 1, 2, 3, 15, 16, 63], "one": [0, 3, 15, 23, 63], "api": [0, 3, 23], "pass": [0, 3, 7, 8, 23, 25, 42, 44, 63], "model": [0, 3, 7, 8, 13, 15, 16, 19, 21, 22, 23, 25, 26, 39, 40, 41, 42, 43], "inherit": [0, 3, 63], "baseclass": [0, 3], "base_model": [0, 3], "basemodel": [0, 3, 7], "allow": [0, 3, 7, 63], "user": [0, 3, 7, 25, 27, 42], "eeecut": [0, 3], "after": [0, 3, 7, 63], "test": [0, 3, 7, 8, 13, 15, 18, 23, 32, 34, 62, 63], "within": [0, 3, 63], "cv": [0, 3, 7, 40, 42, 63], "fold": [0, 1, 2, 3, 7, 63], "execut": [0, 1, 2, 3, 63], "onli": [0, 3, 7, 8, 9, 23, 27, 31, 63], "precise_cv_tun": [0, 3, 7, 63], "true": [0, 3, 7, 8, 9, 11, 15, 23, 63], "ml": [0, 3, 7, 13, 15, 16, 19, 39, 40, 41, 42, 43], "need": [0, 3, 7, 8, 15, 25, 42, 63], "implement": [0, 3, 5, 13, 15, 19, 26, 33, 39, 40, 41, 42, 43, 63], "themselv": [0, 3], "step": [0, 3, 7, 21, 22, 63], "us": [0, 1, 2, 3, 7, 8, 11, 13, 15, 21, 22, 23, 25, 28, 29, 33, 42, 44], "when": [0, 1, 2, 3, 7, 15, 23, 27, 63], "proprocess": [0, 3], "ha": [0, 3, 7, 15, 16, 23, 32, 63], "high": [0, 3, 8, 9, 33, 63], "chanc": [0, 3], "overfit": [0, 3, 7], "otherwis": [0, 3, 8, 29], "e": [0, 3, 8, 15, 34, 63], "oversampl": [0, 3, 63], "techniqu": [0, 3, 33, 63], "inject": [0, 3, 63], "which": [0, 1, 2, 3, 8, 23, 44, 63], "place": [0, 3, 63], "right": [0, 3, 63], "spit": [0, 3], "befor": [0, 3, 8, 25, 42, 63], "initi": [0, 3, 16], "initial_check": [0, 3], "df": [0, 1, 2, 3, 8, 13, 19, 21, 22, 25, 26, 28, 29, 31, 32, 34, 39, 40, 41, 42, 43, 63], "panda": [0, 1, 2, 3, 5, 8, 9, 13, 15, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 46, 63], "datafram": [0, 1, 2, 3, 5, 8, 9, 13, 15, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 46, 63], "fit": [0, 1, 2, 3, 19, 21, 22, 32, 33, 39, 40, 41, 42, 43, 63], "target_col": [0, 1, 2, 3, 27, 33, 34, 63], "full": [0, 3, 7, 16, 63], "pipelin": [0, 3, 7, 15, 23, 25, 27, 31, 42], "fit_ev": [0, 1, 2, 3, 11, 63], "df_eval": [0, 3, 63], "target_ev": [0, 3], "seri": [0, 1, 2, 3, 19, 21, 22, 23, 25, 27, 28, 33, 39, 40, 41, 42, 43, 63], "dict": [0, 3, 5, 7, 11, 15, 21, 22, 23, 27, 63], "evalu": [0, 1, 2, 3, 7, 18, 21, 22, 62, 63], "holdout": [0, 3], "set": [0, 3, 7, 23, 34, 44, 63], "conveni": [0, 3, 27, 29], "function": [0, 1, 2, 3, 21, 22, 23, 27, 29, 63], "It": [0, 3, 16, 21, 22, 25, 27, 29, 33, 42, 63], "recommend": [0, 3, 23, 63], "explor": [0, 3], "On": [0, 3, 28, 63], "product": [0, 3, 23, 63], "simpl": [0, 3, 15, 63], "should": [0, 3, 8, 19, 21, 22, 39, 40, 41, 42, 43], "insid": [0, 3, 7], "transform_new_data": [0, 3], "transform": [0, 3, 21, 22, 25, 26, 27, 28, 29, 32, 33, 42, 63], "new": [0, 3, 7, 23, 33, 63], "accord": [0, 3], "predict": [0, 1, 2, 3, 11, 13, 19, 21, 22, 25, 28, 39, 40, 41, 42, 43, 63], "tupl": [0, 1, 2, 19, 21, 25, 28, 29, 38, 39, 40, 41, 42, 43, 63], "numpi": [0, 3, 11, 13, 19, 21, 22, 23, 42, 43, 44], "ndarrai": [0, 3, 11, 13, 19, 21, 22, 42, 43], "unseen": [0, 1, 2, 3, 19, 21, 22, 39, 40, 41, 42, 43, 63], "return": [0, 1, 2, 3, 8, 9, 13, 16, 19, 21, 22, 23, 26, 39, 40, 41, 42, 43, 44, 63], "probabl": [0, 3, 11, 19, 39, 40, 41, 63], "y_prob": [0, 3, 11, 63], "y_class": [0, 3, 11, 63], "bluecastcv": [1, 7, 15, 63], "stratifi": [1, 2, 7, 34], "wrapper": [1, 2, 21, 22, 27, 29], "multipl": [1, 2, 7, 21, 22, 63], "intstanc": [1, 2], "check": [1, 2, 7, 8, 9, 21, 22, 23, 32, 63], "document": [1, 2, 7, 23, 62], "addit": [1, 2, 7, 8, 26], "detail": [1, 2, 7, 63], "A": [1, 2, 8, 9, 27, 63], "splitter": [1, 2], "prepare_data": [1, 2], "show_oof_scor": [1, 2], "metric": [1, 2, 11, 15, 63], "matthew": [1, 63], "show": [1, 2, 7, 8, 63], "out": [1, 2, 31, 63], "score": [1, 2, 8, 15, 23, 63], "call": [1, 2, 7, 11, 15, 44, 63], "bluecastcvregress": [1, 2, 63], "": [1, 2, 7, 8, 9, 23, 44, 63], "bluecastregress": [1, 2, 3, 63], "ar": [1, 2, 7, 8, 25, 26, 27, 29, 42, 44, 63], "each": [1, 2, 7, 8, 23, 33, 63], "them": [1, 2, 8, 26, 27, 29], "oof": [1, 2], "collect": [1, 2], "mean": [1, 2, 33, 63], "averag": [1, 2], "indic": [1, 2, 8, 23, 32], "shall": [1, 2, 7, 8, 63], "std": [1, 2], "differ": [1, 2, 29, 33, 63], "input": [1, 2], "expect": [1, 2, 8, 15, 16, 21, 22, 23, 29, 44, 63], "dataset": [1, 2, 8, 21, 22, 23, 32, 63], "includ": [1, 2, 8, 21, 22, 23, 63], "oof_mean": [1, 2], "oof_std": [1, 2], "dure": [1, 2, 7, 25, 28, 42, 63], "eval": [1, 2, 15, 21, 22, 63], "return_sub_models_pr": [1, 2], "bool": [1, 2, 5, 7, 8, 15, 23, 25, 28, 34, 42, 63], "fals": [1, 2, 7, 9, 15, 23, 25, 28, 34, 42, 63], "regress": [2, 3, 8, 22, 63], "xgboosttuneparamsregressionconfig": [2, 3, 7, 22], "rmse": [2, 7], "xgboost_regress": [3, 18, 20, 62], "xgboostmodelregress": [3, 22], "At": 3, "moment": 3, "cast": [4, 18, 29, 62, 63], "cast_cv": [4, 18, 62, 63], "cast_cv_regress": [4, 18, 62, 63], "cast_regress": [4, 18, 62, 63], "baseclassexperimenttrack": [5, 15, 63], "base": [5, 7, 13, 15, 19, 21, 22, 23, 25, 27, 28, 29, 33, 34, 39, 40, 41, 42, 43, 63], "abc": [5, 19, 25], "experi": [5, 7, 15, 63], "tracker": [5, 15, 63], "enforc": [5, 19, 39, 40, 41, 42, 43, 63], "add_result": [5, 15, 63], "retrieve_results_as_df": [5, 15, 63], "method": [5, 7, 19, 23, 29, 33, 39, 40, 41, 42, 43, 63], "abstract": [5, 19, 25, 42, 63], "experiment_id": [5, 15, 63], "score_categori": [5, 15, 63], "simple_train_test_scor": [5, 15, 63], "cv_score": [5, 15, 63], "oof_scor": [5, 15, 63], "model_paramet": [5, 15, 63], "eval_scor": [5, 15, 63], "metric_us": [5, 15, 63], "metric_higher_is_bett": [5, 15, 63], "add": [5, 15, 21, 22, 26, 63], "result": [5, 15], "retriev": [5, 63], "base_class": [6, 15, 18, 20, 21, 22, 39, 40, 41, 42, 43, 62, 63], "defin": [7, 8, 23, 28, 44, 63], "common": 7, "pydant": 7, "dataclass": 7, "The": [7, 8, 9, 13, 15, 21, 22, 33, 34, 44, 63], "python": [7, 61, 63], "wai": [7, 34, 63], "load": [7, 16, 21, 22, 25, 42, 63], "adjust": [7, 63], "blueprint": [7, 18, 62, 63], "arbitrary_types_allow": 7, "gener": [7, 16, 62], "global_random_st": 7, "global": 7, "state": [7, 8], "reproduc": 7, "increase_random_state_in_bluecast_cv_bi": 7, "In": [7, 15, 27], "how": [7, 8, 21, 22], "much": [7, 63], "shuffle_during_train": 7, "whether": 7, "shuffl": [7, 63], "hypertuning_cv_fold": [7, 63], "1": [7, 11, 13, 23, 62, 63], "hyperparameter_tuning_round": [7, 63], "number": [7, 8, 11, 21, 22, 63], "round": 7, "Not": 7, "hyperparameter_tuning_max_runtime_sec": 7, "maximum": [7, 63], "runtim": [7, 63], "second": [7, 63], "enabl": [7, 15], "own": [7, 15, 63], "routin": [7, 63], "necessari": [7, 63], "would": 7, "caus": 7, "usual": [7, 63], "longer": [7, 63], "optuna": [7, 63], "prune": [7, 63], "miss": [7, 25, 28, 31, 32, 42, 63], "all": [7, 8, 19, 39, 40, 41, 42, 43, 63], "trial": [7, 63], "until": 7, "end": [7, 27], "early_stopping_round": 7, "earli": [7, 63], "stop": 7, "also": [7, 21, 22, 27, 29, 33, 63], "greater": [7, 9], "than": [7, 9, 63], "autotune_model": [7, 63], "autotun": [7, 21, 22, 63], "enable_feature_select": [7, 63], "recurs": [7, 28], "featur": [7, 8, 9, 27, 28, 29, 33], "select": [7, 28], "calculate_shap_valu": [7, 63], "calcul": [7, 9, 11, 13, 21, 22, 33, 63], "shap": [7, 13, 63], "valu": [7, 8, 9, 13, 27, 31, 33, 63], "compat": 7, "see": [7, 13, 23, 63], "more": [7, 25, 42], "train_siz": [7, 34], "size": [7, 8], "train_split_stratifi": 7, "use_full_data_for_final_model": 7, "final": [7, 44, 63], "might": [7, 63], "min_features_to_select": [7, 28, 63], "minimum": 7, "cat_encoding_via_ml_algorithm": [7, 63], "algorithm": 7, "encod": [7, 27, 33], "done": [7, 15, 34, 63], "readm": [7, 63], "show_detailed_tuning_log": 7, "log": 7, "enable_grid_search_fine_tun": [7, 63], "gridsearch": [7, 63], "fine": [7, 63], "grain": 7, "grid": [7, 8, 63], "previou": 7, "gridsearch_nb_parameters_per_grid": [7, 63], "decid": [7, 63], "mani": [7, 8, 21, 22, 63], "have": [7, 8, 63], "per": [7, 63], "gridsearch_tuning_max_runtime_sec": [7, 63], "finish": [7, 63], "latest": [7, 63], "nd": [7, 63], "exce": [7, 63], "limit": [7, 63], "though": [7, 63], "experiment_nam": 7, "Will": [7, 32], "10": [7, 8, 23, 63], "33": 7, "200": 7, "3600": [7, 63], "0": [7, 9, 11, 23, 28, 31, 34, 61, 63], "8": [7, 34, 63], "5": [7, 28, 63], "optuna_sampler_n_startup_tri": 7, "max_depth_min": 7, "2": [7, 23, 63], "max_depth_max": 7, "6": 7, "alpha_min": 7, "alpha_max": 7, "lambda_min": 7, "lambda_max": 7, "gamma_min": 7, "gamma_max": 7, "subsample_min": 7, "subsample_max": 7, "max_leaves_min": 7, "max_leaves_max": [7, 63], "sub_sample_min": 7, "3": [7, 13, 63], "sub_sample_max": 7, "col_sample_by_tree_min": 7, "col_sample_by_tree_max": 7, "col_sample_by_level_min": 7, "col_sample_by_level_max": 7, "eta_min": 7, "001": 7, "eta_max": 7, "steps_min": 7, "steps_max": [7, 63], "1000": [7, 36, 63], "model_verbos": 7, "model_verbosity_during_final_train": 7, "model_object": 7, "softprob": 7, "model_eval_metr": 7, "mlogloss": 7, "booster": [7, 21, 22], "gbtree": 7, "reg": 7, "squarederror": 7, "hyper": 7, "sample_weight": 7, "classification_threshold": 7, "plot_pie_chart": [8, 63], "explod": 8, "color": 8, "creat": [8, 15, 27, 33, 62, 63], "pie": 8, "chart": [8, 63], "label": [8, 11, 23, 27, 44], "option": [8, 23, 25, 42, 63], "explos": 8, "hold": [8, 23], "nterest": 8, "plott": 8, "numer": [8, 9, 23, 27, 29, 63], "repres": [8, 23], "distanc": 8, "segment": 8, "hexadecim": 8, "represent": [8, 27], "rgb": 8, "plot_count_pair": [8, 63], "df_1": 8, "df_2": 8, "df_alias": 8, "palett": 8, "compar": [8, 23, 63], "count": 8, "between": [8, 9, 23, 63], "two": [8, 23, 34, 63], "chosen": 8, "shown": 8, "plot": [8, 11, 23, 63], "format": [8, 29, 63], "hue": 8, "read": [8, 63], "sn": 8, "countplot": 8, "categori": [8, 27, 33, 63], "thei": [8, 26, 27], "appear": 8, "cat_col": [8, 63], "univariate_plot": [8, 63], "univari": [8, 63], "doe": [8, 32, 63], "part": [8, 9, 11, 26, 31, 63], "bi_variate_plot": [8, 63], "num_cols_grid": 8, "4": 8, "bivari": 8, "combin": 8, "must": [8, 9, 25, 42], "specifi": [8, 23], "correlation_heatmap": [8, 63], "half": 8, "heatmap": [8, 63], "correl": [8, 9, 63], "correlation_to_target": [8, 63], "relat": 8, "plot_pca": [8, 63], "scale_data": 8, "pca": 8, "variabl": [8, 9, 33, 63], "standard": 8, "scale": 8, "perform": 8, "appli": [8, 21, 22, 63], "raw": [8, 63], "plot_pca_cumulative_vari": [8, 63], "n_compon": 8, "cumul": [8, 23], "varianc": [8, 63], "princip": [8, 63], "compon": [8, 63], "total": [8, 23], "comput": [8, 23, 25, 42, 63], "plot_tsn": [8, 63], "perplex": [8, 63], "50": 8, "random_st": [8, 28, 34, 36, 63], "42": 8, "t": [8, 26, 63], "sne": [8, 63], "conditional_entropi": 8, "x": [8, 23, 33, 63], "y": [8, 21, 23, 33, 63], "theil_u": 8, "plot_theil_u_heatmap": [8, 63], "theil": [8, 9, 63], "u": [8, 9, 63], "plot_null_percentag": [8, 63], "check_unique_valu": [8, 63], "threshold": [8, 9, 23, 63], "amount": 8, "uniqu": [8, 63], "almost": [8, 13], "row": 8, "being": [8, 63], "abov": [8, 63], "against": [8, 23], "mutual_info_to_target": [8, 63], "mut_param": 8, "mutual": [8, 63], "inform": [8, 15, 63], "dictionari": [8, 15, 23, 25, 42], "argument": [8, 23, 63], "sklearn": [8, 63], "mutual_info_classif": 8, "To": [8, 63], "detect_leakage_via_correl": [9, 63], "9": [9, 63], "detect": [9, 29, 32], "leakag": 9, "other": [9, 63], "absolut": [9, 16], "equal": 9, "consid": [9, 21, 22, 23], "potenti": [9, 63], "detect_categorical_leakag": [9, 63], "respect": 9, "analys": [10, 18, 62, 63], "data_leakage_check": [10, 18, 62, 63], "plot_lift_chart": 11, "arrai": [11, 19, 23, 42, 43, 44], "y_true": [11, 21, 22], "num_bin": 11, "20": [11, 36, 63], "plot_roc_auc": 11, "predicted_prob": 11, "titl": 11, "roc": [11, 63], "curv": [11, 63], "auc": [11, 63], "area": 11, "under": [11, 13, 23], "posit": 11, "class": [11, 16, 57, 63], "plot_probability_distribut": 11, "distribut": [11, 21, 22, 23], "histogram": 11, "matplotlib": [11, 23], "bin": 11, "balanced_log_loss": 11, "y_pred": 11, "eval_classifi": 11, "eval_regressor": 11, "eval_metr": [12, 18, 62], "shap_valu": [12, 18, 62], "flexibl": 13, "librari": [13, 33, 63], "shap_explan": 13, "explan": 13, "http": 13, "medium": 13, "com": 13, "rapid": 13, "ai": 13, "gpu": [13, 63], "acceler": 13, "587fad6822": 13, "trigger": [15, 63], "long": 15, "For": [15, 25, 33, 42, 63], "ueer": 15, "inspir": 15, "individu": [15, 29], "sequenti": 15, "id": 15, "make": [15, 63], "sure": 15, "increment": 15, "chose": 15, "where": [15, 63], "been": [15, 63], "learn": 15, "rate": 15, "actual": [15, 23], "convert": [15, 27], "xgboostconfig": 15, "get_best_scor": [15, 21, 22], "target_metr": 15, "util": [16, 63], "check_gpu_support": [16, 44], "logger": 16, "messag": 16, "save_to_product": [16, 63], "class_inst": 16, "file_path": 16, "file_nam": 16, "automl_inst": 16, "file_typ": 16, "dat": 16, "pretrain": 16, "save": [16, 25, 42, 63], "dill": 16, "path": 16, "whole": 16, "file": [16, 63], "export": [16, 63], "load_for_product": [16, 63], "auto": [16, 62, 63], "try": [16, 29, 63], "fallback": 16, "logic": 16, "imput": [16, 63], "case": [16, 23, 27, 33, 44], "import": [16, 63], "fail": 16, "eda": [18, 62, 63], "general_util": [18, 62, 63], "monitor": [18, 62, 63], "data_monitor": [18, 24, 62, 63], "datetime_featur": [18, 30, 62], "encode_target_label": [18, 30, 62], "feature_typ": [18, 30, 62, 63], "nulls_and_inf": [18, 30, 62], "schema_check": [18, 30, 62], "target_encod": [18, 30, 62], "train_test_split": [18, 30, 62, 63], "make_data": [18, 35, 62], "create_data": [18, 35, 37, 62], "test_analys": [18, 35, 62], "test_cast": [18, 35, 62], "test_cast_cv": [18, 35, 62], "test_cast_cv_multiclass": [18, 35, 62], "test_cast_cv_regress": [18, 35, 62], "test_cast_regress": [18, 35, 62], "test_check_gpu_support": [18, 35, 62], "test_custom_processing_base_class": [18, 35, 62], "test_data_leakage_check": [18, 35, 62], "test_data_monitor": [18, 35, 62], "test_datetime_featur": [18, 35, 62], "test_encode_target_label": [18, 35, 62], "test_experiment_track": [18, 35, 62], "test_feature_type_detector": [18, 35, 62], "test_fine_tun": [18, 35, 62], "test_load_for_product": [18, 35, 62], "test_nulls_and_inf": [18, 35, 62], "test_save_to_product": [18, 35, 62], "test_schema_check": [18, 35, 62], "test_shap_explan": [18, 35, 62], "test_target_encoding_binari": [18, 35, 62], "test_target_encoding_multiclass": [18, 35, 62], "test_train_test_split": [18, 35, 62], "predictedproba": [19, 39, 40, 41, 63], "predictedclass": [19, 39, 40, 41, 63], "baseclassmlmodel": [19, 21, 39, 40, 41, 63], "requir": [19, 39, 40, 41, 42, 43, 63], "x_train": [19, 21, 22, 25, 39, 40, 41, 42, 43, 63], "x_test": [19, 21, 22, 25, 39, 40, 41, 42, 43, 63], "y_train": [19, 21, 22, 25, 39, 40, 41, 42, 43, 63], "y_test": [19, 21, 22, 25, 39, 40, 41, 42, 43, 63], "baseclassmlregressionmodel": [19, 22, 42, 43], "imbalanc": [21, 22], "mai": [21, 22], "deepend": [21, 22], "calculate_class_weight": 21, "check_load_conf": [21, 22], "altern": [21, 22], "overwrit": [21, 22, 63], "create_d_matric": [21, 22], "train_single_fold_model": [21, 22], "d_train": [21, 22], "d_test": [21, 22], "pruning_callback": [21, 22], "increasing_noise_evalu": [21, 22], "eval_df": [21, 22], "iter": [21, 22, 27], "100": [21, 22, 34, 63], "increas": [21, 22, 63], "nois": [21, 22, 63], "same": [21, 22, 32], "normal": [21, 22, 63], "power": [21, 22, 33], "yeo": [21, 22], "johnson": [21, 22], "increasingli": [21, 22, 63], "loss": [21, 22], "constant_loss_degregation_factor": [21, 22], "decreas": [21, 22], "come": [21, 22, 63], "_fine_tune_precis": [21, 22], "tuned_param": [21, 22], "random_se": [21, 22], "fine_tun": [21, 22], "drift": 23, "meant": 23, "datadrift": [23, 63], "variou": [23, 63], "measur": 23, "visual": 23, "suitabl": [23, 33], "batch": 23, "onlin": 23, "kolmogorov_smirnov_test": [23, 63], "new_data": [23, 63], "05": [23, 63], "k": 23, "oth": 23, "nonparametr": 23, "fall": 23, "pd": [23, 63], "is_numeric_dtyp": 23, "origin": [23, 27], "kolmogorov": 23, "smirnov": 23, "drift_flag": 23, "flag": [23, 63], "_calculate_psi": 23, "bucket": 23, "population_stability_index": [23, 63], "popul": 23, "stabil": 23, "index": [23, 63], "interpret": 23, "psi": [23, 63], "shift": 23, "both": 23, "slight": 23, "occur": 23, "larg": 23, "qqplot_two_sampl": [23, 63], "x_label": [23, 63], "y_label": [23, 63], "quantil": 23, "interpol": 23, "nearest": 23, "ax": 23, "rug": 23, "rug_length": 23, "rug_kwarg": 23, "kwarg": 23, "draw": 23, "versu": 23, "like": [23, 63], "dimension": [23, 33], "axi": [23, 63], "current": 23, "n": 23, "evenli": 23, "point": [23, 25, 42, 63], "min": 23, "len": 23, "linear": 23, "lower": [23, 63], "higher": [23, 63], "midpoint": 23, "find": [23, 63], "sampl": [23, 63], "horizont": 23, "vertic": 23, "drawn": 23, "length": [23, 32], "line": 23, "fraction": 23, "keyword": 23, "axvlin": 23, "axhlin": 23, "scatter": 23, "q": 23, "entri": [25, 42, 63], "last": [25, 42, 63], "mile": [25, 42, 63], "trained_pattern": [25, 42, 63], "extend": [25, 42], "fit_transform": [25, 28, 42, 63], "prediction_mod": [25, 42], "skip": [25, 42, 63], "process": [25, 26, 28, 42], "we": [25, 42, 44, 63], "anyth": [25, 42], "placehold": [25, 42], "predicton_mod": [25, 28, 42, 63], "mode": [25, 28, 42], "extract": 26, "datetim": [26, 29, 63], "cyclic": 26, "aren": 26, "good": [26, 63], "match": [26, 32], "tree": [26, 63], "date_convert": 26, "date_part": 26, "loop": 26, "through": [26, 27], "month": 26, "dai": 26, "dayofweek": 26, "hour": 26, "modifi": 26, "relev": 27, "revers": [27, 63], "targetlabelencod": 27, "translat": 27, "back": [27, 63], "fit_label_encod": 27, "map": [27, 29], "label_encoder_transform": 27, "fit_transform_target_label": 27, "transform_target_label": 27, "alreadi": [27, 29, 33, 63], "label_encoder_reverse_transform": 27, "top": [28, 63], "selection_strategi": [28, 63], "featureselectionconfig": 28, "elimin": 28, "specif": 29, "featuretypedetector": [29, 63], "num_column": [29, 63], "accordingli": 29, "identify_num_column": 29, "identifi": 29, "exist": 29, "identify_bool_column": 29, "boolean": 29, "identify_date_time_column": 29, "no_bool_col": 29, "yyyi": 29, "mm": 29, "dd": 29, "cast_rest_columns_to_object": 29, "bool_col": 29, "treat": 29, "remain": 29, "tri": 29, "success": 29, "assum": 29, "fit_transform_feature_typ": [29, 63], "orchest": 29, "transform_feature_typ": 29, "ignore_col": 29, "handl": 31, "null": [31, 63], "infinit": 31, "box": 31, "fill_infinite_valu": 31, "fill_with": 31, "replac": [31, 33, 44, 63], "nan": [31, 63], "given": 31, "fill_nul": 31, "schema": [32, 63], "schemadetector": 32, "store": [32, 63], "rais": [32, 63], "error": 32, "warn": [32, 63], "extra": 32, "supervis": 33, "cardin": 33, "reduc": 33, "category_encod": 33, "offer": [33, 63], "varieti": 33, "targetencod": 33, "special": [33, 63], "avail": [33, 63], "binaryclasstargetencod": 33, "context": 33, "fit_target_encode_binary_class": 33, "transform_target_encode_binary_class": 33, "multiclasstargetencod": 33, "fit_target_encode_multiclass": 33, "transform_target_encode_multiclass": 33, "randomli": 34, "train_test_split_cross": 34, "stratif": 34, "train_test_split_tim": 34, "split_by_col": 34, "create_synthetic_datafram": 36, "num_sampl": 36, "create_synthetic_multiclass_datafram": 36, "create_synthetic_dataframe_regress": 36, "synthetic_train_test_data": [38, 39, 40, 42, 43, 63], "synthetic_train_test_data_regress": 38, "synthetic_categorical_data": 38, "create_data_with_nul": 38, "create_data_with_many_uniqu": 38, "test_plot_pie_chart": 38, "test_univariate_plot": 38, "test_bi_variate_plot": 38, "test_correlation_heatmap": 38, "test_correlation_to_target": 38, "test_mutual_info_to_target": 38, "test_mutual_info_to_target_multiclass": 38, "test_mutual_info_to_target_regress": 38, "test_pca_plot": 38, "test_plot_pca_cumulative_vari": 38, "test_plot_tsn": 38, "test_plot_theil_u_heatmap": 38, "test_plot_count_pair": 38, "test_plot_null_percentag": 38, "test_check_unique_valu": 38, "synthetic_multiclass_train_test_data": 39, "test_blueprint_xgboost": [39, 43], "custommodel": [39, 42, 43, 63], "test_bluecast_with_custom_model": [39, 43], "bluecast_inst": 39, "test_enable_feature_selection_warn": 39, "test_hypertuning_cv_folds_warn": 39, "test_missing_feature_selector_warn": 39, "test_missing_xgboost_tune_params_config_warn": 39, "test_min_features_to_select_warn": 39, "test_shap_values_and_ml_algorithm_warn": 39, "test_cat_encoding_via_ml_algorithm_and_ml_model_warn": 39, "test_precise_cv_tuning_warn": 39, "test_class_problem_mismatch_warn": 39, "test_blueprint_cv_xgboost": [40, 42], "customlrmodel": [40, 41, 42], "test_bluecast_cv_fit_eval_with_custom_model": [40, 42], "test_bluecast_cv_fit_eval_multiclass_with_custom_model": 41, "mycustomlastmilepreprocess": [42, 63], "custom_funct": [42, 63], "test_bluecast_cv_with_custom_object": 42, "monkeypatch": 44, "fixtur": 44, "pytest": [44, 63], "mock": 44, "xgb": [44, 63], "mock_train": 44, "assert": 44, "correctli": 44, "patch": 44, "rand": 44, "predefin": 44, "randint": 44, "output": [44, 63], "gpu_hist": 44, "custom_preprocess": 45, "test_fit_transform_returns_tupl": 45, "test_transform_returns_tupl": 45, "test_transform_returns_optional_target": 45, "test_transform_returns_optional_target_prediction_mod": 45, "create_to_target_correlated_featur": 46, "create_to_target_correlated_categorical_featur": 46, "test_detect_leakage_via_correl": 46, "test_detect_categorical_leakag": 46, "mock_logg": 47, "test_kolmogorov_smirnov_test": 47, "test_population_stability_index": 47, "test_qqplot_two_sampl": 47, "sample_datafram": 48, "test_date_convert": 48, "label_encod": 49, "sample_data": [49, 58], "trained_label_encod": 49, "test_fit_label_encod": 49, "test_label_encoder_transform": 49, "test_fit_transform_target_label": 49, "test_transform_target_label": 49, "test_label_encoder_reverse_transform": 49, "test_add_result": 50, "test_retrieve_results_as_df": 50, "test_get_best_score_empti": 50, "test_get_best_score_higher_is_bett": 50, "test_get_best_score_lower_is_bett": 50, "xgboost_model": 52, "test_fine_tune_runs_without_error": 52, "test_fine_tune_runs_without_errors_using_cv": 52, "test_load_for_production_with_default_file_typ": 53, "test_fill_nul": 54, "test_fill_infinite_valu": 54, "dummyclass": 55, "test_transform_same_schema": 56, "test_transform_missing_column": 56, "test_transform_extra_column": 56, "mock_model": 57, "test_data": 57, "test_eval_classifier_except": 57, "test_transform_target_encode_binary_class": 58, "test_multi_class_target_encod": 59, "test_train_test_split_cross": 60, "test_train_test_split_tim": 60, "project": 61, "bluecast": [61, 62], "copyright": 61, "2023": 61, "thoma": [61, 63], "mei\u00dfner": [61, 63], "author": 61, "releas": 61, "91": 61, "extens": 61, "myst_pars": 61, "sphinx": [61, 62, 63], "ext": 61, "autodoc": 61, "autoapi": [61, 62], "napoleon": 61, "autoapi_typ": 61, "autoapi_dir": 61, "templates_path": 61, "_templat": 61, "exclude_pattern": 61, "html_theme": 61, "alabast": 61, "html_static_path": 61, "_static": 61, "page": 62, "conf": 62, "lightweight": 63, "fast": 63, "focus": 63, "few": 63, "architectur": 63, "what": 63, "faster": 63, "cycl": 63, "stabl": 63, "codebas": 63, "while": 63, "depend": 63, "despit": 63, "its": 63, "core": 63, "here": 63, "pypi": 63, "pip": 63, "fresh": 63, "environ": 63, "conscious": 63, "support": 63, "prevent": 63, "outdat": 63, "version": 63, "issu": 63, "connect": 63, "clone": 63, "repositori": 63, "conda": 63, "poetri": 63, "manag": 63, "modul": 63, "main": 63, "some": 63, "automl": 63, "df_train": 63, "df_val": 63, "your": 63, "work": 63, "bluecast_cv_pipelin": 63, "further": 63, "again": 63, "sinc": 63, "80": 63, "well": 63, "y_hat": 63, "get": 63, "first": 63, "overview": 63, "feat_type_detector": 63, "train_data": 63, "veri": 63, "share": 63, "many_unique_col": 63, "percentag": 63, "categorical_feature_1": 63, "loc": 63, "ec1": 63, "bi": 63, "variat": 63, "assoc": 63, "theil_matrix": 63, "extra_param": 63, "30": 63, "explain": 63, "certain": 63, "With": 63, "big": 63, "complex": 63, "easili": 63, "sneak": 63, "train_config": 63, "promis": 63, "There": 63, "situat": 63, "risk": 63, "care": 63, "scenario": 63, "solut": 63, "better": 63, "sens": 63, "riski": 63, "mycustompreprocess": 63, "section": 63, "happen": 63, "coeffici": 63, "slower": 63, "pleas": 63, "note": 63, "By": 63, "bayesian": 63, "optim": 63, "howev": 63, "give": 63, "estim": 63, "necessarli": 63, "ideal": 63, "spot": 63, "thu": 63, "refin": 63, "found": 63, "seed": 63, "max": 63, "sec": 63, "atm": 63, "tradeoff": 63, "singl": 63, "xgboost_param_config": 63, "test_train_split": 63, "variant": 63, "receiv": 63, "becaus": 63, "e2eml": 63, "easi": 63, "just": 63, "16": 63, "want": 63, "could": 63, "start": 63, "present": 63, "anymor": 63, "sub": 63, "def": 63, "__init__": 63, "self": 63, "drop": 63, "beta": 63, "gamma": 63, "delta": 63, "alpha": 63, "ej": 63, "cat_df": 63, "copi": 63, "zscore": 63, "fit_al": 63, "transform_al": 63, "imp_mean": 63, "simpleimput": 63, "missing_valu": 63, "np": 63, "strategi": 63, "median": 63, "merg": 63, "left_index": 63, "right_index": 63, "left": 63, "inf": 63, "custom_col": 63, "head": 63, "isinst": 63, "targ": 63, "autom": 63, "disabl": 63, "about": 63, "follow": 63, "rfecv": 63, "make_scor": 63, "matthews_corrcoef": 63, "model_select": 63, "stratifiedkfold": 63, "super": 63, "selected_featur": 63, "xgbclassifi": 63, "n_job": 63, "support_": 63, "conf_feature_select": 63, "custom_feat_sel": 63, "feature1": 63, "rang": 63, "feature2": 63, "y_trai": 63, "predicted_proba": 63, "predicted_class": 63, "enjoi": 63, "below": 63, "properti": 63, "lint": 63, "logisticregress": 63, "you": 63, "wih": 63, "itself": 63, "predict_proba": 63, "custom_model": 63, "pre": 63, "updat": 63, "ad": 63, "definit": 63, "enhanc": 63, "insight": 63, "No": 63, "setup": 63, "y_eval": 63, "access": 63, "tracker_df": 63, "now": 63, "feed": 63, "mayb": 63, "uncov": 63, "hidden": 63, "pattern": 63, "whenev": 63, "manual": 63, "handi": 63, "send": 63, "server": 63, "cnfig": 63, "customexperimenttrack": 63, "abstractmethod": 63, "union": 63, "90": 63, "anonym": 63, "separ": 63, "data_drift_check": 63, "statist": 63, "print": 63, "kolmogorov_smirnov_flag": 63, "population_stability_index_flag": 63, "population_stability_index_valu": 63, "qqplot": 63, "directli": 63, "mimic": 63, "realiti": 63, "shaplei": 63, "lift": 63, "misconfigur": 63, "ensur": 63, "tool": 63, "commit": 63, "strong": 63, "hint": 63, "unit": 63, "contributor": 63, "doc": 63, "design": 63, "framework": 63, "still": 63, "reach": 63, "showcas": 63, "capabl": 63, "wise": 63, "icr": 63, "over": 63, "6000": 63, "particip": 63, "cover": 63, "lot": 63, "ps3e23": 63, "softwar": 63, "defect": 63, "12": 63, "ps3e25": 63, "hard": 63, "steel": 63, "welcom": 63, "branch": 63, "fix": 63, "md": 63, "past": 63, "content": 63, "push": 63, "pull": 63, "request": 63, "dev": 63, "pyproject": 63, "toml": 63, "readthedoc": 63, "requit": 63, "srtd_requir": 63, "txt": 63, "simpli": 63, "f": 63, "rtd_requir": 63, "abl": 63, "autobuild": 63, "sourc": 63, "build": 63, "html": 63, "localhost": 63, "link": 63, "creator": 63, "linkedin": 63}, "objects": {"": [[18, 0, 0, "-", "bluecast"], [61, 0, 0, "-", "conf"]], "bluecast": [[4, 0, 0, "-", "blueprints"], [6, 0, 0, "-", "config"], [10, 0, 0, "-", "eda"], [12, 0, 0, "-", "evaluation"], [14, 0, 0, "-", "experimentation"], [17, 0, 0, "-", "general_utils"], [20, 0, 0, "-", "ml_modelling"], [24, 0, 0, "-", "monitoring"], [30, 0, 0, "-", "preprocessing"], [35, 0, 0, "-", "tests"]], "bluecast.blueprints": [[0, 0, 0, "-", "cast"], [1, 0, 0, "-", "cast_cv"], [2, 0, 0, "-", "cast_cv_regression"], [3, 0, 0, "-", "cast_regression"]], "bluecast.blueprints.cast": [[0, 1, 1, "", "BlueCast"]], "bluecast.blueprints.cast.BlueCast": [[0, 2, 1, "", "fit"], [0, 2, 1, "", "fit_eval"], [0, 2, 1, "", "initial_checks"], [0, 2, 1, "", "predict"], [0, 2, 1, "", "transform_new_data"]], "bluecast.blueprints.cast_cv": [[1, 1, 1, "", "BlueCastCV"]], "bluecast.blueprints.cast_cv.BlueCastCV": [[1, 2, 1, "", "fit"], [1, 2, 1, "", "fit_eval"], [1, 2, 1, "", "predict"], [1, 2, 1, "", "prepare_data"], [1, 2, 1, "", "show_oof_scores"]], "bluecast.blueprints.cast_cv_regression": [[2, 1, 1, "", "BlueCastCVRegression"]], "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "fit_eval"], [2, 2, 1, "", "predict"], [2, 2, 1, "", "prepare_data"], [2, 2, 1, "", "show_oof_scores"]], "bluecast.blueprints.cast_regression": [[3, 1, 1, "", "BlueCastRegression"]], "bluecast.blueprints.cast_regression.BlueCastRegression": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "fit_eval"], [3, 2, 1, "", "initial_checks"], [3, 2, 1, "", "predict"], [3, 2, 1, "", "transform_new_data"]], "bluecast.config": [[5, 0, 0, "-", "base_classes"], [7, 0, 0, "-", "training_config"]], "bluecast.config.base_classes": [[5, 1, 1, "", "BaseClassExperimentTracker"]], "bluecast.config.base_classes.BaseClassExperimentTracker": [[5, 2, 1, "", "add_results"], [5, 2, 1, "", "retrieve_results_as_df"]], "bluecast.config.training_config": [[7, 1, 1, "", "Config"], [7, 1, 1, "", "TrainingConfig"], [7, 1, 1, "", "XgboostFinalParamConfig"], [7, 1, 1, "", "XgboostTuneParamsConfig"], [7, 1, 1, "", "XgboostTuneParamsRegressionConfig"]], "bluecast.config.training_config.Config": [[7, 3, 1, "", "arbitrary_types_allowed"]], "bluecast.config.training_config.TrainingConfig": [[7, 3, 1, "", "autotune_model"], [7, 3, 1, "", "calculate_shap_values"], [7, 3, 1, "", "cat_encoding_via_ml_algorithm"], [7, 3, 1, "", "early_stopping_rounds"], [7, 3, 1, "", "enable_feature_selection"], [7, 3, 1, "", "enable_grid_search_fine_tuning"], [7, 3, 1, "", "experiment_name"], [7, 3, 1, "", "global_random_state"], [7, 3, 1, "", "gridsearch_nb_parameters_per_grid"], [7, 3, 1, "", "gridsearch_tuning_max_runtime_secs"], [7, 3, 1, "", "hyperparameter_tuning_max_runtime_secs"], [7, 3, 1, "", "hyperparameter_tuning_rounds"], [7, 3, 1, "", "hypertuning_cv_folds"], [7, 3, 1, "", "increase_random_state_in_bluecast_cv_by"], [7, 3, 1, "", "min_features_to_select"], [7, 3, 1, "", "optuna_sampler_n_startup_trials"], [7, 3, 1, "", "precise_cv_tuning"], [7, 3, 1, "", "show_detailed_tuning_logs"], [7, 3, 1, "", "shuffle_during_training"], [7, 3, 1, "", "train_size"], [7, 3, 1, "", "train_split_stratify"], [7, 3, 1, "", "use_full_data_for_final_model"]], "bluecast.config.training_config.XgboostFinalParamConfig": [[7, 3, 1, "", "classification_threshold"], [7, 3, 1, "", "params"], [7, 3, 1, "", "sample_weight"]], "bluecast.config.training_config.XgboostTuneParamsConfig": [[7, 3, 1, "", "alpha_max"], [7, 3, 1, "", "alpha_min"], [7, 3, 1, "", "booster"], [7, 3, 1, "", "col_sample_by_level_max"], [7, 3, 1, "", "col_sample_by_level_min"], [7, 3, 1, "", "col_sample_by_tree_max"], [7, 3, 1, "", "col_sample_by_tree_min"], [7, 3, 1, "", "eta_max"], [7, 3, 1, "", "eta_min"], [7, 3, 1, "", "gamma_max"], [7, 3, 1, "", "gamma_min"], [7, 3, 1, "", "lambda_max"], [7, 3, 1, "", "lambda_min"], [7, 3, 1, "", "max_depth_max"], [7, 3, 1, "", "max_depth_min"], [7, 3, 1, "", "max_leaves_max"], [7, 3, 1, "", "max_leaves_min"], [7, 3, 1, "", "model_eval_metric"], [7, 3, 1, "", "model_objective"], [7, 3, 1, "", "model_verbosity"], [7, 3, 1, "", "model_verbosity_during_final_training"], [7, 3, 1, "", "steps_max"], [7, 3, 1, "", "steps_min"], [7, 3, 1, "", "sub_sample_max"], [7, 3, 1, "", "sub_sample_min"], [7, 3, 1, "", "subsample_max"], [7, 3, 1, "", "subsample_min"]], "bluecast.config.training_config.XgboostTuneParamsRegressionConfig": [[7, 3, 1, "", "alpha_max"], [7, 3, 1, "", "alpha_min"], [7, 3, 1, "", "booster"], [7, 3, 1, "", "col_sample_by_level_max"], [7, 3, 1, "", "col_sample_by_level_min"], [7, 3, 1, "", "col_sample_by_tree_max"], [7, 3, 1, "", "col_sample_by_tree_min"], [7, 3, 1, "", "eta_max"], [7, 3, 1, "", "eta_min"], [7, 3, 1, "", "gamma_max"], [7, 3, 1, "", "gamma_min"], [7, 3, 1, "", "lambda_max"], [7, 3, 1, "", "lambda_min"], [7, 3, 1, "", "max_depth_max"], [7, 3, 1, "", "max_depth_min"], [7, 3, 1, "", "max_leaves_max"], [7, 3, 1, "", "max_leaves_min"], [7, 3, 1, "", "model_eval_metric"], [7, 3, 1, "", "model_objective"], [7, 3, 1, "", "model_verbosity"], [7, 3, 1, "", "model_verbosity_during_final_training"], [7, 3, 1, "", "steps_max"], [7, 3, 1, "", "steps_min"], [7, 3, 1, "", "sub_sample_max"], [7, 3, 1, "", "sub_sample_min"], [7, 3, 1, "", "subsample_max"], [7, 3, 1, "", "subsample_min"]], "bluecast.eda": [[8, 0, 0, "-", "analyse"], [9, 0, 0, "-", "data_leakage_checks"]], "bluecast.eda.analyse": [[8, 4, 1, "", "bi_variate_plots"], [8, 4, 1, "", "check_unique_values"], [8, 4, 1, "", "conditional_entropy"], [8, 4, 1, "", "correlation_heatmap"], [8, 4, 1, "", "correlation_to_target"], [8, 4, 1, "", "mutual_info_to_target"], [8, 4, 1, "", "plot_count_pair"], [8, 4, 1, "", "plot_count_pairs"], [8, 4, 1, "", "plot_null_percentage"], [8, 4, 1, "", "plot_pca"], [8, 4, 1, "", "plot_pca_cumulative_variance"], [8, 4, 1, "", "plot_pie_chart"], [8, 4, 1, "", "plot_theil_u_heatmap"], [8, 4, 1, "", "plot_tsne"], [8, 4, 1, "", "theil_u"], [8, 4, 1, "", "univariate_plots"]], "bluecast.eda.data_leakage_checks": [[9, 4, 1, "", "detect_categorical_leakage"], [9, 4, 1, "", "detect_leakage_via_correlation"]], "bluecast.evaluation": [[11, 0, 0, "-", "eval_metrics"], [13, 0, 0, "-", "shap_values"]], "bluecast.evaluation.eval_metrics": [[11, 4, 1, "", "balanced_log_loss"], [11, 4, 1, "", "eval_classifier"], [11, 4, 1, "", "eval_regressor"], [11, 4, 1, "", "plot_lift_chart"], [11, 4, 1, "", "plot_probability_distribution"], [11, 4, 1, "", "plot_roc_auc"]], "bluecast.evaluation.shap_values": [[13, 4, 1, "", "shap_explanations"]], "bluecast.experimentation": [[15, 0, 0, "-", "tracking"]], "bluecast.experimentation.tracking": [[15, 1, 1, "", "ExperimentTracker"]], "bluecast.experimentation.tracking.ExperimentTracker": [[15, 2, 1, "", "add_results"], [15, 2, 1, "", "get_best_score"], [15, 2, 1, "", "retrieve_results_as_df"]], "bluecast.general_utils": [[16, 0, 0, "-", "general_utils"]], "bluecast.general_utils.general_utils": [[16, 4, 1, "", "check_gpu_support"], [16, 4, 1, "", "load_for_production"], [16, 4, 1, "", "logger"], [16, 4, 1, "", "save_to_production"]], "bluecast.ml_modelling": [[19, 0, 0, "-", "base_classes"], [21, 0, 0, "-", "xgboost"], [22, 0, 0, "-", "xgboost_regression"]], "bluecast.ml_modelling.base_classes": [[19, 1, 1, "", "BaseClassMlModel"], [19, 1, 1, "", "BaseClassMlRegressionModel"], [19, 5, 1, "", "PredictedClasses"], [19, 5, 1, "", "PredictedProbas"]], "bluecast.ml_modelling.base_classes.BaseClassMlModel": [[19, 2, 1, "", "fit"], [19, 2, 1, "", "predict"]], "bluecast.ml_modelling.base_classes.BaseClassMlRegressionModel": [[19, 2, 1, "", "fit"], [19, 2, 1, "", "predict"]], "bluecast.ml_modelling.xgboost": [[21, 1, 1, "", "XgboostModel"]], "bluecast.ml_modelling.xgboost.XgboostModel": [[21, 2, 1, "", "_fine_tune_precise"], [21, 2, 1, "", "autotune"], [21, 2, 1, "", "calculate_class_weights"], [21, 2, 1, "", "check_load_confs"], [21, 2, 1, "", "constant_loss_degregation_factor"], [21, 2, 1, "", "create_d_matrices"], [21, 2, 1, "", "fine_tune"], [21, 2, 1, "", "fit"], [21, 2, 1, "", "get_best_score"], [21, 2, 1, "", "increasing_noise_evaluator"], [21, 2, 1, "", "predict"], [21, 2, 1, "", "train_single_fold_model"]], "bluecast.ml_modelling.xgboost_regression": [[22, 1, 1, "", "XgboostModelRegression"]], "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression": [[22, 2, 1, "", "_fine_tune_precise"], [22, 2, 1, "", "autotune"], [22, 2, 1, "", "check_load_confs"], [22, 2, 1, "", "constant_loss_degregation_factor"], [22, 2, 1, "", "create_d_matrices"], [22, 2, 1, "", "fine_tune"], [22, 2, 1, "", "fit"], [22, 2, 1, "", "get_best_score"], [22, 2, 1, "", "increasing_noise_evaluator"], [22, 2, 1, "", "predict"], [22, 2, 1, "", "train_single_fold_model"]], "bluecast.monitoring": [[23, 0, 0, "-", "data_monitoring"]], "bluecast.monitoring.data_monitoring": [[23, 1, 1, "", "DataDrift"]], "bluecast.monitoring.data_monitoring.DataDrift": [[23, 2, 1, "", "_calculate_psi"], [23, 2, 1, "", "kolmogorov_smirnov_test"], [23, 2, 1, "", "population_stability_index"], [23, 2, 1, "", "qqplot_two_samples"]], "bluecast.preprocessing": [[25, 0, 0, "-", "custom"], [26, 0, 0, "-", "datetime_features"], [27, 0, 0, "-", "encode_target_labels"], [28, 0, 0, "-", "feature_selection"], [29, 0, 0, "-", "feature_types"], [31, 0, 0, "-", "nulls_and_infs"], [32, 0, 0, "-", "schema_checks"], [33, 0, 0, "-", "target_encoding"], [34, 0, 0, "-", "train_test_split"]], "bluecast.preprocessing.custom": [[25, 1, 1, "", "CustomPreprocessing"]], "bluecast.preprocessing.custom.CustomPreprocessing": [[25, 2, 1, "", "fit_transform"], [25, 2, 1, "", "transform"]], "bluecast.preprocessing.datetime_features": [[26, 4, 1, "", "date_converter"]], "bluecast.preprocessing.encode_target_labels": [[27, 1, 1, "", "TargetLabelEncoder"]], "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder": [[27, 2, 1, "", "fit_label_encoder"], [27, 2, 1, "", "fit_transform_target_labels"], [27, 2, 1, "", "label_encoder_reverse_transform"], [27, 2, 1, "", "label_encoder_transform"], [27, 2, 1, "", "transform_target_labels"]], "bluecast.preprocessing.feature_selection": [[28, 1, 1, "", "RFECVSelector"]], "bluecast.preprocessing.feature_selection.RFECVSelector": [[28, 2, 1, "", "fit_transform"], [28, 2, 1, "", "transform"]], "bluecast.preprocessing.feature_types": [[29, 1, 1, "", "FeatureTypeDetector"]], "bluecast.preprocessing.feature_types.FeatureTypeDetector": [[29, 2, 1, "", "cast_rest_columns_to_object"], [29, 2, 1, "", "fit_transform_feature_types"], [29, 2, 1, "", "identify_bool_columns"], [29, 2, 1, "", "identify_date_time_columns"], [29, 2, 1, "", "identify_num_columns"], [29, 2, 1, "", "transform_feature_types"]], "bluecast.preprocessing.nulls_and_infs": [[31, 4, 1, "", "fill_infinite_values"], [31, 4, 1, "", "fill_nulls"]], "bluecast.preprocessing.schema_checks": [[32, 1, 1, "", "SchemaDetector"]], "bluecast.preprocessing.schema_checks.SchemaDetector": [[32, 2, 1, "", "fit"], [32, 2, 1, "", "transform"]], "bluecast.preprocessing.target_encoding": [[33, 1, 1, "", "BinaryClassTargetEncoder"], [33, 1, 1, "", "MultiClassTargetEncoder"]], "bluecast.preprocessing.target_encoding.BinaryClassTargetEncoder": [[33, 2, 1, "", "fit_target_encode_binary_class"], [33, 2, 1, "", "transform_target_encode_binary_class"]], "bluecast.preprocessing.target_encoding.MultiClassTargetEncoder": [[33, 2, 1, "", "fit_target_encode_multiclass"], [33, 2, 1, "", "transform_target_encode_multiclass"]], "bluecast.preprocessing.train_test_split": [[34, 4, 1, "", "train_test_split"], [34, 4, 1, "", "train_test_split_cross"], [34, 4, 1, "", "train_test_split_time"]], "bluecast.tests": [[37, 0, 0, "-", "make_data"], [38, 0, 0, "-", "test_analyse"], [39, 0, 0, "-", "test_cast"], [40, 0, 0, "-", "test_cast_cv"], [41, 0, 0, "-", "test_cast_cv_multiclass"], [42, 0, 0, "-", "test_cast_cv_regression"], [43, 0, 0, "-", "test_cast_regression"], [44, 0, 0, "-", "test_check_gpu_support"], [45, 0, 0, "-", "test_custom_processing_base_class"], [46, 0, 0, "-", "test_data_leakage_checks"], [47, 0, 0, "-", "test_data_monitoring"], [48, 0, 0, "-", "test_datetime_features"], [49, 0, 0, "-", "test_encode_target_labels"], [50, 0, 0, "-", "test_experiment_tracker"], [51, 0, 0, "-", "test_feature_type_detector"], [52, 0, 0, "-", "test_fine_tune"], [53, 0, 0, "-", "test_load_for_production"], [54, 0, 0, "-", "test_nulls_and_infs"], [55, 0, 0, "-", "test_save_to_production"], [56, 0, 0, "-", "test_schema_checks"], [57, 0, 0, "-", "test_shap_explanations"], [58, 0, 0, "-", "test_target_encoding_binary"], [59, 0, 0, "-", "test_target_encoding_multiclass"], [60, 0, 0, "-", "test_train_test_split"]], "bluecast.tests.make_data": [[36, 0, 0, "-", "create_data"]], "bluecast.tests.make_data.create_data": [[36, 4, 1, "", "create_synthetic_dataframe"], [36, 4, 1, "", "create_synthetic_dataframe_regression"], [36, 4, 1, "", "create_synthetic_multiclass_dataframe"]], "bluecast.tests.test_analyse": [[38, 4, 1, "", "create_data_with_many_uniques"], [38, 4, 1, "", "create_data_with_nulls"], [38, 4, 1, "", "synthetic_categorical_data"], [38, 4, 1, "", "synthetic_train_test_data"], [38, 4, 1, "", "synthetic_train_test_data_regression"], [38, 4, 1, "", "test_bi_variate_plots"], [38, 4, 1, "", "test_check_unique_values"], [38, 4, 1, "", "test_correlation_heatmap"], [38, 4, 1, "", "test_correlation_to_target"], [38, 4, 1, "", "test_mutual_info_to_target"], [38, 4, 1, "", "test_mutual_info_to_target_multiclass"], [38, 4, 1, "", "test_mutual_info_to_target_regression"], [38, 4, 1, "", "test_pca_plot"], [38, 4, 1, "", "test_plot_count_pairs"], [38, 4, 1, "", "test_plot_null_percentage"], [38, 4, 1, "", "test_plot_pca_cumulative_variance"], [38, 4, 1, "", "test_plot_pie_chart"], [38, 4, 1, "", "test_plot_theil_u_heatmap"], [38, 4, 1, "", "test_plot_tsne"], [38, 4, 1, "", "test_univariate_plots"]], "bluecast.tests.test_cast": [[39, 1, 1, "", "CustomModel"], [39, 4, 1, "", "bluecast_instance"], [39, 4, 1, "", "synthetic_multiclass_train_test_data"], [39, 4, 1, "", "synthetic_train_test_data"], [39, 4, 1, "", "test_bluecast_with_custom_model"], [39, 4, 1, "", "test_blueprint_xgboost"], [39, 4, 1, "", "test_cat_encoding_via_ml_algorithm_and_ml_model_warning"], [39, 4, 1, "", "test_class_problem_mismatch_warnings"], [39, 4, 1, "", "test_enable_feature_selection_warning"], [39, 4, 1, "", "test_hypertuning_cv_folds_warning"], [39, 4, 1, "", "test_min_features_to_select_warning"], [39, 4, 1, "", "test_missing_feature_selector_warning"], [39, 4, 1, "", "test_missing_xgboost_tune_params_config_warning"], [39, 4, 1, "", "test_precise_cv_tuning_warnings"], [39, 4, 1, "", "test_shap_values_and_ml_algorithm_warning"]], "bluecast.tests.test_cast.CustomModel": [[39, 2, 1, "", "fit"], [39, 2, 1, "", "predict"]], "bluecast.tests.test_cast_cv": [[40, 1, 1, "", "CustomLRModel"], [40, 4, 1, "", "synthetic_train_test_data"], [40, 4, 1, "", "test_bluecast_cv_fit_eval_with_custom_model"], [40, 4, 1, "", "test_blueprint_cv_xgboost"]], "bluecast.tests.test_cast_cv.CustomLRModel": [[40, 2, 1, "", "fit"], [40, 2, 1, "", "predict"]], "bluecast.tests.test_cast_cv_multiclass": [[41, 1, 1, "", "CustomLRModel"], [41, 4, 1, "", "test_bluecast_cv_fit_eval_multiclass_with_custom_model"]], "bluecast.tests.test_cast_cv_multiclass.CustomLRModel": [[41, 2, 1, "", "fit"], [41, 2, 1, "", "predict"]], "bluecast.tests.test_cast_cv_regression": [[42, 1, 1, "", "CustomLRModel"], [42, 1, 1, "", "CustomModel"], [42, 1, 1, "", "MyCustomLastMilePreprocessing"], [42, 4, 1, "", "synthetic_train_test_data"], [42, 4, 1, "", "test_bluecast_cv_fit_eval_with_custom_model"], [42, 4, 1, "", "test_bluecast_cv_with_custom_objects"], [42, 4, 1, "", "test_blueprint_cv_xgboost"]], "bluecast.tests.test_cast_cv_regression.CustomLRModel": [[42, 2, 1, "", "fit"], [42, 2, 1, "", "predict"]], "bluecast.tests.test_cast_cv_regression.CustomModel": [[42, 2, 1, "", "fit"], [42, 2, 1, "", "predict"]], "bluecast.tests.test_cast_cv_regression.MyCustomLastMilePreprocessing": [[42, 2, 1, "", "custom_function"], [42, 2, 1, "", "fit_transform"], [42, 2, 1, "", "transform"]], "bluecast.tests.test_cast_regression": [[43, 1, 1, "", "CustomModel"], [43, 4, 1, "", "synthetic_train_test_data"], [43, 4, 1, "", "test_bluecast_with_custom_model"], [43, 4, 1, "", "test_blueprint_xgboost"]], "bluecast.tests.test_cast_regression.CustomModel": [[43, 2, 1, "", "fit"], [43, 2, 1, "", "predict"]], "bluecast.tests.test_check_gpu_support": [[44, 4, 1, "", "test_check_gpu_support"]], "bluecast.tests.test_custom_processing_base_class": [[45, 4, 1, "", "custom_preprocessing"], [45, 4, 1, "", "test_fit_transform_returns_tuple"], [45, 4, 1, "", "test_transform_returns_optional_target"], [45, 4, 1, "", "test_transform_returns_optional_target_prediction_mode"], [45, 4, 1, "", "test_transform_returns_tuple"]], "bluecast.tests.test_data_leakage_checks": [[46, 4, 1, "", "create_to_target_correlated_categorical_features"], [46, 4, 1, "", "create_to_target_correlated_features"], [46, 4, 1, "", "test_detect_categorical_leakage"], [46, 4, 1, "", "test_detect_leakage_via_correlation"]], "bluecast.tests.test_data_monitoring": [[47, 4, 1, "", "mock_logger"], [47, 4, 1, "", "test_kolmogorov_smirnov_test"], [47, 4, 1, "", "test_population_stability_index"], [47, 4, 1, "", "test_qqplot_two_samples"]], "bluecast.tests.test_datetime_features": [[48, 4, 1, "", "sample_dataframe"], [48, 4, 1, "", "test_date_converter"]], "bluecast.tests.test_encode_target_labels": [[49, 4, 1, "", "label_encoder"], [49, 4, 1, "", "sample_data"], [49, 4, 1, "", "test_fit_label_encoder"], [49, 4, 1, "", "test_fit_transform_target_labels"], [49, 4, 1, "", "test_label_encoder_reverse_transform"], [49, 4, 1, "", "test_label_encoder_transform"], [49, 4, 1, "", "test_transform_target_labels"], [49, 4, 1, "", "trained_label_encoder"]], "bluecast.tests.test_experiment_tracker": [[50, 4, 1, "", "experiment_tracker"], [50, 4, 1, "", "test_add_results"], [50, 4, 1, "", "test_get_best_score_empty"], [50, 4, 1, "", "test_get_best_score_higher_is_better"], [50, 4, 1, "", "test_get_best_score_lower_is_better"], [50, 4, 1, "", "test_retrieve_results_as_df"]], "bluecast.tests.test_feature_type_detector": [[51, 4, 1, "", "test_feature_type_detector"]], "bluecast.tests.test_fine_tune": [[52, 4, 1, "", "test_fine_tune_runs_without_errors"], [52, 4, 1, "", "test_fine_tune_runs_without_errors_using_cv"], [52, 4, 1, "", "xgboost_model"]], "bluecast.tests.test_load_for_production": [[53, 4, 1, "", "test_load_for_production"], [53, 4, 1, "", "test_load_for_production_with_default_file_type"]], "bluecast.tests.test_nulls_and_infs": [[54, 4, 1, "", "test_fill_infinite_values"], [54, 4, 1, "", "test_fill_nulls"]], "bluecast.tests.test_save_to_production": [[55, 1, 1, "", "DummyClass"], [55, 4, 1, "", "test_save_to_production"]], "bluecast.tests.test_schema_checks": [[56, 4, 1, "", "test_transform_extra_columns"], [56, 4, 1, "", "test_transform_missing_columns"], [56, 4, 1, "", "test_transform_same_schema"]], "bluecast.tests.test_shap_explanations": [[57, 4, 1, "", "mock_model"], [57, 4, 1, "", "test_data"], [57, 4, 1, "", "test_eval_classifier_except"], [57, 4, 1, "", "test_shap_explanations"]], "bluecast.tests.test_target_encoding_binary": [[58, 4, 1, "", "sample_data"], [58, 4, 1, "", "test_transform_target_encode_binary_class"]], "bluecast.tests.test_target_encoding_multiclass": [[59, 4, 1, "", "test_multi_class_target_encoder"]], "bluecast.tests.test_train_test_split": [[60, 4, 1, "", "test_train_test_split_cross"], [60, 4, 1, "", "test_train_test_split_time"]], "conf": [[61, 5, 1, "", "author"], [61, 5, 1, "", "autoapi_dirs"], [61, 5, 1, "", "autoapi_type"], [61, 5, 1, "", "copyright"], [61, 5, 1, "", "exclude_patterns"], [61, 5, 1, "", "extensions"], [61, 5, 1, "", "html_static_path"], [61, 5, 1, "", "html_theme"], [61, 5, 1, "", "project"], [61, 5, 1, "", "release"], [61, 5, 1, "", "templates_path"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"bluecast": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63], "blueprint": [0, 1, 2, 3, 4], "cast": 0, "modul": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 15, 16, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "content": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 15, 16, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "class": [0, 1, 2, 3, 5, 7, 15, 19, 21, 22, 23, 25, 27, 28, 29, 32, 33, 39, 40, 41, 42, 43, 55], "cast_cv": 1, "cast_cv_regress": 2, "cast_regress": 3, "submodul": [4, 6, 10, 12, 14, 17, 20, 24, 30, 35, 37], "config": [5, 6, 7], "base_class": [5, 19], "training_config": 7, "eda": [8, 9, 10], "analys": 8, "function": [8, 9, 11, 13, 16, 26, 31, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "data_leakage_check": 9, "evalu": [11, 12, 13], "eval_metr": 11, "shap_valu": 13, "experiment": [14, 15], "track": 15, "general_util": [16, 17], "subpackag": [18, 35], "ml_model": [19, 20, 21, 22], "attribut": 19, "xgboost": 21, "xgboost_regress": 22, "monitor": [23, 24], "data_monitor": 23, "preprocess": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 63], "custom": [25, 63], "datetime_featur": 26, "encode_target_label": 27, "feature_select": 28, "feature_typ": 29, "nulls_and_inf": 31, "schema_check": 32, "target_encod": 33, "train_test_split": 34, "test": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "make_data": [36, 37], "create_data": 36, "test_analys": 38, "test_cast": 39, "test_cast_cv": 40, "test_cast_cv_multiclass": 41, "test_cast_cv_regress": 42, "test_cast_regress": 43, "test_check_gpu_support": 44, "test_custom_processing_base_class": 45, "test_data_leakage_check": 46, "test_data_monitor": 47, "test_datetime_featur": 48, "test_encode_target_label": 49, "test_experiment_track": 50, "test_feature_type_detector": 51, "test_fine_tun": 52, "test_load_for_product": 53, "test_nulls_and_inf": 54, "test_save_to_product": 55, "test_schema_check": 56, "test_shap_explan": 57, "test_target_encoding_binari": 58, "test_target_encoding_multiclass": 59, "test_train_test_split": 60, "conf": 61, "api": [62, 63], "refer": 62, "instal": 63, "end": 63, "user": 63, "develop": 63, "gener": 63, "usag": 63, "basic": 63, "advanc": 63, "explanatori": 63, "analysi": 63, "leakag": 63, "detect": 63, "enabl": 63, "cross": 63, "valid": 63, "even": 63, "more": 63, "overfit": 63, "robust": 63, "gain": 63, "extra": 63, "perform": 63, "us": 63, "multi": 63, "model": 63, "blend": 63, "pipelin": 63, "categor": 63, "encod": 63, "train": 63, "configur": 63, "featur": 63, "select": 63, "ml": 63, "inbuilt": 63, "experienttrack": 63, "mlflow": 63, "via": 63, "data": 63, "drift": 63, "checker": 63, "conveni": 63, "code": 63, "qualiti": 63, "document": 63, "kaggl": 63, "competit": 63, "result": 63, "exampl": 63, "notebook": 63, "how": 63, "contribut": 63, "meta": 63}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"BlueCast": [[63, "bluecast"]], "Installation": [[63, "installation"]], "Installation for end users": [[63, "installation-for-end-users"]], "Installation for developers": [[63, "installation-for-developers"]], "General usage": [[63, "general-usage"]], "Basic usage": [[63, "basic-usage"]], "Advanced usage": [[63, "advanced-usage"]], "Explanatory analysis": [[63, "explanatory-analysis"]], "Leakage detection": [[63, "leakage-detection"]], "Enable cross-validation": [[63, "enable-cross-validation"]], "Enable even more overfitting-robust cross-validation": [[63, "enable-even-more-overfitting-robust-cross-validation"]], "Gaining extra performance": [[63, "gaining-extra-performance"]], "Use multi-model blended pipeline": [[63, "use-multi-model-blended-pipeline"]], "Categorical encoding": [[63, "categorical-encoding"]], "Custom training configuration": [[63, "custom-training-configuration"]], "Custom preprocessing": [[63, "custom-preprocessing"]], "Custom feature selection": [[63, "custom-feature-selection"]], "Custom ML model": [[63, "custom-ml-model"]], "Using the inbuilt ExperientTracker": [[63, "using-the-inbuilt-experienttracker"]], "Use Mlflow via custom ExperientTracker API": [[63, "use-mlflow-via-custom-experienttracker-api"]], "Custom data drift checker": [[63, "custom-data-drift-checker"]], "Convenience features": [[63, "convenience-features"]], "Code quality": [[63, "code-quality"]], "Documentation": [[63, "documentation"]], "Kaggle competition results and example notebooks": [[63, "kaggle-competition-results-and-example-notebooks"]], "How to contribute": [[63, "how-to-contribute"]], "Meta": [[63, "meta"]], "bluecast.blueprints.cast": [[0, "module-bluecast.blueprints.cast"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [13, "module-contents"], [15, "module-contents"], [16, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [36, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"]], "Classes": [[0, "classes"], [1, "classes"], [2, "classes"], [3, "classes"], [5, "classes"], [7, "classes"], [15, "classes"], [19, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [25, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [32, "classes"], [33, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [55, "classes"]], "bluecast.blueprints.cast_cv": [[1, "module-bluecast.blueprints.cast_cv"]], "bluecast.blueprints.cast_cv_regression": [[2, "module-bluecast.blueprints.cast_cv_regression"]], "bluecast.blueprints.cast_regression": [[3, "module-bluecast.blueprints.cast_regression"]], "bluecast.blueprints": [[4, "module-bluecast.blueprints"]], "Submodules": [[4, "submodules"], [6, "submodules"], [10, "submodules"], [12, "submodules"], [14, "submodules"], [17, "submodules"], [20, "submodules"], [24, "submodules"], [30, "submodules"], [35, "submodules"], [37, "submodules"]], "bluecast.config.base_classes": [[5, "module-bluecast.config.base_classes"]], "bluecast.config": [[6, "module-bluecast.config"]], "bluecast.config.training_config": [[7, "module-bluecast.config.training_config"]], "bluecast.eda.analyse": [[8, "module-bluecast.eda.analyse"]], "Functions": [[8, "functions"], [9, "functions"], [11, "functions"], [13, "functions"], [16, "functions"], [26, "functions"], [31, "functions"], [34, "functions"], [36, "functions"], [38, "functions"], [39, "functions"], [40, "functions"], [41, "functions"], [42, "functions"], [43, "functions"], [44, "functions"], [45, "functions"], [46, "functions"], [47, "functions"], [48, "functions"], [49, "functions"], [50, "functions"], [51, "functions"], [52, "functions"], [53, "functions"], [54, "functions"], [55, "functions"], [56, "functions"], [57, "functions"], [58, "functions"], [59, "functions"], [60, "functions"]], "bluecast.eda.data_leakage_checks": [[9, "module-bluecast.eda.data_leakage_checks"]], "bluecast.eda": [[10, "module-bluecast.eda"]], "bluecast.evaluation.eval_metrics": [[11, "module-bluecast.evaluation.eval_metrics"]], "bluecast.evaluation": [[12, "module-bluecast.evaluation"]], "bluecast.evaluation.shap_values": [[13, "module-bluecast.evaluation.shap_values"]], "bluecast.experimentation": [[14, "module-bluecast.experimentation"]], "bluecast.experimentation.tracking": [[15, "module-bluecast.experimentation.tracking"]], "bluecast.general_utils.general_utils": [[16, "module-bluecast.general_utils.general_utils"]], "bluecast.general_utils": [[17, "module-bluecast.general_utils"]], "bluecast": [[18, "module-bluecast"]], "Subpackages": [[18, "subpackages"], [35, "subpackages"]], "bluecast.ml_modelling.base_classes": [[19, "module-bluecast.ml_modelling.base_classes"]], "Attributes": [[19, "attributes"]], "bluecast.ml_modelling": [[20, "module-bluecast.ml_modelling"]], "bluecast.ml_modelling.xgboost": [[21, "module-bluecast.ml_modelling.xgboost"]], "bluecast.ml_modelling.xgboost_regression": [[22, "module-bluecast.ml_modelling.xgboost_regression"]], "bluecast.monitoring.data_monitoring": [[23, "module-bluecast.monitoring.data_monitoring"]], "bluecast.monitoring": [[24, "module-bluecast.monitoring"]], "bluecast.preprocessing.custom": [[25, "module-bluecast.preprocessing.custom"]], "bluecast.preprocessing.datetime_features": [[26, "module-bluecast.preprocessing.datetime_features"]], "bluecast.preprocessing.encode_target_labels": [[27, "module-bluecast.preprocessing.encode_target_labels"]], "bluecast.preprocessing.feature_selection": [[28, "module-bluecast.preprocessing.feature_selection"]], "bluecast.preprocessing.feature_types": [[29, "module-bluecast.preprocessing.feature_types"]], "bluecast.preprocessing": [[30, "module-bluecast.preprocessing"]], "bluecast.preprocessing.nulls_and_infs": [[31, "module-bluecast.preprocessing.nulls_and_infs"]], "bluecast.preprocessing.schema_checks": [[32, "module-bluecast.preprocessing.schema_checks"]], "bluecast.preprocessing.target_encoding": [[33, "module-bluecast.preprocessing.target_encoding"]], "bluecast.preprocessing.train_test_split": [[34, "module-bluecast.preprocessing.train_test_split"]], "bluecast.tests": [[35, "module-bluecast.tests"]], "bluecast.tests.make_data.create_data": [[36, "module-bluecast.tests.make_data.create_data"]], "bluecast.tests.make_data": [[37, "module-bluecast.tests.make_data"]], "bluecast.tests.test_analyse": [[38, "module-bluecast.tests.test_analyse"]], "bluecast.tests.test_cast": [[39, "module-bluecast.tests.test_cast"]], "bluecast.tests.test_cast_cv": [[40, "module-bluecast.tests.test_cast_cv"]], "bluecast.tests.test_cast_cv_multiclass": [[41, "module-bluecast.tests.test_cast_cv_multiclass"]], "bluecast.tests.test_cast_cv_regression": [[42, "module-bluecast.tests.test_cast_cv_regression"]], "bluecast.tests.test_cast_regression": [[43, "module-bluecast.tests.test_cast_regression"]], "bluecast.tests.test_check_gpu_support": [[44, "module-bluecast.tests.test_check_gpu_support"]], "bluecast.tests.test_custom_processing_base_class": [[45, "module-bluecast.tests.test_custom_processing_base_class"]], "bluecast.tests.test_data_leakage_checks": [[46, "module-bluecast.tests.test_data_leakage_checks"]], "bluecast.tests.test_data_monitoring": [[47, "module-bluecast.tests.test_data_monitoring"]], "bluecast.tests.test_datetime_features": [[48, "module-bluecast.tests.test_datetime_features"]], "bluecast.tests.test_encode_target_labels": [[49, "module-bluecast.tests.test_encode_target_labels"]], "bluecast.tests.test_experiment_tracker": [[50, "module-bluecast.tests.test_experiment_tracker"]], "bluecast.tests.test_feature_type_detector": [[51, "module-bluecast.tests.test_feature_type_detector"]], "bluecast.tests.test_fine_tune": [[52, "module-bluecast.tests.test_fine_tune"]], "bluecast.tests.test_load_for_production": [[53, "module-bluecast.tests.test_load_for_production"]], "bluecast.tests.test_nulls_and_infs": [[54, "module-bluecast.tests.test_nulls_and_infs"]], "bluecast.tests.test_save_to_production": [[55, "module-bluecast.tests.test_save_to_production"]], "bluecast.tests.test_schema_checks": [[56, "module-bluecast.tests.test_schema_checks"]], "bluecast.tests.test_shap_explanations": [[57, "module-bluecast.tests.test_shap_explanations"]], "bluecast.tests.test_target_encoding_binary": [[58, "module-bluecast.tests.test_target_encoding_binary"]], "bluecast.tests.test_target_encoding_multiclass": [[59, "module-bluecast.tests.test_target_encoding_multiclass"]], "bluecast.tests.test_train_test_split": [[60, "module-bluecast.tests.test_train_test_split"]], "conf": [[61, "module-conf"]], "API Reference": [[62, "api-reference"]]}, "indexentries": {"bluecast (class in bluecast.blueprints.cast)": [[0, "bluecast.blueprints.cast.BlueCast"]], "bluecast.blueprints.cast": [[0, "module-bluecast.blueprints.cast"]], "fit() (bluecast.blueprints.cast.bluecast method)": [[0, "bluecast.blueprints.cast.BlueCast.fit"]], "fit_eval() (bluecast.blueprints.cast.bluecast method)": [[0, "bluecast.blueprints.cast.BlueCast.fit_eval"]], "initial_checks() (bluecast.blueprints.cast.bluecast method)": [[0, "bluecast.blueprints.cast.BlueCast.initial_checks"]], "module": [[0, "module-bluecast.blueprints.cast"], [1, "module-bluecast.blueprints.cast_cv"], [2, "module-bluecast.blueprints.cast_cv_regression"], [3, "module-bluecast.blueprints.cast_regression"], [4, "module-bluecast.blueprints"], [5, "module-bluecast.config.base_classes"], [6, "module-bluecast.config"], [7, "module-bluecast.config.training_config"], [8, "module-bluecast.eda.analyse"], [9, "module-bluecast.eda.data_leakage_checks"], [10, "module-bluecast.eda"], [11, "module-bluecast.evaluation.eval_metrics"], [12, "module-bluecast.evaluation"], [13, "module-bluecast.evaluation.shap_values"], [14, "module-bluecast.experimentation"], [15, "module-bluecast.experimentation.tracking"], [16, "module-bluecast.general_utils.general_utils"], [17, "module-bluecast.general_utils"], [18, "module-bluecast"], [19, "module-bluecast.ml_modelling.base_classes"], [20, "module-bluecast.ml_modelling"], [21, "module-bluecast.ml_modelling.xgboost"], [22, "module-bluecast.ml_modelling.xgboost_regression"], [23, "module-bluecast.monitoring.data_monitoring"], [24, "module-bluecast.monitoring"], [25, "module-bluecast.preprocessing.custom"], [26, "module-bluecast.preprocessing.datetime_features"], [27, "module-bluecast.preprocessing.encode_target_labels"], [28, "module-bluecast.preprocessing.feature_selection"], [29, "module-bluecast.preprocessing.feature_types"], [30, "module-bluecast.preprocessing"], [31, "module-bluecast.preprocessing.nulls_and_infs"], [32, "module-bluecast.preprocessing.schema_checks"], [33, "module-bluecast.preprocessing.target_encoding"], [34, "module-bluecast.preprocessing.train_test_split"], [35, "module-bluecast.tests"], [36, "module-bluecast.tests.make_data.create_data"], [37, "module-bluecast.tests.make_data"], [38, "module-bluecast.tests.test_analyse"], [39, "module-bluecast.tests.test_cast"], [40, "module-bluecast.tests.test_cast_cv"], [41, "module-bluecast.tests.test_cast_cv_multiclass"], [42, "module-bluecast.tests.test_cast_cv_regression"], [43, "module-bluecast.tests.test_cast_regression"], [44, "module-bluecast.tests.test_check_gpu_support"], [45, "module-bluecast.tests.test_custom_processing_base_class"], [46, "module-bluecast.tests.test_data_leakage_checks"], [47, "module-bluecast.tests.test_data_monitoring"], [48, "module-bluecast.tests.test_datetime_features"], [49, "module-bluecast.tests.test_encode_target_labels"], [50, "module-bluecast.tests.test_experiment_tracker"], [51, "module-bluecast.tests.test_feature_type_detector"], [52, "module-bluecast.tests.test_fine_tune"], [53, "module-bluecast.tests.test_load_for_production"], [54, "module-bluecast.tests.test_nulls_and_infs"], [55, "module-bluecast.tests.test_save_to_production"], [56, "module-bluecast.tests.test_schema_checks"], [57, "module-bluecast.tests.test_shap_explanations"], [58, "module-bluecast.tests.test_target_encoding_binary"], [59, "module-bluecast.tests.test_target_encoding_multiclass"], [60, "module-bluecast.tests.test_train_test_split"], [61, "module-conf"]], "predict() (bluecast.blueprints.cast.bluecast method)": [[0, "bluecast.blueprints.cast.BlueCast.predict"]], "transform_new_data() (bluecast.blueprints.cast.bluecast method)": [[0, "bluecast.blueprints.cast.BlueCast.transform_new_data"]], "bluecastcv (class in bluecast.blueprints.cast_cv)": [[1, "bluecast.blueprints.cast_cv.BlueCastCV"]], "bluecast.blueprints.cast_cv": [[1, "module-bluecast.blueprints.cast_cv"]], "fit() (bluecast.blueprints.cast_cv.bluecastcv method)": [[1, "bluecast.blueprints.cast_cv.BlueCastCV.fit"]], "fit_eval() (bluecast.blueprints.cast_cv.bluecastcv method)": [[1, "bluecast.blueprints.cast_cv.BlueCastCV.fit_eval"]], "predict() (bluecast.blueprints.cast_cv.bluecastcv method)": [[1, "bluecast.blueprints.cast_cv.BlueCastCV.predict"]], "prepare_data() (bluecast.blueprints.cast_cv.bluecastcv method)": [[1, "bluecast.blueprints.cast_cv.BlueCastCV.prepare_data"]], "show_oof_scores() (bluecast.blueprints.cast_cv.bluecastcv method)": [[1, "bluecast.blueprints.cast_cv.BlueCastCV.show_oof_scores"]], "bluecastcvregression (class in bluecast.blueprints.cast_cv_regression)": [[2, "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression"]], "bluecast.blueprints.cast_cv_regression": [[2, "module-bluecast.blueprints.cast_cv_regression"]], "fit() (bluecast.blueprints.cast_cv_regression.bluecastcvregression method)": [[2, "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression.fit"]], "fit_eval() (bluecast.blueprints.cast_cv_regression.bluecastcvregression method)": [[2, "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression.fit_eval"]], "predict() (bluecast.blueprints.cast_cv_regression.bluecastcvregression method)": [[2, "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression.predict"]], "prepare_data() (bluecast.blueprints.cast_cv_regression.bluecastcvregression method)": [[2, "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression.prepare_data"]], "show_oof_scores() (bluecast.blueprints.cast_cv_regression.bluecastcvregression method)": [[2, "bluecast.blueprints.cast_cv_regression.BlueCastCVRegression.show_oof_scores"]], "bluecastregression (class in bluecast.blueprints.cast_regression)": [[3, "bluecast.blueprints.cast_regression.BlueCastRegression"]], "bluecast.blueprints.cast_regression": [[3, "module-bluecast.blueprints.cast_regression"]], "fit() (bluecast.blueprints.cast_regression.bluecastregression method)": [[3, "bluecast.blueprints.cast_regression.BlueCastRegression.fit"]], "fit_eval() (bluecast.blueprints.cast_regression.bluecastregression method)": [[3, "bluecast.blueprints.cast_regression.BlueCastRegression.fit_eval"]], "initial_checks() (bluecast.blueprints.cast_regression.bluecastregression method)": [[3, "bluecast.blueprints.cast_regression.BlueCastRegression.initial_checks"]], "predict() (bluecast.blueprints.cast_regression.bluecastregression method)": [[3, "bluecast.blueprints.cast_regression.BlueCastRegression.predict"]], "transform_new_data() (bluecast.blueprints.cast_regression.bluecastregression method)": [[3, "bluecast.blueprints.cast_regression.BlueCastRegression.transform_new_data"]], "bluecast.blueprints": [[4, "module-bluecast.blueprints"]], "baseclassexperimenttracker (class in bluecast.config.base_classes)": [[5, "bluecast.config.base_classes.BaseClassExperimentTracker"]], "add_results() (bluecast.config.base_classes.baseclassexperimenttracker method)": [[5, "bluecast.config.base_classes.BaseClassExperimentTracker.add_results"]], "bluecast.config.base_classes": [[5, "module-bluecast.config.base_classes"]], "retrieve_results_as_df() (bluecast.config.base_classes.baseclassexperimenttracker method)": [[5, "bluecast.config.base_classes.BaseClassExperimentTracker.retrieve_results_as_df"]], "bluecast.config": [[6, "module-bluecast.config"]], "config (class in bluecast.config.training_config)": [[7, "bluecast.config.training_config.Config"]], "trainingconfig (class in bluecast.config.training_config)": [[7, "bluecast.config.training_config.TrainingConfig"]], "xgboostfinalparamconfig (class in bluecast.config.training_config)": [[7, "bluecast.config.training_config.XgboostFinalParamConfig"]], "xgboosttuneparamsconfig (class in bluecast.config.training_config)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig"]], "xgboosttuneparamsregressionconfig (class in bluecast.config.training_config)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig"]], "alpha_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.alpha_max"]], "alpha_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.alpha_max"]], "alpha_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.alpha_min"]], "alpha_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.alpha_min"]], "arbitrary_types_allowed (bluecast.config.training_config.config attribute)": [[7, "bluecast.config.training_config.Config.arbitrary_types_allowed"]], "autotune_model (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.autotune_model"]], "bluecast.config.training_config": [[7, "module-bluecast.config.training_config"]], "booster (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.booster"]], "booster (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.booster"]], "calculate_shap_values (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.calculate_shap_values"]], "cat_encoding_via_ml_algorithm (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.cat_encoding_via_ml_algorithm"]], "classification_threshold (bluecast.config.training_config.xgboostfinalparamconfig attribute)": [[7, "bluecast.config.training_config.XgboostFinalParamConfig.classification_threshold"]], "col_sample_by_level_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.col_sample_by_level_max"]], "col_sample_by_level_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.col_sample_by_level_max"]], "col_sample_by_level_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.col_sample_by_level_min"]], "col_sample_by_level_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.col_sample_by_level_min"]], "col_sample_by_tree_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.col_sample_by_tree_max"]], "col_sample_by_tree_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.col_sample_by_tree_max"]], "col_sample_by_tree_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.col_sample_by_tree_min"]], "col_sample_by_tree_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.col_sample_by_tree_min"]], "early_stopping_rounds (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.early_stopping_rounds"]], "enable_feature_selection (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.enable_feature_selection"]], "enable_grid_search_fine_tuning (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.enable_grid_search_fine_tuning"]], "eta_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.eta_max"]], "eta_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.eta_max"]], "eta_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.eta_min"]], "eta_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.eta_min"]], "experiment_name (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.experiment_name"]], "gamma_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.gamma_max"]], "gamma_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.gamma_max"]], "gamma_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.gamma_min"]], "gamma_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.gamma_min"]], "global_random_state (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.global_random_state"]], "gridsearch_nb_parameters_per_grid (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.gridsearch_nb_parameters_per_grid"]], "gridsearch_tuning_max_runtime_secs (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.gridsearch_tuning_max_runtime_secs"]], "hyperparameter_tuning_max_runtime_secs (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.hyperparameter_tuning_max_runtime_secs"]], "hyperparameter_tuning_rounds (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.hyperparameter_tuning_rounds"]], "hypertuning_cv_folds (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.hypertuning_cv_folds"]], "increase_random_state_in_bluecast_cv_by (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.increase_random_state_in_bluecast_cv_by"]], "lambda_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.lambda_max"]], "lambda_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.lambda_max"]], "lambda_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.lambda_min"]], "lambda_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.lambda_min"]], "max_depth_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.max_depth_max"]], "max_depth_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.max_depth_max"]], "max_depth_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.max_depth_min"]], "max_depth_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.max_depth_min"]], "max_leaves_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.max_leaves_max"]], "max_leaves_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.max_leaves_max"]], "max_leaves_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.max_leaves_min"]], "max_leaves_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.max_leaves_min"]], "min_features_to_select (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.min_features_to_select"]], "model_eval_metric (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.model_eval_metric"]], "model_eval_metric (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.model_eval_metric"]], "model_objective (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.model_objective"]], "model_objective (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.model_objective"]], "model_verbosity (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.model_verbosity"]], "model_verbosity (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.model_verbosity"]], "model_verbosity_during_final_training (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.model_verbosity_during_final_training"]], "model_verbosity_during_final_training (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.model_verbosity_during_final_training"]], "optuna_sampler_n_startup_trials (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.optuna_sampler_n_startup_trials"]], "params (bluecast.config.training_config.xgboostfinalparamconfig attribute)": [[7, "bluecast.config.training_config.XgboostFinalParamConfig.params"]], "precise_cv_tuning (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.precise_cv_tuning"]], "sample_weight (bluecast.config.training_config.xgboostfinalparamconfig attribute)": [[7, "bluecast.config.training_config.XgboostFinalParamConfig.sample_weight"]], "show_detailed_tuning_logs (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.show_detailed_tuning_logs"]], "shuffle_during_training (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.shuffle_during_training"]], "steps_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.steps_max"]], "steps_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.steps_max"]], "steps_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.steps_min"]], "steps_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.steps_min"]], "sub_sample_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.sub_sample_max"]], "sub_sample_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.sub_sample_max"]], "sub_sample_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.sub_sample_min"]], "sub_sample_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.sub_sample_min"]], "subsample_max (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.subsample_max"]], "subsample_max (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.subsample_max"]], "subsample_min (bluecast.config.training_config.xgboosttuneparamsconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsConfig.subsample_min"]], "subsample_min (bluecast.config.training_config.xgboosttuneparamsregressionconfig attribute)": [[7, "bluecast.config.training_config.XgboostTuneParamsRegressionConfig.subsample_min"]], "train_size (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.train_size"]], "train_split_stratify (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.train_split_stratify"]], "use_full_data_for_final_model (bluecast.config.training_config.trainingconfig attribute)": [[7, "bluecast.config.training_config.TrainingConfig.use_full_data_for_final_model"]], "bi_variate_plots() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.bi_variate_plots"]], "bluecast.eda.analyse": [[8, "module-bluecast.eda.analyse"]], "check_unique_values() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.check_unique_values"]], "conditional_entropy() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.conditional_entropy"]], "correlation_heatmap() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.correlation_heatmap"]], "correlation_to_target() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.correlation_to_target"]], "mutual_info_to_target() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.mutual_info_to_target"]], "plot_count_pair() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_count_pair"]], "plot_count_pairs() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_count_pairs"]], "plot_null_percentage() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_null_percentage"]], "plot_pca() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_pca"]], "plot_pca_cumulative_variance() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_pca_cumulative_variance"]], "plot_pie_chart() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_pie_chart"]], "plot_theil_u_heatmap() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_theil_u_heatmap"]], "plot_tsne() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.plot_tsne"]], "theil_u() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.theil_u"]], "univariate_plots() (in module bluecast.eda.analyse)": [[8, "bluecast.eda.analyse.univariate_plots"]], "bluecast.eda.data_leakage_checks": [[9, "module-bluecast.eda.data_leakage_checks"]], "detect_categorical_leakage() (in module bluecast.eda.data_leakage_checks)": [[9, "bluecast.eda.data_leakage_checks.detect_categorical_leakage"]], "detect_leakage_via_correlation() (in module bluecast.eda.data_leakage_checks)": [[9, "bluecast.eda.data_leakage_checks.detect_leakage_via_correlation"]], "bluecast.eda": [[10, "module-bluecast.eda"]], "balanced_log_loss() (in module bluecast.evaluation.eval_metrics)": [[11, "bluecast.evaluation.eval_metrics.balanced_log_loss"]], "bluecast.evaluation.eval_metrics": [[11, "module-bluecast.evaluation.eval_metrics"]], "eval_classifier() (in module bluecast.evaluation.eval_metrics)": [[11, "bluecast.evaluation.eval_metrics.eval_classifier"]], "eval_regressor() (in module bluecast.evaluation.eval_metrics)": [[11, "bluecast.evaluation.eval_metrics.eval_regressor"]], "plot_lift_chart() (in module bluecast.evaluation.eval_metrics)": [[11, "bluecast.evaluation.eval_metrics.plot_lift_chart"]], "plot_probability_distribution() (in module bluecast.evaluation.eval_metrics)": [[11, "bluecast.evaluation.eval_metrics.plot_probability_distribution"]], "plot_roc_auc() (in module bluecast.evaluation.eval_metrics)": [[11, "bluecast.evaluation.eval_metrics.plot_roc_auc"]], "bluecast.evaluation": [[12, "module-bluecast.evaluation"]], "bluecast.evaluation.shap_values": [[13, "module-bluecast.evaluation.shap_values"]], "shap_explanations() (in module bluecast.evaluation.shap_values)": [[13, "bluecast.evaluation.shap_values.shap_explanations"]], "bluecast.experimentation": [[14, "module-bluecast.experimentation"]], "experimenttracker (class in bluecast.experimentation.tracking)": [[15, "bluecast.experimentation.tracking.ExperimentTracker"]], "add_results() (bluecast.experimentation.tracking.experimenttracker method)": [[15, "bluecast.experimentation.tracking.ExperimentTracker.add_results"]], "bluecast.experimentation.tracking": [[15, "module-bluecast.experimentation.tracking"]], "get_best_score() (bluecast.experimentation.tracking.experimenttracker method)": [[15, "bluecast.experimentation.tracking.ExperimentTracker.get_best_score"]], "retrieve_results_as_df() (bluecast.experimentation.tracking.experimenttracker method)": [[15, "bluecast.experimentation.tracking.ExperimentTracker.retrieve_results_as_df"]], "bluecast.general_utils.general_utils": [[16, "module-bluecast.general_utils.general_utils"]], "check_gpu_support() (in module bluecast.general_utils.general_utils)": [[16, "bluecast.general_utils.general_utils.check_gpu_support"]], "load_for_production() (in module bluecast.general_utils.general_utils)": [[16, "bluecast.general_utils.general_utils.load_for_production"]], "logger() (in module bluecast.general_utils.general_utils)": [[16, "bluecast.general_utils.general_utils.logger"]], "save_to_production() (in module bluecast.general_utils.general_utils)": [[16, "bluecast.general_utils.general_utils.save_to_production"]], "bluecast.general_utils": [[17, "module-bluecast.general_utils"]], "bluecast": [[18, "module-bluecast"]], "baseclassmlmodel (class in bluecast.ml_modelling.base_classes)": [[19, "bluecast.ml_modelling.base_classes.BaseClassMlModel"]], "baseclassmlregressionmodel (class in bluecast.ml_modelling.base_classes)": [[19, "bluecast.ml_modelling.base_classes.BaseClassMlRegressionModel"]], "predictedclasses (in module bluecast.ml_modelling.base_classes)": [[19, "bluecast.ml_modelling.base_classes.PredictedClasses"]], "predictedprobas (in module bluecast.ml_modelling.base_classes)": [[19, "bluecast.ml_modelling.base_classes.PredictedProbas"]], "bluecast.ml_modelling.base_classes": [[19, "module-bluecast.ml_modelling.base_classes"]], "fit() (bluecast.ml_modelling.base_classes.baseclassmlmodel method)": [[19, "bluecast.ml_modelling.base_classes.BaseClassMlModel.fit"]], "fit() (bluecast.ml_modelling.base_classes.baseclassmlregressionmodel method)": [[19, "bluecast.ml_modelling.base_classes.BaseClassMlRegressionModel.fit"]], "predict() (bluecast.ml_modelling.base_classes.baseclassmlmodel method)": [[19, "bluecast.ml_modelling.base_classes.BaseClassMlModel.predict"]], "predict() (bluecast.ml_modelling.base_classes.baseclassmlregressionmodel method)": [[19, "bluecast.ml_modelling.base_classes.BaseClassMlRegressionModel.predict"]], "bluecast.ml_modelling": [[20, "module-bluecast.ml_modelling"]], "xgboostmodel (class in bluecast.ml_modelling.xgboost)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel"]], "_fine_tune_precise() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel._fine_tune_precise"]], "autotune() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.autotune"]], "bluecast.ml_modelling.xgboost": [[21, "module-bluecast.ml_modelling.xgboost"]], "calculate_class_weights() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.calculate_class_weights"]], "check_load_confs() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.check_load_confs"]], "constant_loss_degregation_factor() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.constant_loss_degregation_factor"]], "create_d_matrices() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.create_d_matrices"]], "fine_tune() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.fine_tune"]], "fit() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.fit"]], "get_best_score() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.get_best_score"]], "increasing_noise_evaluator() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.increasing_noise_evaluator"]], "predict() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.predict"]], "train_single_fold_model() (bluecast.ml_modelling.xgboost.xgboostmodel method)": [[21, "bluecast.ml_modelling.xgboost.XgboostModel.train_single_fold_model"]], "xgboostmodelregression (class in bluecast.ml_modelling.xgboost_regression)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression"]], "_fine_tune_precise() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression._fine_tune_precise"]], "autotune() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.autotune"]], "bluecast.ml_modelling.xgboost_regression": [[22, "module-bluecast.ml_modelling.xgboost_regression"]], "check_load_confs() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.check_load_confs"]], "constant_loss_degregation_factor() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.constant_loss_degregation_factor"]], "create_d_matrices() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.create_d_matrices"]], "fine_tune() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.fine_tune"]], "fit() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.fit"]], "get_best_score() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.get_best_score"]], "increasing_noise_evaluator() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.increasing_noise_evaluator"]], "predict() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.predict"]], "train_single_fold_model() (bluecast.ml_modelling.xgboost_regression.xgboostmodelregression method)": [[22, "bluecast.ml_modelling.xgboost_regression.XgboostModelRegression.train_single_fold_model"]], "datadrift (class in bluecast.monitoring.data_monitoring)": [[23, "bluecast.monitoring.data_monitoring.DataDrift"]], "_calculate_psi() (bluecast.monitoring.data_monitoring.datadrift method)": [[23, "bluecast.monitoring.data_monitoring.DataDrift._calculate_psi"]], "bluecast.monitoring.data_monitoring": [[23, "module-bluecast.monitoring.data_monitoring"]], "kolmogorov_smirnov_test() (bluecast.monitoring.data_monitoring.datadrift method)": [[23, "bluecast.monitoring.data_monitoring.DataDrift.kolmogorov_smirnov_test"]], "population_stability_index() (bluecast.monitoring.data_monitoring.datadrift method)": [[23, "bluecast.monitoring.data_monitoring.DataDrift.population_stability_index"]], "qqplot_two_samples() (bluecast.monitoring.data_monitoring.datadrift method)": [[23, "bluecast.monitoring.data_monitoring.DataDrift.qqplot_two_samples"]], "bluecast.monitoring": [[24, "module-bluecast.monitoring"]], "custompreprocessing (class in bluecast.preprocessing.custom)": [[25, "bluecast.preprocessing.custom.CustomPreprocessing"]], "bluecast.preprocessing.custom": [[25, "module-bluecast.preprocessing.custom"]], "fit_transform() (bluecast.preprocessing.custom.custompreprocessing method)": [[25, "bluecast.preprocessing.custom.CustomPreprocessing.fit_transform"]], "transform() (bluecast.preprocessing.custom.custompreprocessing method)": [[25, "bluecast.preprocessing.custom.CustomPreprocessing.transform"]], "bluecast.preprocessing.datetime_features": [[26, "module-bluecast.preprocessing.datetime_features"]], "date_converter() (in module bluecast.preprocessing.datetime_features)": [[26, "bluecast.preprocessing.datetime_features.date_converter"]], "targetlabelencoder (class in bluecast.preprocessing.encode_target_labels)": [[27, "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder"]], "bluecast.preprocessing.encode_target_labels": [[27, "module-bluecast.preprocessing.encode_target_labels"]], "fit_label_encoder() (bluecast.preprocessing.encode_target_labels.targetlabelencoder method)": [[27, "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder.fit_label_encoder"]], "fit_transform_target_labels() (bluecast.preprocessing.encode_target_labels.targetlabelencoder method)": [[27, "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder.fit_transform_target_labels"]], "label_encoder_reverse_transform() (bluecast.preprocessing.encode_target_labels.targetlabelencoder method)": [[27, "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder.label_encoder_reverse_transform"]], "label_encoder_transform() (bluecast.preprocessing.encode_target_labels.targetlabelencoder method)": [[27, "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder.label_encoder_transform"]], "transform_target_labels() (bluecast.preprocessing.encode_target_labels.targetlabelencoder method)": [[27, "bluecast.preprocessing.encode_target_labels.TargetLabelEncoder.transform_target_labels"]], "rfecvselector (class in bluecast.preprocessing.feature_selection)": [[28, "bluecast.preprocessing.feature_selection.RFECVSelector"]], "bluecast.preprocessing.feature_selection": [[28, "module-bluecast.preprocessing.feature_selection"]], "fit_transform() (bluecast.preprocessing.feature_selection.rfecvselector method)": [[28, "bluecast.preprocessing.feature_selection.RFECVSelector.fit_transform"]], "transform() (bluecast.preprocessing.feature_selection.rfecvselector method)": [[28, "bluecast.preprocessing.feature_selection.RFECVSelector.transform"]], "featuretypedetector (class in bluecast.preprocessing.feature_types)": [[29, "bluecast.preprocessing.feature_types.FeatureTypeDetector"]], "bluecast.preprocessing.feature_types": [[29, "module-bluecast.preprocessing.feature_types"]], "cast_rest_columns_to_object() (bluecast.preprocessing.feature_types.featuretypedetector method)": [[29, "bluecast.preprocessing.feature_types.FeatureTypeDetector.cast_rest_columns_to_object"]], "fit_transform_feature_types() (bluecast.preprocessing.feature_types.featuretypedetector method)": [[29, "bluecast.preprocessing.feature_types.FeatureTypeDetector.fit_transform_feature_types"]], "identify_bool_columns() (bluecast.preprocessing.feature_types.featuretypedetector method)": [[29, "bluecast.preprocessing.feature_types.FeatureTypeDetector.identify_bool_columns"]], "identify_date_time_columns() (bluecast.preprocessing.feature_types.featuretypedetector method)": [[29, "bluecast.preprocessing.feature_types.FeatureTypeDetector.identify_date_time_columns"]], "identify_num_columns() (bluecast.preprocessing.feature_types.featuretypedetector method)": [[29, "bluecast.preprocessing.feature_types.FeatureTypeDetector.identify_num_columns"]], "transform_feature_types() (bluecast.preprocessing.feature_types.featuretypedetector method)": [[29, "bluecast.preprocessing.feature_types.FeatureTypeDetector.transform_feature_types"]], "bluecast.preprocessing": [[30, "module-bluecast.preprocessing"]], "bluecast.preprocessing.nulls_and_infs": [[31, "module-bluecast.preprocessing.nulls_and_infs"]], "fill_infinite_values() (in module bluecast.preprocessing.nulls_and_infs)": [[31, "bluecast.preprocessing.nulls_and_infs.fill_infinite_values"]], "fill_nulls() (in module bluecast.preprocessing.nulls_and_infs)": [[31, "bluecast.preprocessing.nulls_and_infs.fill_nulls"]], "schemadetector (class in bluecast.preprocessing.schema_checks)": [[32, "bluecast.preprocessing.schema_checks.SchemaDetector"]], "bluecast.preprocessing.schema_checks": [[32, "module-bluecast.preprocessing.schema_checks"]], "fit() (bluecast.preprocessing.schema_checks.schemadetector method)": [[32, "bluecast.preprocessing.schema_checks.SchemaDetector.fit"]], "transform() (bluecast.preprocessing.schema_checks.schemadetector method)": [[32, "bluecast.preprocessing.schema_checks.SchemaDetector.transform"]], "binaryclasstargetencoder (class in bluecast.preprocessing.target_encoding)": [[33, "bluecast.preprocessing.target_encoding.BinaryClassTargetEncoder"]], "multiclasstargetencoder (class in bluecast.preprocessing.target_encoding)": [[33, "bluecast.preprocessing.target_encoding.MultiClassTargetEncoder"]], "bluecast.preprocessing.target_encoding": [[33, "module-bluecast.preprocessing.target_encoding"]], "fit_target_encode_binary_class() (bluecast.preprocessing.target_encoding.binaryclasstargetencoder method)": [[33, "bluecast.preprocessing.target_encoding.BinaryClassTargetEncoder.fit_target_encode_binary_class"]], "fit_target_encode_multiclass() (bluecast.preprocessing.target_encoding.multiclasstargetencoder method)": [[33, "bluecast.preprocessing.target_encoding.MultiClassTargetEncoder.fit_target_encode_multiclass"]], "transform_target_encode_binary_class() (bluecast.preprocessing.target_encoding.binaryclasstargetencoder method)": [[33, "bluecast.preprocessing.target_encoding.BinaryClassTargetEncoder.transform_target_encode_binary_class"]], "transform_target_encode_multiclass() (bluecast.preprocessing.target_encoding.multiclasstargetencoder method)": [[33, "bluecast.preprocessing.target_encoding.MultiClassTargetEncoder.transform_target_encode_multiclass"]], "bluecast.preprocessing.train_test_split": [[34, "module-bluecast.preprocessing.train_test_split"]], "train_test_split() (in module bluecast.preprocessing.train_test_split)": [[34, "bluecast.preprocessing.train_test_split.train_test_split"]], "train_test_split_cross() (in module bluecast.preprocessing.train_test_split)": [[34, "bluecast.preprocessing.train_test_split.train_test_split_cross"]], "train_test_split_time() (in module bluecast.preprocessing.train_test_split)": [[34, "bluecast.preprocessing.train_test_split.train_test_split_time"]], "bluecast.tests": [[35, "module-bluecast.tests"]], "bluecast.tests.make_data.create_data": [[36, "module-bluecast.tests.make_data.create_data"]], "create_synthetic_dataframe() (in module bluecast.tests.make_data.create_data)": [[36, "bluecast.tests.make_data.create_data.create_synthetic_dataframe"]], "create_synthetic_dataframe_regression() (in module bluecast.tests.make_data.create_data)": [[36, "bluecast.tests.make_data.create_data.create_synthetic_dataframe_regression"]], "create_synthetic_multiclass_dataframe() (in module bluecast.tests.make_data.create_data)": [[36, "bluecast.tests.make_data.create_data.create_synthetic_multiclass_dataframe"]], "bluecast.tests.make_data": [[37, "module-bluecast.tests.make_data"]], "bluecast.tests.test_analyse": [[38, "module-bluecast.tests.test_analyse"]], "create_data_with_many_uniques() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.create_data_with_many_uniques"]], "create_data_with_nulls() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.create_data_with_nulls"]], "synthetic_categorical_data() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.synthetic_categorical_data"]], "synthetic_train_test_data() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.synthetic_train_test_data"]], "synthetic_train_test_data_regression() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.synthetic_train_test_data_regression"]], "test_bi_variate_plots() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_bi_variate_plots"]], "test_check_unique_values() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_check_unique_values"]], "test_correlation_heatmap() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_correlation_heatmap"]], "test_correlation_to_target() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_correlation_to_target"]], "test_mutual_info_to_target() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_mutual_info_to_target"]], "test_mutual_info_to_target_multiclass() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_mutual_info_to_target_multiclass"]], "test_mutual_info_to_target_regression() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_mutual_info_to_target_regression"]], "test_pca_plot() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_pca_plot"]], "test_plot_count_pairs() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_plot_count_pairs"]], "test_plot_null_percentage() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_plot_null_percentage"]], "test_plot_pca_cumulative_variance() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_plot_pca_cumulative_variance"]], "test_plot_pie_chart() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_plot_pie_chart"]], "test_plot_theil_u_heatmap() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_plot_theil_u_heatmap"]], "test_plot_tsne() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_plot_tsne"]], "test_univariate_plots() (in module bluecast.tests.test_analyse)": [[38, "bluecast.tests.test_analyse.test_univariate_plots"]], "custommodel (class in bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.CustomModel"]], "bluecast.tests.test_cast": [[39, "module-bluecast.tests.test_cast"]], "bluecast_instance() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.bluecast_instance"]], "fit() (bluecast.tests.test_cast.custommodel method)": [[39, "bluecast.tests.test_cast.CustomModel.fit"]], "predict() (bluecast.tests.test_cast.custommodel method)": [[39, "bluecast.tests.test_cast.CustomModel.predict"]], "synthetic_multiclass_train_test_data() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.synthetic_multiclass_train_test_data"]], "synthetic_train_test_data() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.synthetic_train_test_data"]], "test_bluecast_with_custom_model() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.test_bluecast_with_custom_model"]], "test_blueprint_xgboost() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.test_blueprint_xgboost"]], "test_cat_encoding_via_ml_algorithm_and_ml_model_warning() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.test_cat_encoding_via_ml_algorithm_and_ml_model_warning"]], "test_class_problem_mismatch_warnings() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.test_class_problem_mismatch_warnings"]], "test_enable_feature_selection_warning() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.test_enable_feature_selection_warning"]], "test_hypertuning_cv_folds_warning() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.test_hypertuning_cv_folds_warning"]], "test_min_features_to_select_warning() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.test_min_features_to_select_warning"]], "test_missing_feature_selector_warning() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.test_missing_feature_selector_warning"]], "test_missing_xgboost_tune_params_config_warning() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.test_missing_xgboost_tune_params_config_warning"]], "test_precise_cv_tuning_warnings() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.test_precise_cv_tuning_warnings"]], "test_shap_values_and_ml_algorithm_warning() (in module bluecast.tests.test_cast)": [[39, "bluecast.tests.test_cast.test_shap_values_and_ml_algorithm_warning"]], "customlrmodel (class in bluecast.tests.test_cast_cv)": [[40, "bluecast.tests.test_cast_cv.CustomLRModel"]], "bluecast.tests.test_cast_cv": [[40, "module-bluecast.tests.test_cast_cv"]], "fit() (bluecast.tests.test_cast_cv.customlrmodel method)": [[40, "bluecast.tests.test_cast_cv.CustomLRModel.fit"]], "predict() (bluecast.tests.test_cast_cv.customlrmodel method)": [[40, "bluecast.tests.test_cast_cv.CustomLRModel.predict"]], "synthetic_train_test_data() (in module bluecast.tests.test_cast_cv)": [[40, "bluecast.tests.test_cast_cv.synthetic_train_test_data"]], "test_bluecast_cv_fit_eval_with_custom_model() (in module bluecast.tests.test_cast_cv)": [[40, "bluecast.tests.test_cast_cv.test_bluecast_cv_fit_eval_with_custom_model"]], "test_blueprint_cv_xgboost() (in module bluecast.tests.test_cast_cv)": [[40, "bluecast.tests.test_cast_cv.test_blueprint_cv_xgboost"]], "customlrmodel (class in bluecast.tests.test_cast_cv_multiclass)": [[41, "bluecast.tests.test_cast_cv_multiclass.CustomLRModel"]], "bluecast.tests.test_cast_cv_multiclass": [[41, "module-bluecast.tests.test_cast_cv_multiclass"]], "fit() (bluecast.tests.test_cast_cv_multiclass.customlrmodel method)": [[41, "bluecast.tests.test_cast_cv_multiclass.CustomLRModel.fit"]], "predict() (bluecast.tests.test_cast_cv_multiclass.customlrmodel method)": [[41, "bluecast.tests.test_cast_cv_multiclass.CustomLRModel.predict"]], "test_bluecast_cv_fit_eval_multiclass_with_custom_model() (in module bluecast.tests.test_cast_cv_multiclass)": [[41, "bluecast.tests.test_cast_cv_multiclass.test_bluecast_cv_fit_eval_multiclass_with_custom_model"]], "customlrmodel (class in bluecast.tests.test_cast_cv_regression)": [[42, "bluecast.tests.test_cast_cv_regression.CustomLRModel"]], "custommodel (class in bluecast.tests.test_cast_cv_regression)": [[42, "bluecast.tests.test_cast_cv_regression.CustomModel"]], "mycustomlastmilepreprocessing (class in bluecast.tests.test_cast_cv_regression)": [[42, "bluecast.tests.test_cast_cv_regression.MyCustomLastMilePreprocessing"]], "bluecast.tests.test_cast_cv_regression": [[42, "module-bluecast.tests.test_cast_cv_regression"]], "custom_function() (bluecast.tests.test_cast_cv_regression.mycustomlastmilepreprocessing method)": [[42, "bluecast.tests.test_cast_cv_regression.MyCustomLastMilePreprocessing.custom_function"]], "fit() (bluecast.tests.test_cast_cv_regression.customlrmodel method)": [[42, "bluecast.tests.test_cast_cv_regression.CustomLRModel.fit"]], "fit() (bluecast.tests.test_cast_cv_regression.custommodel method)": [[42, "bluecast.tests.test_cast_cv_regression.CustomModel.fit"]], "fit_transform() (bluecast.tests.test_cast_cv_regression.mycustomlastmilepreprocessing method)": [[42, "bluecast.tests.test_cast_cv_regression.MyCustomLastMilePreprocessing.fit_transform"]], "predict() (bluecast.tests.test_cast_cv_regression.customlrmodel method)": [[42, "bluecast.tests.test_cast_cv_regression.CustomLRModel.predict"]], "predict() (bluecast.tests.test_cast_cv_regression.custommodel method)": [[42, "bluecast.tests.test_cast_cv_regression.CustomModel.predict"]], "synthetic_train_test_data() (in module bluecast.tests.test_cast_cv_regression)": [[42, "bluecast.tests.test_cast_cv_regression.synthetic_train_test_data"]], "test_bluecast_cv_fit_eval_with_custom_model() (in module bluecast.tests.test_cast_cv_regression)": [[42, "bluecast.tests.test_cast_cv_regression.test_bluecast_cv_fit_eval_with_custom_model"]], "test_bluecast_cv_with_custom_objects() (in module bluecast.tests.test_cast_cv_regression)": [[42, "bluecast.tests.test_cast_cv_regression.test_bluecast_cv_with_custom_objects"]], "test_blueprint_cv_xgboost() (in module bluecast.tests.test_cast_cv_regression)": [[42, "bluecast.tests.test_cast_cv_regression.test_blueprint_cv_xgboost"]], "transform() (bluecast.tests.test_cast_cv_regression.mycustomlastmilepreprocessing method)": [[42, "bluecast.tests.test_cast_cv_regression.MyCustomLastMilePreprocessing.transform"]], "custommodel (class in bluecast.tests.test_cast_regression)": [[43, "bluecast.tests.test_cast_regression.CustomModel"]], "bluecast.tests.test_cast_regression": [[43, "module-bluecast.tests.test_cast_regression"]], "fit() (bluecast.tests.test_cast_regression.custommodel method)": [[43, "bluecast.tests.test_cast_regression.CustomModel.fit"]], "predict() (bluecast.tests.test_cast_regression.custommodel method)": [[43, "bluecast.tests.test_cast_regression.CustomModel.predict"]], "synthetic_train_test_data() (in module bluecast.tests.test_cast_regression)": [[43, "bluecast.tests.test_cast_regression.synthetic_train_test_data"]], "test_bluecast_with_custom_model() (in module bluecast.tests.test_cast_regression)": [[43, "bluecast.tests.test_cast_regression.test_bluecast_with_custom_model"]], "test_blueprint_xgboost() (in module bluecast.tests.test_cast_regression)": [[43, "bluecast.tests.test_cast_regression.test_blueprint_xgboost"]], "bluecast.tests.test_check_gpu_support": [[44, "module-bluecast.tests.test_check_gpu_support"]], "test_check_gpu_support() (in module bluecast.tests.test_check_gpu_support)": [[44, "bluecast.tests.test_check_gpu_support.test_check_gpu_support"]], "bluecast.tests.test_custom_processing_base_class": [[45, "module-bluecast.tests.test_custom_processing_base_class"]], "custom_preprocessing() (in module bluecast.tests.test_custom_processing_base_class)": [[45, "bluecast.tests.test_custom_processing_base_class.custom_preprocessing"]], "test_fit_transform_returns_tuple() (in module bluecast.tests.test_custom_processing_base_class)": [[45, "bluecast.tests.test_custom_processing_base_class.test_fit_transform_returns_tuple"]], "test_transform_returns_optional_target() (in module bluecast.tests.test_custom_processing_base_class)": [[45, "bluecast.tests.test_custom_processing_base_class.test_transform_returns_optional_target"]], "test_transform_returns_optional_target_prediction_mode() (in module bluecast.tests.test_custom_processing_base_class)": [[45, "bluecast.tests.test_custom_processing_base_class.test_transform_returns_optional_target_prediction_mode"]], "test_transform_returns_tuple() (in module bluecast.tests.test_custom_processing_base_class)": [[45, "bluecast.tests.test_custom_processing_base_class.test_transform_returns_tuple"]], "bluecast.tests.test_data_leakage_checks": [[46, "module-bluecast.tests.test_data_leakage_checks"]], "create_to_target_correlated_categorical_features() (in module bluecast.tests.test_data_leakage_checks)": [[46, "bluecast.tests.test_data_leakage_checks.create_to_target_correlated_categorical_features"]], "create_to_target_correlated_features() (in module bluecast.tests.test_data_leakage_checks)": [[46, "bluecast.tests.test_data_leakage_checks.create_to_target_correlated_features"]], "test_detect_categorical_leakage() (in module bluecast.tests.test_data_leakage_checks)": [[46, "bluecast.tests.test_data_leakage_checks.test_detect_categorical_leakage"]], "test_detect_leakage_via_correlation() (in module bluecast.tests.test_data_leakage_checks)": [[46, "bluecast.tests.test_data_leakage_checks.test_detect_leakage_via_correlation"]], "bluecast.tests.test_data_monitoring": [[47, "module-bluecast.tests.test_data_monitoring"]], "mock_logger() (in module bluecast.tests.test_data_monitoring)": [[47, "bluecast.tests.test_data_monitoring.mock_logger"]], "test_kolmogorov_smirnov_test() (in module bluecast.tests.test_data_monitoring)": [[47, "bluecast.tests.test_data_monitoring.test_kolmogorov_smirnov_test"]], "test_population_stability_index() (in module bluecast.tests.test_data_monitoring)": [[47, "bluecast.tests.test_data_monitoring.test_population_stability_index"]], "test_qqplot_two_samples() (in module bluecast.tests.test_data_monitoring)": [[47, "bluecast.tests.test_data_monitoring.test_qqplot_two_samples"]], "bluecast.tests.test_datetime_features": [[48, "module-bluecast.tests.test_datetime_features"]], "sample_dataframe() (in module bluecast.tests.test_datetime_features)": [[48, "bluecast.tests.test_datetime_features.sample_dataframe"]], "test_date_converter() (in module bluecast.tests.test_datetime_features)": [[48, "bluecast.tests.test_datetime_features.test_date_converter"]], "bluecast.tests.test_encode_target_labels": [[49, "module-bluecast.tests.test_encode_target_labels"]], "label_encoder() (in module bluecast.tests.test_encode_target_labels)": [[49, "bluecast.tests.test_encode_target_labels.label_encoder"]], "sample_data() (in module bluecast.tests.test_encode_target_labels)": [[49, "bluecast.tests.test_encode_target_labels.sample_data"]], "test_fit_label_encoder() (in module bluecast.tests.test_encode_target_labels)": [[49, "bluecast.tests.test_encode_target_labels.test_fit_label_encoder"]], "test_fit_transform_target_labels() (in module bluecast.tests.test_encode_target_labels)": [[49, "bluecast.tests.test_encode_target_labels.test_fit_transform_target_labels"]], "test_label_encoder_reverse_transform() (in module bluecast.tests.test_encode_target_labels)": [[49, "bluecast.tests.test_encode_target_labels.test_label_encoder_reverse_transform"]], "test_label_encoder_transform() (in module bluecast.tests.test_encode_target_labels)": [[49, "bluecast.tests.test_encode_target_labels.test_label_encoder_transform"]], "test_transform_target_labels() (in module bluecast.tests.test_encode_target_labels)": [[49, "bluecast.tests.test_encode_target_labels.test_transform_target_labels"]], "trained_label_encoder() (in module bluecast.tests.test_encode_target_labels)": [[49, "bluecast.tests.test_encode_target_labels.trained_label_encoder"]], "bluecast.tests.test_experiment_tracker": [[50, "module-bluecast.tests.test_experiment_tracker"]], "experiment_tracker() (in module bluecast.tests.test_experiment_tracker)": [[50, "bluecast.tests.test_experiment_tracker.experiment_tracker"]], "test_add_results() (in module bluecast.tests.test_experiment_tracker)": [[50, "bluecast.tests.test_experiment_tracker.test_add_results"]], "test_get_best_score_empty() (in module bluecast.tests.test_experiment_tracker)": [[50, "bluecast.tests.test_experiment_tracker.test_get_best_score_empty"]], "test_get_best_score_higher_is_better() (in module bluecast.tests.test_experiment_tracker)": [[50, "bluecast.tests.test_experiment_tracker.test_get_best_score_higher_is_better"]], "test_get_best_score_lower_is_better() (in module bluecast.tests.test_experiment_tracker)": [[50, "bluecast.tests.test_experiment_tracker.test_get_best_score_lower_is_better"]], "test_retrieve_results_as_df() (in module bluecast.tests.test_experiment_tracker)": [[50, "bluecast.tests.test_experiment_tracker.test_retrieve_results_as_df"]], "bluecast.tests.test_feature_type_detector": [[51, "module-bluecast.tests.test_feature_type_detector"]], "test_feature_type_detector() (in module bluecast.tests.test_feature_type_detector)": [[51, "bluecast.tests.test_feature_type_detector.test_feature_type_detector"]], "bluecast.tests.test_fine_tune": [[52, "module-bluecast.tests.test_fine_tune"]], "test_fine_tune_runs_without_errors() (in module bluecast.tests.test_fine_tune)": [[52, "bluecast.tests.test_fine_tune.test_fine_tune_runs_without_errors"]], "test_fine_tune_runs_without_errors_using_cv() (in module bluecast.tests.test_fine_tune)": [[52, "bluecast.tests.test_fine_tune.test_fine_tune_runs_without_errors_using_cv"]], "xgboost_model() (in module bluecast.tests.test_fine_tune)": [[52, "bluecast.tests.test_fine_tune.xgboost_model"]], "bluecast.tests.test_load_for_production": [[53, "module-bluecast.tests.test_load_for_production"]], "test_load_for_production() (in module bluecast.tests.test_load_for_production)": [[53, "bluecast.tests.test_load_for_production.test_load_for_production"]], "test_load_for_production_with_default_file_type() (in module bluecast.tests.test_load_for_production)": [[53, "bluecast.tests.test_load_for_production.test_load_for_production_with_default_file_type"]], "bluecast.tests.test_nulls_and_infs": [[54, "module-bluecast.tests.test_nulls_and_infs"]], "test_fill_infinite_values() (in module bluecast.tests.test_nulls_and_infs)": [[54, "bluecast.tests.test_nulls_and_infs.test_fill_infinite_values"]], "test_fill_nulls() (in module bluecast.tests.test_nulls_and_infs)": [[54, "bluecast.tests.test_nulls_and_infs.test_fill_nulls"]], "dummyclass (class in bluecast.tests.test_save_to_production)": [[55, "bluecast.tests.test_save_to_production.DummyClass"]], "bluecast.tests.test_save_to_production": [[55, "module-bluecast.tests.test_save_to_production"]], "test_save_to_production() (in module bluecast.tests.test_save_to_production)": [[55, "bluecast.tests.test_save_to_production.test_save_to_production"]], "bluecast.tests.test_schema_checks": [[56, "module-bluecast.tests.test_schema_checks"]], "test_transform_extra_columns() (in module bluecast.tests.test_schema_checks)": [[56, "bluecast.tests.test_schema_checks.test_transform_extra_columns"]], "test_transform_missing_columns() (in module bluecast.tests.test_schema_checks)": [[56, "bluecast.tests.test_schema_checks.test_transform_missing_columns"]], "test_transform_same_schema() (in module bluecast.tests.test_schema_checks)": [[56, "bluecast.tests.test_schema_checks.test_transform_same_schema"]], "bluecast.tests.test_shap_explanations": [[57, "module-bluecast.tests.test_shap_explanations"]], "mock_model() (in module bluecast.tests.test_shap_explanations)": [[57, "bluecast.tests.test_shap_explanations.mock_model"]], "test_data() (in module bluecast.tests.test_shap_explanations)": [[57, "bluecast.tests.test_shap_explanations.test_data"]], "test_eval_classifier_except() (in module bluecast.tests.test_shap_explanations)": [[57, "bluecast.tests.test_shap_explanations.test_eval_classifier_except"]], "test_shap_explanations() (in module bluecast.tests.test_shap_explanations)": [[57, "bluecast.tests.test_shap_explanations.test_shap_explanations"]], "bluecast.tests.test_target_encoding_binary": [[58, "module-bluecast.tests.test_target_encoding_binary"]], "sample_data() (in module bluecast.tests.test_target_encoding_binary)": [[58, "bluecast.tests.test_target_encoding_binary.sample_data"]], "test_transform_target_encode_binary_class() (in module bluecast.tests.test_target_encoding_binary)": [[58, "bluecast.tests.test_target_encoding_binary.test_transform_target_encode_binary_class"]], "bluecast.tests.test_target_encoding_multiclass": [[59, "module-bluecast.tests.test_target_encoding_multiclass"]], "test_multi_class_target_encoder() (in module bluecast.tests.test_target_encoding_multiclass)": [[59, "bluecast.tests.test_target_encoding_multiclass.test_multi_class_target_encoder"]], "bluecast.tests.test_train_test_split": [[60, "module-bluecast.tests.test_train_test_split"]], "test_train_test_split_cross() (in module bluecast.tests.test_train_test_split)": [[60, "bluecast.tests.test_train_test_split.test_train_test_split_cross"]], "test_train_test_split_time() (in module bluecast.tests.test_train_test_split)": [[60, "bluecast.tests.test_train_test_split.test_train_test_split_time"]], "author (in module conf)": [[61, "conf.author"]], "autoapi_dirs (in module conf)": [[61, "conf.autoapi_dirs"]], "autoapi_type (in module conf)": [[61, "conf.autoapi_type"]], "conf": [[61, "module-conf"]], "copyright (in module conf)": [[61, "conf.copyright"]], "exclude_patterns (in module conf)": [[61, "conf.exclude_patterns"]], "extensions (in module conf)": [[61, "conf.extensions"]], "html_static_path (in module conf)": [[61, "conf.html_static_path"]], "html_theme (in module conf)": [[61, "conf.html_theme"]], "project (in module conf)": [[61, "conf.project"]], "release (in module conf)": [[61, "conf.release"]], "templates_path (in module conf)": [[61, "conf.templates_path"]]}})
